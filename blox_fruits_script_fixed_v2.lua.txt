local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 0.1

-- Game Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")

-- Player Variables
local Player = Players.LocalPlayer
local Character
local Humanoid
local RootPart

-- Function to update character references
local function updateCharacter()
    Character = Player.Character or Player.CharacterAdded:Wait()
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
end

Player.CharacterAdded:Connect(updateCharacter)
if Player.Character then
    updateCharacter()
end

-- Global Variables and Settings
local Settings = {
    AutoFarmLevel = false,
    AutoFarmNearest = false,
    FastAttack = false,
    BringMob = false,
    AutoBuso = false,
    AutoObservation = false,
    BringFruit = false,
    StoreFruit = false,
    ESPFruit = false,
    FruitNotification = false,
    AutoSaber = false,
    AutoSecondSea = false,
    AutoRaceV2 = false,
    AutoRaceV3 = false,
    KillAura = false,
    AutoBones = false,
    SelectedWeapon = "Melee",
    SelectedBoss = "",
    SelectedLocation = "",
    AttackDistance = 35,
    TeleportHeight = 20,
    ClickDelay = 0.2,
    FarmDistance = 20
}

-- Sea Detection
local function getCurrentSea()
    local PlaceId = game.PlaceId
    if PlaceId == 2753915549 then
        return 1
    elseif PlaceId == 4442272183 then
        return 2
    elseif PlaceId == 7449423635 then
        return 3
    else
        return 1
    end
end

local CurrentSea = getCurrentSea()

-- Complete Quest and NPC Data
local QuestData = {
    -- FIRST SEA
    [1] = {
        {Level = {1, 9}, Quest = "BanditQuest1", QuestNumber = 1, NPC = "Bandit", Location = CFrame.new(1059, 17, 1549)},
        {Level = {10, 14}, Quest = "JungleQuest", QuestNumber = 1, NPC = "Monkey", Location = CFrame.new(-1448, 50, 38)},
        {Level = {15, 29}, Quest = "BuggyQuest1", QuestNumber = 1, NPC = "Pirate", Location = CFrame.new(-1181, 5, 3803)},
        {Level = {30, 39}, Quest = "DesertQuest", QuestNumber = 1, NPC = "Desert Bandit", Location = CFrame.new(924, 7, 4481)},
        {Level = {40, 59}, Quest = "DesertQuest", QuestNumber = 2, NPC = "Desert Officer", Location = CFrame.new(924, 7, 4481)},
        {Level = {60, 74}, Quest = "SnowQuest", QuestNumber = 1, NPC = "Snow Bandit", Location = CFrame.new(1347, 104, -1319)},
        {Level = {75, 89}, Quest = "SnowQuest", QuestNumber = 2, NPC = "Snowman", Location = CFrame.new(1347, 104, -1319)},
        {Level = {90, 99}, Quest = "MarineQuest", QuestNumber = 1, NPC = "Chief Petty Officer", Location = CFrame.new(-2440, 7, 2025)},
        {Level = {100, 119}, Quest = "MarineQuest", QuestNumber = 2, NPC = "Rear Admiral", Location = CFrame.new(-2440, 7, 2025)},
        {Level = {120, 149}, Quest = "JungleQuest", QuestNumber = 2, NPC = "Gorilla King", Location = CFrame.new(-1612, 37, 149)},
        {Level = {150, 174}, Quest = "ColosseumQuest", QuestNumber = 1, NPC = "Gladiator", Location = CFrame.new(-1427, 8, -2673)},
        {Level = {175, 189}, Quest = "ColosseumQuest", QuestNumber = 2, NPC = "Toga Warrior", Location = CFrame.new(-1427, 8, -2673)},
        {Level = {190, 209}, Quest = "ColosseumQuest", QuestNumber = 3, NPC = "Gladiator", Location = CFrame.new(-1427, 8, -2673)},
        {Level = {210, 249}, Quest = "PrisonQuest", QuestNumber = 1, NPC = "Prisoner", Location = CFrame.new(4875, 6, 734)},
        {Level = {250, 274}, Quest = "PrisonQuest", QuestNumber = 2, NPC = "Dangerous Prisoner", Location = CFrame.new(4875, 6, 734)},
        {Level = {275, 299}, Quest = "ColosseumQuest", QuestNumber = 2, NPC = "Toga Warrior", Location = CFrame.new(-1427, 8, -2673)},
        {Level = {300, 324}, Quest = "MagmaQuest", QuestNumber = 1, NPC = "Lava Pirate", Location = CFrame.new(-5231, 9, -4530)},
        {Level = {325, 374}, Quest = "MagmaQuest", QuestNumber = 2, NPC = "Head Baker", Location = CFrame.new(-5231, 9, -4530)},
        {Level = {375, 399}, Quest = "MagmaQuest", QuestNumber = 3, NPC = "Cake Prince", Location = CFrame.new(-5231, 9, -4530)},
        {Level = {400, 449}, Quest = "FishmanQuest", QuestNumber = 1, NPC = "Fishman Warrior", Location = CFrame.new(61122, 19, 1569)},
        {Level = {450, 474}, Quest = "FishmanQuest", QuestNumber = 2, NPC = "Fishman Commando", Location = CFrame.new(61122, 19, 1569)},
        {Level = {475, 524}, Quest = "SkyQuest", QuestNumber = 1, NPC = "God's Guard", Location = CFrame.new(-4721, 845, -1954)},
        {Level = {525, 549}, Quest = "SkyQuest", QuestNumber = 2, NPC = "Shanda", Location = CFrame.new(-4721, 845, -1954)},
        {Level = {550, 624}, Quest = "SkyQuest", QuestNumber = 3, NPC = "Royal Squad", Location = CFrame.new(-4721, 845, -1954)},
        {Level = {625, 649}, Quest = "SkyQuest", QuestNumber = 4, NPC = "Royal Soldier", Location = CFrame.new(-4721, 845, -1954)},
        {Level = {650, 699}, Quest = "FountainQuest", QuestNumber = 1, NPC = "Galley Pirate", Location = CFrame.new(5127, 43, 4041)},
        {Level = {700, 849}, Quest = "FountainQuest", QuestNumber = 2, NPC = "Galley Captain", Location = CFrame.new(5127, 43, 4041)}
    },
    -- SECOND SEA
    [2] = {
        {Level = {700, 724}, Quest = "Area1Quest", QuestNumber = 1, NPC = "Raider", Location = CFrame.new(-430, 73, 1836)},
        {Level = {725, 774}, Quest = "Area1Quest", QuestNumber = 2, NPC = "Mercenary", Location = CFrame.new(-430, 73, 1836)},
        {Level = {775, 849}, Quest = "Area1Quest", QuestNumber = 3, NPC = "Swan Pirate", Location = CFrame.new(-430, 73, 1836)},
        {Level = {850, 874}, Quest = "Area2Quest", QuestNumber = 1, NPC = "Factory Staff", Location = CFrame.new(638, 73, 918)},
        {Level = {875, 899}, Quest = "Area2Quest", QuestNumber = 2, NPC = "Marine Lieutenant", Location = CFrame.new(638, 73, 918)},
        {Level = {900, 949}, Quest = "Area2Quest", QuestNumber = 3, NPC = "Marine Captain", Location = CFrame.new(638, 73, 918)},
        {Level = {950, 974}, Quest = "MarineQuest3", QuestNumber = 1, NPC = "Zombie", Location = CFrame.new(-5736, 9, -877)},
        {Level = {975, 999}, Quest = "MarineQuest3", QuestNumber = 2, NPC = "Vampire", Location = CFrame.new(-5736, 9, -877)},
        {Level = {1000, 1049}, Quest = "SnowMountainQuest", QuestNumber = 1, NPC = "Snow Trooper", Location = CFrame.new(609, 401, -5371)},
        {Level = {1050, 1099}, Quest = "SnowMountainQuest", QuestNumber = 2, NPC = "Winter Warrior", Location = CFrame.new(609, 401, -5371)},
        {Level = {1100, 1124}, Quest = "FireSideQuest", QuestNumber = 1, NPC = "Lab Subordinate", Location = CFrame.new(-5492, 314, -2841)},
        {Level = {1125, 1174}, Quest = "FireSideQuest", QuestNumber = 2, NPC = "Horned Warrior", Location = CFrame.new(-5492, 314, -2841)},
        {Level = {1175, 1199}, Quest = "IceSideQuest", QuestNumber = 1, NPC = "Magma Ninja", Location = CFrame.new(-6059, 16, -4904)},
        {Level = {1200, 1249}, Quest = "IceSideQuest", QuestNumber = 2, NPC = "Lava Pirate", Location = CFrame.new(-6059, 16, -4904)},
        {Level = {1250, 1274}, Quest = "ShipQuest1", QuestNumber = 1, NPC = "Ship Deckhand", Location = CFrame.new(1037, 125, 32911)},
        {Level = {1275, 1299}, Quest = "ShipQuest1", QuestNumber = 2, NPC = "Ship Engineer", Location = CFrame.new(1037, 125, 32911)},
        {Level = {1300, 1324}, Quest = "ShipQuest2", QuestNumber = 1, NPC = "Ship Steward", Location = CFrame.new(968, 125, 33244)},
        {Level = {1325, 1349}, Quest = "ShipQuest2", QuestNumber = 2, NPC = "Ship Officer", Location = CFrame.new(968, 125, 33244)},
        {Level = {1350, 1374}, Quest = "FrostQuest", QuestNumber = 1, NPC = "Arctic Warrior", Location = CFrame.new(5669, 28, -6482)},
        {Level = {1375, 1424}, Quest = "FrostQuest", QuestNumber = 2, NPC = "Snow Lurker", Location = CFrame.new(5669, 28, -6482)},
        {Level = {1425, 1449}, Quest = "ForgottenQuest", QuestNumber = 1, NPC = "Sea Soldier", Location = CFrame.new(-3053, 237, -10148)},
        {Level = {1450, 1499}, Quest = "ForgottenQuest", QuestNumber = 2, NPC = "Water Fighter", Location = CFrame.new(-3053, 237, -10148)}
    },
    -- THIRD SEA
    [3] = {
        {Level = {1500, 1524}, Quest = "PiratePortQuest", QuestNumber = 1, NPC = "Pirate Millionaire", Location = CFrame.new(-290, 44, 5577)},
        {Level = {1525, 1574}, Quest = "PiratePortQuest", QuestNumber = 2, NPC = "Pistol Billionaire", Location = CFrame.new(-290, 44, 5577)},
        {Level = {1575, 1599}, Quest = "AmazonQuest", QuestNumber = 1, NPC = "Dragon Crew Warrior", Location = CFrame.new(5832, 52, -1636)},
        {Level = {1600, 1624}, Quest = "AmazonQuest", QuestNumber = 2, NPC = "Dragon Crew Archer", Location = CFrame.new(5832, 52, -1636)},
        {Level = {1625, 1649}, Quest = "MarineTreeIsland", QuestNumber = 1, NPC = "Female Islander", Location = CFrame.new(2181, 73, -4773)},
        {Level = {1650, 1699}, Quest = "MarineTreeIsland", QuestNumber = 2, NPC = "Giant Islander", Location = CFrame.new(2181, 73, -4773)},
        {Level = {1700, 1724}, Quest = "DeepForestIsland", QuestNumber = 1, NPC = "Marine Commodore", Location = CFrame.new(-13232, 333, -7627)},
        {Level = {1725, 1774}, Quest = "DeepForestIsland", QuestNumber = 2, NPC = "Marine Rear Admiral", Location = CFrame.new(-13232, 333, -7627)},
        {Level = {1775, 1799}, Quest = "DeepForestIsland2", QuestNumber = 1, NPC = "Mythological Pirate", Location = CFrame.new(-13232, 333, -7627)},
        {Level = {1800, 1849}, Quest = "DeepForestIsland2", QuestNumber = 2, NPC = "Jungle Pirate", Location = CFrame.new(-13232, 333, -7627)},
        {Level = {1850, 1899}, Quest = "HydraIsland", QuestNumber = 1, NPC = "Musketeer Pirate", Location = CFrame.new(5259, 39, -4498)},
        {Level = {1900, 1924}, Quest = "HydraIsland", QuestNumber = 2, NPC = "Reborn Skeleton", Location = CFrame.new(5259, 39, -4498)},
        {Level = {1925, 1974}, Quest = "HydraIsland", QuestNumber = 3, NPC = "Living Zombie", Location = CFrame.new(5259, 39, -4498)},
        {Level = {1975, 1999}, Quest = "HydraIsland", QuestNumber = 4, NPC = "Demonic Soul", Location = CFrame.new(5259, 39, -4498)},
        {Level = {2000, 2024}, Quest = "HydraIsland", QuestNumber = 5, NPC = "Posessed Mummy", Location = CFrame.new(5259, 39, -4498)},
        {Level = {2025, 2049}, Quest = "HauntedQuest", QuestNumber = 1, NPC = "Peanut Scout", Location = CFrame.new(-9482, 142, 5567)},
        {Level = {2050, 2074}, Quest = "HauntedQuest", QuestNumber = 2, NPC = "Peanut President", Location = CFrame.new(-9482, 142, 5567)},
        {Level = {2075, 2099}, Quest = "NutsIslandQuest", QuestNumber = 1, NPC = "Ice Cream Chef", Location = CFrame.new(-821, 66, -10965)},
        {Level = {2100, 2124}, Quest = "NutsIslandQuest", QuestNumber = 2, NPC = "Ice Cream Commander", Location = CFrame.new(-821, 66, -10965)},
        {Level = {2125, 2149}, Quest = "IceCreamIslandQuest", QuestNumber = 1, NPC = "Cookie Crafter", Location = CFrame.new(-821, 66, -10965)},
        {Level = {2150, 2199}, Quest = "IceCreamIslandQuest", QuestNumber = 2, NPC = "Cake Guard", Location = CFrame.new(-821, 66, -10965)},
        {Level = {2200, 2224}, Quest = "CakeQuest1", QuestNumber = 1, NPC = "Baking Staff", Location = CFrame.new(-1928, 38, -12030)},
        {Level = {2225, 2249}, Quest = "CakeQuest1", QuestNumber = 2, NPC = "Head Baker", Location = CFrame.new(-1928, 38, -12030)},
        {Level = {2250, 2274}, Quest = "CakeQuest2", QuestNumber = 1, NPC = "Cocoa Warrior", Location = CFrame.new(-1928, 38, -12030)},
        {Level = {2275, 2299}, Quest = "CakeQuest2", QuestNumber = 2, NPC = "Chocolate Bar Battler", Location = CFrame.new(-1928, 38, -12030)},
        {Level = {2300, 2324}, Quest = "ChocQuest1", QuestNumber = 1, NPC = "Sweet Thief", Location = CFrame.new(232, 25, -12200)},
        {Level = {2325, 2349}, Quest = "ChocQuest1", QuestNumber = 2, NPC = "Candy Rebel", Location = CFrame.new(232, 25, -12200)},
        {Level = {2350, 2374}, Quest = "ChocQuest2", QuestNumber = 1, NPC = "Candy Pirate", Location = CFrame.new(232, 25, -12200)},
        {Level = {2375, 2399}, Quest = "ChocQuest2", QuestNumber = 2, NPC = "Snow Demon", Location = CFrame.new(232, 25, -12200)},
        {Level = {2400, 2424}, Quest = "SeaBeastQuest1", QuestNumber = 1, NPC = "Isle Outlaw", Location = CFrame.new(-16544, 56, -173)},
        {Level = {2425, 2449}, Quest = "SeaBeastQuest1", QuestNumber = 2, NPC = "Island Boy", Location = CFrame.new(-16544, 56, -173)},
        {Level = {2450, 2474}, Quest = "TikiQuest1", QuestNumber = 1, NPC = "Sun-kissed Warrior", Location = CFrame.new(-16544, 56, -173)},
        {Level = {2475, 2499}, Quest = "TikiQuest1", QuestNumber = 2, NPC = "Isle Champion", Location = CFrame.new(-16544, 56, -173)},
        {Level = {2500, 2524}, Quest = "TikiQuest2", QuestNumber = 1, NPC = "Leviathan", Location = CFrame.new(-16544, 56, -173)},
        {Level = {2525, 2549}, Quest = "TikiQuest2", QuestNumber = 2, NPC = "Ancient Fishman Warrior", Location = CFrame.new(-16544, 56, -173)},
        {Level = {2550, 2574}, Quest = "KitsugaQuest", QuestNumber = 1, NPC = "Kitsune", Location = CFrame.new(-14542, 313, -3022)},
        {Level = {2575, 2599}, Quest = "KitsugaQuest", QuestNumber = 2, NPC = "Tanuki", Location = CFrame.new(-14542, 313, -3022)},
        {Level = {2600, 2624}, Quest = "MoonQuest", QuestNumber = 1, NPC = "Rabbit", Location = CFrame.new(-5496, 1050, -11173)},
        {Level = {2625, 2650}, Quest = "MoonQuest", QuestNumber = 2, NPC = "Jotaro", Location = CFrame.new(-5496, 1050, -11173)}
    }
}

-- Location Data for Teleportation
local LocationData = {
    [1] = {
        ["Starter Island"] = CFrame.new(945, 17, 1552),
        ["Jungle"] = CFrame.new(-1612, 37, 149),
        ["Pirate Village"] = CFrame.new(-1181, 5, 3803),
        ["Desert"] = CFrame.new(944, 21, 4481),
        ["Frozen Village"] = CFrame.new(1347, 104, -1319),
        ["Marine Fortress"] = CFrame.new(-2566, 7, 2045),
        ["Skylands"] = CFrame.new(-4815, 718, -2619),
        ["Prison"] = CFrame.new(4875, 6, 734),
        ["Colosseum"] = CFrame.new(-1427, 8, -2673),
        ["Magma Village"] = CFrame.new(-5231, 9, -4530),
        ["Under Water Island"] = CFrame.new(61164, 5, 1819),
        ["Fountain City"] = CFrame.new(5127, 59, 4105),
        ["Mob Island"] = CFrame.new(-2850, 7, 2550)
    },
    [2] = {
        ["Kingdom of Rose"] = CFrame.new(-288, 7, 1387),
        ["Usoapp's Island"] = CFrame.new(4808, 8, 2863),
        ["Green Zone"] = CFrame.new(-2448, 73, 1816),
        ["Factory"] = CFrame.new(424, 211, -427),
        ["Coloseum"] = CFrame.new(-1503, 219, 1369),
        ["Zombie Island"] = CFrame.new(-5736, 9, -877),
        ["Two Snow Mountain"] = CFrame.new(753, 408, -5274),
        ["Punk Hazard"] = CFrame.new(-6127, 16, -4904),
        ["Cursed Ship"] = CFrame.new(923, 125, 32853),
        ["Ice Castle"] = CFrame.new(6148, 294, -6741),
        ["Forgotten Island"] = CFrame.new(-3053, 237, -10148),
        ["Ussop Island"] = CFrame.new(4816, 8, 2863),
        ["Mini Sky Island"] = CFrame.new(-288, 49326, 664)
    },
    [3] = {
        ["Mansion"] = CFrame.new(-12471, 375, -7551),
        ["Port Town"] = CFrame.new(-290, 7, 5343),
        ["Great Tree"] = CFrame.new(2681, 1682, -7190),
        ["Castle On The Sea"] = CFrame.new(-5085, 316, -3156),
        ["MiniSky"] = CFrame.new(-260, 49325, 664),
        ["Hydra Island"] = CFrame.new(5228, 604, -345),
        ["Floating Turtle"] = CFrame.new(-13274, 353, -7835),
        ["Haunted Castle"] = CFrame.new(-9515, 142, 5618),
        ["Ice Cream Island"] = CFrame.new(-902, 79, -10988),
        ["Peanut Island"] = CFrame.new(-2062, 50, -10232),
        ["Cake Island"] = CFrame.new(-1884, 19, -11666),
        ["Cocoa Island"] = CFrame.new(87, 73, -12297),
        ["Candy Island"] = CFrame.new(-1014, 149, -14200),
        ["Tiki Outpost"] = CFrame.new(-16545, 56, -172),
        ["Sea Beast Island"] = CFrame.new(-16918, 9, 439),
        ["Temple of Time"] = CFrame.new(28734, 14896, 105),
        ["Moon"] = CFrame.new(-5496, 1050, -11173)
    }
}

-- Boss Data
local BossData = {
    [1] = {
        "The Gorilla King", "Bobby", "Yeti", "Mob Leader", "Vice Admiral", 
        "Warden", "Chief Warden", "Swan", "Magma Admiral", "Fishman Lord", 
        "Wysper", "Thunder God", "Cyborg"
    },
    [2] = {
        "Diamond", "Jeremy", "Fajita", "Don Swan", "Smoke Admiral", 
        "Cursed Captain", "Darkbeard", "Order", "Awakened Ice Admiral"
    },
    [3] = {
        "Stone", "Island Empress", "Kilo Admiral", "Captain Elephant", 
        "Beautiful Pirate", "rip_indra True Form", "Longma", "Soul Reaper", 
        "Cake Queen", "Dough King", "Dough Prince"
    }
}

-- Weapon Utilities
local function equipWeapon(weaponName)
    if weaponName then
        local tool = Player.Backpack:FindFirstChild(weaponName) or Character:FindFirstChild(weaponName)
        if tool and tool.Parent == Player.Backpack then
            Humanoid:EquipTool(tool)
        end
    end
end

local function getWeaponHandle()
    for _, tool in pairs(Character:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("Handle") then
            return tool.Handle
        end
    end
    return nil
end

-- Advanced Combat System
local function performAttack()
    if Settings.SelectedWeapon == "Melee" then
        local combat = ReplicatedStorage:FindFirstChild("Combat") or ReplicatedStorage:FindFirstChild("Melee")
        if combat then
            combat:FireServer()
        end
        game:GetService("VirtualUser"):CaptureController()
        game:GetService("VirtualUser"):ClickButton1(Vector2.new(1280, 672))
    elseif Settings.SelectedWeapon == "Sword" then
        local combat = ReplicatedStorage:FindFirstChild("Combat") or ReplicatedStorage:FindFirstChild("Sword")
        if combat then
            combat:FireServer()
        end
        game:GetService("VirtualUser"):CaptureController()
        game:GetService("VirtualUser"):ClickButton1(Vector2.new(1280, 672))
    elseif Settings.SelectedWeapon == "Gun" then
        local combat = ReplicatedStorage:FindFirstChild("Combat") or ReplicatedStorage:FindFirstChild("Gun")
        if combat then
            combat:FireServer()
        end
        game:GetService("VirtualUser"):CaptureController()
        game:GetService("VirtualUser"):ClickButton1(Vector2.new(1280, 672))
    end
end

-- Fast Attack Implementation
local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", function(...)
    local self, args = ...
    local method = getnamecallmethod()
    
    if method == "FireServer" and Settings.FastAttack then
        if string.find(self.Name, "Combat") or string.find(self.Name, "Melee") then
            if Settings.ClickDelay then
                wait(Settings.ClickDelay)
            end
        end
    end
    
    return oldNamecall(...)
end)

-- Buso Haki Functions
local function enableBusoHaki()
    local args = {
        [1] = "Buso"
    }
    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
end

local function enableObservationHaki()
    local args = {
        [1] = "Ken",
        [2] = true
    }
    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
end

-- Teleportation System
local function safeTeleport(cframe)
    if not Character or not Character:FindFirstChild("HumanoidRootPart") then return end
    
    local success, err = pcall(function()
        Character.HumanoidRootPart.CFrame = cframe
    end)
    
    if not success then
        local tween = TweenService:Create(
            Character.HumanoidRootPart,
            TweenInfo.new(0.5, Enum.EasingStyle.Linear),
            {CFrame = cframe}
        )
        tween:Play()
    end
end

-- Quest System
local function getPlayerLevel()
    return Player.Data and Player.Data.Level and Player.Data.Level.Value or 1
end

local function getCurrentQuest()
    local level = getPlayerLevel()
    local questData = QuestData[CurrentSea]
    
    if questData then
        for _, quest in pairs(questData) do
            if level >= quest.Level[1] and level <= quest.Level[2] then
                return quest
            end
        end
    end
    return nil
end

local function takeQuest(questInfo)
    if not questInfo then return false end
    
    local questGiver = Workspace.NPCs:FindFirstChild(questInfo.Quest)
    if not questGiver then
        -- Try alternative locations
        for _, npc in pairs(Workspace.NPCs:GetChildren()) do
            if string.find(npc.Name, questInfo.Quest) then
                questGiver = npc
                break
            end
        end
    end
    
    if questGiver and questGiver:FindFirstChild("HumanoidRootPart") then
        safeTeleport(questGiver.HumanoidRootPart.CFrame)
        wait(0.5)
        
        local args = {
            [1] = "StartQuest",
            [2] = questInfo.Quest,
            [3] = questInfo.QuestNumber
        }
        ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
        return true
    end
    return false
end

-- Mob Farming System
local function getNearestEnemy(enemyName)
    local nearest = nil
    local shortestDistance = math.huge
    
    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
        if enemy.Name == enemyName and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
            if enemy.Humanoid.Health > 0 then
                local distance = (Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearest = enemy
                end
            end
        end
    end
    
    return nearest
end

local function bringMobs(targetPosition, range)
    if not Settings.BringMob then return end
    
    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
        if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
            if enemy.Humanoid.Health > 0 then
                local distance = (targetPosition - enemy.HumanoidRootPart.Position).Magnitude
                if distance <= range then
                    enemy.HumanoidRootPart.CFrame = targetPosition
                    enemy.HumanoidRootPart.CanCollide = false
                    enemy.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
                    if enemy:FindFirstChild("Head") then
                        enemy.Head.CanCollide = false
                    end
                end
            end
        end
    end
end

-- Auto Farm Level Implementation
local function autoFarmLevel()
    spawn(function()
        while Settings.AutoFarmLevel do
            local questInfo = getCurrentQuest()
            
            if questInfo then
                local hasQuest = Player.PlayerGui.Main.Quest.Visible
                
                if not hasQuest then
                    takeQuest(questInfo)
                    wait(2)
                end
                
                local enemy = getNearestEnemy(questInfo.NPC)
                if enemy then
                    local attackPosition = enemy.HumanoidRootPart.CFrame * CFrame.new(0, Settings.TeleportHeight, 0)
                    safeTeleport(attackPosition)
                    
                    if Settings.AutoBuso then
                        enableBusoHaki()
                    end
                    
                    if Settings.BringMob then
                        bringMobs(enemy.HumanoidRootPart.Position, Settings.FarmDistance)
                    end
                    
                    -- Attack the enemy
                    repeat
                        if Settings.FastAttack then
                            performAttack()
                        end
                        wait(Settings.ClickDelay or 0.1)
                    until not enemy.Parent or enemy.Humanoid.Health <= 0 or not Settings.AutoFarmLevel
                end
            end
            wait(1)
        end
    end)
end

-- Auto Farm Nearest Mobs
local function autoFarmNearest()
    spawn(function()
        while Settings.AutoFarmNearest do
            local nearestEnemy = nil
            local shortestDistance = math.huge
            
            for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                    if enemy.Humanoid.Health > 0 then
                        local distance = (Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                        if distance < shortestDistance and distance <= 2000 then
                            shortestDistance = distance
                            nearestEnemy = enemy
                        end
                    end
                end
            end
            
            if nearestEnemy then
                local attackPosition = nearestEnemy.HumanoidRootPart.CFrame * CFrame.new(0, Settings.TeleportHeight, 0)
                safeTeleport(attackPosition)
                
                if Settings.AutoBuso then
                    enableBusoHaki()
                end
                
                if Settings.BringMob then
                    bringMobs(nearestEnemy.HumanoidRootPart.Position, Settings.FarmDistance)
                end
                
                repeat
                    if Settings.FastAttack then
                        performAttack()
                    end
                    wait(Settings.ClickDelay or 0.1)
                until not nearestEnemy.Parent or nearestEnemy.Humanoid.Health <= 0 or not Settings.AutoFarmNearest
            end
            wait(1)
        end
    end)
end

-- Fruit Functions
local function collectFruits()
    if not Settings.BringFruit then return end
    
    for _, fruit in pairs(Workspace:GetChildren()) do
        if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
            fruit.Handle.CFrame = Character.HumanoidRootPart.CFrame
        end
    end
end

local function storeFruits()
    if not Settings.StoreFruit then return end
    
    local args = {
        [1] = "StoreFruit",
        [2] = Player.Character:FindFirstChildOfClass("Tool") and Player.Character:FindFirstChildOfClass("Tool").Name or Player.Backpack:FindFirstChildOfClass("Tool") and Player.Backpack:FindFirstChildOfClass("Tool").Name
    }
    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
end

-- Auto Saber Implementation
local function autoSaber()
    spawn(function()
        while Settings.AutoSaber and CurrentSea == 1 do
            local playerLevel = getPlayerLevel()
            if playerLevel >= 200 then
                -- Saber quest logic
                local args = {
                    [1] = "ProQuestProgress",
                    [2] = "SaberExpert"
                }
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                
                -- Additional saber quest steps would go here
                wait(5)
            end
            wait(1)
        end
    end)
end

-- Auto Second Sea Implementation
local function autoSecondSea()
    spawn(function()
        while Settings.AutoSecondSea and CurrentSea == 1 do
            local playerLevel = getPlayerLevel()
            if playerLevel >= 700 then
                -- Second sea quest logic
                local args = {
                    [1] = "DressrosaQuestProgress",
                    [2] = "Detective"
                }
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                
                wait(5)
            end
            wait(1)
        end
    end)
end

-- PvP Functions
local function getNearestPlayer()
    local nearest = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetChildren()) do
        if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearest = player
            end
        end
    end
    
    return nearest
end

local function aimAtPlayer(target)
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        local lookVector = (target.Character.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).Unit
        Character.HumanoidRootPart.CFrame = CFrame.lookAt(Character.HumanoidRootPart.Position, target.Character.HumanoidRootPart.Position)
    end
end

-- UI Creation with proper toggle functionality
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")

ScreenGui.Name = "SpaceHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton
UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45
UIScale.Parent = ImageButton
UIScale.Scale = 1

local function animateButton()
    local tween1 = TweenService:Create(UIScale, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Scale = 0.8})
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = TweenService:Create(UIScale, TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Scale = 1.1})
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = TweenService:Create(UIScale, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Scale = 1})
            tween3:Play()
        end)
    end)
end

local isGuiVisible = true
ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    
    if Window and Window.Root then
        isGuiVisible = not isGuiVisible
        Window.Root.Visible = isGuiVisible
    end
end)

wait(3)

-- Load Fluent UI Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "ENCHANTED HUB | BLOX FRUIT",
    SubTitle = "Created by AABIS",
    TabWidth = 155,
    Size = UDim2.fromOffset(600, 500),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "zap" }),
    Raid = Window:AddTab({ Title = "Raid", Icon = "shield" }),
    V4 = Window:AddTab({ Title = "V4 Awakening", Icon = "star" }),
    PvP = Window:AddTab({ Title = "PvP", Icon = "sword" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Sea = Window:AddTab({ Title = "Sea", Icon = "anchor" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- MAIN TAB IMPLEMENTATION
local WeaponDropdown = Tabs.Main:AddDropdown("WeaponDropdown", {
    Title = "Choose Weapon",
    Values = {"Melee", "Sword", "Blox Fruit", "Gun"},
    Multi = false,
    Default = 1,
})
WeaponDropdown:OnChanged(function(Value)
    Settings.SelectedWeapon = Value
end)

Tabs.Main:AddToggle("FastAttack", {Title = "Fast Attack", Default = false}):OnChanged(function(Value)
    Settings.FastAttack = Value
end)

Tabs.Main:AddToggle("BringMob", {Title = "Bring Mob", Default = false}):OnChanged(function(Value)
    Settings.BringMob = Value
end)

Tabs.Main:AddToggle("AutoBuso", {Title = "Auto Buso Haki", Default = false}):OnChanged(function(Value)
    Settings.AutoBuso = Value
end)

Tabs.Main:AddParagraph({Title = "SPECIAL", Content = "Special features and utilities"})

Tabs.Main:AddButton({
    Title = "Open Fruit Stock",
    Description = "Check current fruit stock",
    Callback = function()
        local args = {[1] = "GetFruits"}
        ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
    end
})

Tabs.Main:AddToggle("ESPFruit", {Title = "ESP Fruit", Default = false}):OnChanged(function(Value)
    Settings.ESPFruit = Value
end)

Tabs.Main:AddToggle("FruitNotif", {Title = "Fruit Notification", Default = false}):OnChanged(function(Value)
    Settings.FruitNotification = Value
end)

Tabs.Main:AddToggle("BringFruit", {Title = "Bring Fruit", Default = false}):OnChanged(function(Value)
    Settings.BringFruit = Value
    if Value then
        spawn(function()
            while Settings.BringFruit do
                collectFruits()
                wait(1)
            end
        end)
    end
end)

Tabs.Main:AddToggle("StoreFruit", {Title = "Store Fruit", Default = false}):OnChanged(function(Value)
    Settings.StoreFruit = Value
    if Value then
        storeFruits()
    end
end)

-- Sea-specific features
if CurrentSea == 1 then
    Tabs.Main:AddToggle("AutoSaber", {Title = "Auto Saber Sword", Default = false}):OnChanged(function(Value)
        Settings.AutoSaber = Value
        if Value then
            autoSaber()
        end
    end)
    
    Tabs.Main:AddToggle("AutoSecondSea", {Title = "Auto Second Sea Quest", Default = false}):OnChanged(function(Value)
        Settings.AutoSecondSea = Value
        if Value then
            autoSecondSea()
        end
    end)
elseif CurrentSea == 2 then
    Tabs.Main:AddToggle("AutoRaceV2", {Title = "Auto Race V2", Default = false}):OnChanged(function(Value)
        Settings.AutoRaceV2 = Value
    end)
    
    Tabs.Main:AddToggle("AutoRaceV3", {Title = "Auto Race V3", Default = false}):OnChanged(function(Value)
        Settings.AutoRaceV3 = Value
    end)
end

-- Player Stats
Tabs.Main:AddParagraph({Title = "STATS", Content = "Player Statistics"})
local function updateStatsDisplay()
    local level = getPlayerLevel()
    local money = Player.Data.Beli.Value or 0
    local fragments = Player.Data.Fragments.Value or 0
    local race = Player.Data.Race.Value or "Human"
    local bounty = Player.Data.Bounty.Value or 0
    
    return string.format("Level: %d\nMoney: %s\nFragments: %d\nRace: %s\nBounty: %s\nSea: %d", 
        level, tostring(money), fragments, race, tostring(bounty), CurrentSea)
end

local StatsLabel = Tabs.Main:AddParagraph({Title = "Current Stats", Content = updateStatsDisplay()})

-- AUTO FARM TAB IMPLEMENTATION
Tabs.AutoFarm:AddToggle("AutoFarmLevel", {Title = "Auto Farm Level", Default = false}):OnChanged(function(Value)
    Settings.AutoFarmLevel = Value
    if Value then
        autoFarmLevel()
    end
end)

Tabs.AutoFarm:AddToggle("AutoFarmNearest", {Title = "Auto Farm Nearest Mobs", Default = false}):OnChanged(function(Value)
    Settings.AutoFarmNearest = Value
    if Value then
        autoFarmNearest()
    end
end)

Tabs.AutoFarm:AddParagraph({Title = "Boss Section", Content = "Boss farming features"})

local BossDropdown = Tabs.AutoFarm:AddDropdown("BossDropdown", {
    Title = "Select Boss",
    Values = BossData[CurrentSea] or {},
    Multi = false,
    Default = 1,
})
BossDropdown:OnChanged(function(Value)
    Settings.SelectedBoss = Value
end)

Tabs.AutoFarm:AddButton({
    Title = "Kill Selected Boss",
    Description = "Farm the selected boss with quest",
    Callback = function()
        if Settings.SelectedBoss then
            -- Kill boss logic here
            print("Killing boss: " .. Settings.SelectedBoss)
        end
    end
})

Tabs.AutoFarm:AddToggle("KillAllBosses", {Title = "Kill All Bosses", Default = false}):OnChanged(function(Value)
    -- Kill all bosses logic
end)

Tabs.AutoFarm:AddParagraph({Title = "SPECIAL FARM", Content = "Special farming features"})

Tabs.AutoFarm:AddToggle("AutoBones", {Title = "Auto Farm Bones", Default = false}):OnChanged(function(Value)
    Settings.AutoBones = Value
end)

Tabs.AutoFarm:AddToggle("AutoRipIndra", {Title = "Auto Rip Indra", Default = false}):OnChanged(function(Value)
    -- Auto rip indra logic
end)

Tabs.AutoFarm:AddToggle("AutoDoughPrince", {Title = "Auto Dough Prince", Default = false}):OnChanged(function(Value)
    -- Auto dough prince logic
end)

Tabs.AutoFarm:AddToggle("AutoDoughKing", {Title = "Auto Dough King", Default = false}):OnChanged(function(Value)
    -- Auto dough king logic
end)

-- RAID TAB IMPLEMENTATION
if CurrentSea >= 2 then
    local ChipDropdown = Tabs.Raid:AddDropdown("ChipDropdown", {
        Title = "Buy Chip",
        Values = {"Flame", "Ice", "Quake", "Light", "Dark", "String", "Barrier", "Rubber", "Magma", "Door", "Buddha", "Love", "Spider", "Sound", "Phoenix", "Portal", "Rumble", "Pain", "Blizzard", "Gravity", "Mammoth", "T-Rex", "Dough", "Shadow", "Venom", "Control", "Spirit", "Dragon", "Leopard", "Kitsune"},
        Multi = false,
        Default = 1,
    })
    ChipDropdown:OnChanged(function(Value)
        Settings.SelectedChip = Value
    end)
    
    Tabs.Raid:AddButton({
        Title = "Buy Selected Chip",
        Description = "Purchase the selected raid chip",
        Callback = function()
            if Settings.SelectedChip then
                local args = {[1] = "RaidsNpc", [2] = "Select", [3] = Settings.SelectedChip}
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
            end
        end
    })
    
    Tabs.Raid:AddToggle("KillAura", {Title = "Kill Aura", Default = false}):OnChanged(function(Value)
        Settings.KillAura = Value
        if Value then
            spawn(function()
                while Settings.KillAura do
                    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                        if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                            if enemy.Humanoid.Health > 0 then
                                local distance = (Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                                if distance <= 2000 then
                                    safeTeleport(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 20, 0))
                                    performAttack()
                                end
                            end
                        end
                    end
                    wait(0.1)
                end
            end)
        end
    end)
else
    Tabs.Raid:AddParagraph({Title = "Access Restricted", Content = "You need to be in Second Sea to access this tab features"})
end

-- V4 TAB IMPLEMENTATION
if CurrentSea >= 3 then
    Tabs.V4:AddParagraph({Title = "V4 Awakening", Content = "V4 race awakening features"})
    Tabs.V4:AddButton({
        Title = "Complete Race Trial",
        Description = "Complete the race trial",
        Callback = function()
            -- V4 trial logic
        end
    })
else
    Tabs.V4:AddParagraph({Title = "Access Restricted", Content = "You need to be in Third Sea to access this tab features"})
end

-- PVP TAB IMPLEMENTATION
Tabs.PvP:AddParagraph({Title = "PvP Features", Content = "Player vs Player combat features"})

Tabs.PvP:AddToggle("AimNearestPlayer", {Title = "Aim Nearest Player", Default = false}):OnChanged(function(Value)
    if Value then
        spawn(function()
            while Value do
                local target = getNearestPlayer()
                if target then
                    aimAtPlayer(target)
                end
                wait(0.1)
            end
        end)
    end
end)

Tabs.PvP:AddToggle("AutoAim", {Title = "Auto Aim All Skills", Default = false}):OnChanged(function(Value)
    -- Auto aim skills logic
end)

Tabs.PvP:AddToggle("PvPKillAura", {Title = "PvP Kill Aura", Default = false}):OnChanged(function(Value)
    if Value then
        spawn(function()
            while Value do
                local target = getNearestPlayer()
                if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (Character.HumanoidRootPart.Position - target.Character.HumanoidRootPart.Position).Magnitude
                    if distance <= 50 then
                        safeTeleport(target.Character.HumanoidRootPart.CFrame)
                        performAttack()
                    end
                end
                wait(0.1)
            end
        end)
    end
end)

Tabs.PvP:AddToggle("AutoBounty", {Title = "Auto Bounty Hunt", Default = false}):OnChanged(function(Value)
    -- Auto bounty hunt logic
end)

-- TELEPORT TAB IMPLEMENTATION
local currentSeaLocations = {}
if LocationData[CurrentSea] then
    for locationName, _ in pairs(LocationData[CurrentSea]) do
        table.insert(currentSeaLocations, locationName)
    end
end

local LocationDropdown = Tabs.Teleport:AddDropdown("LocationDropdown", {
    Title = "Select Location",
    Values = currentSeaLocations,
    Multi = false,
    Default = 1,
})
LocationDropdown:OnChanged(function(Value)
    Settings.SelectedLocation = Value
end)

Tabs.Teleport:AddButton({
    Title = "Teleport to Selected Place",
    Description = "Teleport to the selected location",
    Callback = function()
        if Settings.SelectedLocation and LocationData[CurrentSea][Settings.SelectedLocation] then
            safeTeleport(LocationData[CurrentSea][Settings.SelectedLocation])
        end
    end
})

-- Sea teleport buttons
if CurrentSea ~= 1 then
    Tabs.Teleport:AddButton({
        Title = "Teleport to First Sea",
        Description = "Go to First Sea",
        Callback = function()
            TeleportService:Teleport(2753915549, Player)
        end
    })
end

if CurrentSea ~= 2 and getPlayerLevel() >= 700 then
    Tabs.Teleport:AddButton({
        Title = "Teleport to Second Sea",
        Description = "Go to Second Sea",
        Callback = function()
            TeleportService:Teleport(4442272183, Player)
        end
    })
end

if CurrentSea ~= 3 and getPlayerLevel() >= 1500 then
    Tabs.Teleport:AddButton({
        Title = "Teleport to Third Sea",
        Description = "Go to Third Sea",
        Callback = function()
            TeleportService:Teleport(7449423635, Player)
        end
    })
end

-- SEA TAB IMPLEMENTATION
if CurrentSea >= 3 then
    local SeaEventDropdown = Tabs.Sea:AddDropdown("SeaEventDropdown", {
        Title = "Choose Sea Event",
        Values = {"Kitsune Island", "Azure Ember", "Leviathan", "Sea Beast", "Mirage Island"},
        Multi = false,
        Default = 1,
    })
    
    Tabs.Sea:AddParagraph({Title = "Special Sea Events", Content = "Automated sea event farming"})
    
    Tabs.Sea:AddToggle("AutoKitsune", {Title = "Auto Kitsune Island", Default = false}):OnChanged(function(Value)
        -- Auto kitsune island logic
    end)
    
    Tabs.Sea:AddToggle("AutoAzure", {Title = "Auto Collect Azure", Default = false}):OnChanged(function(Value)
        -- Auto collect azure logic
    end)
    
    Tabs.Sea:AddToggle("AutoLeviathan", {Title = "Auto Kill Leviathan", Default = false}):OnChanged(function(Value)
        -- Auto kill leviathan logic
    end)
else
    Tabs.Sea:AddParagraph({Title = "Access Restricted", Content = "You need to be in Third Sea to access this tab features"})
end

-- SETTINGS TAB
Tabs.Settings:AddParagraph({Title = "Script Settings", Content = "Configure script behavior and preferences"})

local TeleportHeightSlider = Tabs.Settings:AddSlider("TeleportHeight", {
    Title = "Teleport Height",
    Description = "Height above mobs when teleporting",
    Default = 20,
    Min = 5,
    Max = 50,
    Rounding = 1,
    Callback = function(Value)
        Settings.TeleportHeight = Value
    end
})

local ClickDelaySlider = Tabs.Settings:AddSlider("ClickDelay", {
    Title = "Click Delay",
    Description = "Delay between attacks (seconds)",
    Default = 0.2,
    Min = 0.1,
    Max = 1,
    Rounding = 1,
    Callback = function(Value)
        Settings.ClickDelay = Value
    end
})

-- Save Manager and Interface Manager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/BloxFruits")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)
SaveManager:LoadAutoloadConfig()

-- Update stats periodically
spawn(function()
    while wait(5) do
        if StatsLabel then
            StatsLabel:SetDesc(updateStatsDisplay())
        end
    end
end)

print("ENCHANTED HUB | BLOX FRUITS loaded successfully!")
print("Current Sea: " .. CurrentSea)
print("Player Level: " .. getPlayerLevel())
