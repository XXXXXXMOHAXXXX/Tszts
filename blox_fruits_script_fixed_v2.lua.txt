getgenv().Settings = {
    AutoFarmLevel = false,
    AutoFarmNearest = false,
    FastAttack = false,
    BringMob = false,
    AutoBuso = false,
    BringFruit = false,
    StoreFruit = false,
    ESPFruit = false,
    FruitNotif = false,
    AutoSaber = false,
    AutoSecondSea = false,
    AutoRaceV2 = false,
    AutoRaceV3 = false,
    KillAura = false,
    AutoBones = false,
    SelectedWeapon = "Melee",
    SelectedBoss = "",
    SelectedLocation = "",
    TeleportHeight = 20,
    FarmDistance = 25
}

-- Game Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TeleportService = game:GetService("TeleportService")
local VirtualUser = game:GetService("VirtualUser")

-- Player stuff
local Player = Players.LocalPlayer
local Character
local Humanoid
local RootPart

function updatePlayerCharacter()
    Character = Player.Character or Player.CharacterAdded:Wait()
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
end
Player.CharacterAdded:Connect(updatePlayerCharacter)
if Player.Character then
    updatePlayerCharacter()
end

function getCurrentSea()
    local placeId = game.PlaceId
    if placeId == 2753915549 then
        return 1
    elseif placeId == 4442272183 then
        return 2
    elseif placeId == 7449423635 then
        return 3
    end
    return 1
end
local CurrentSea = getCurrentSea()

function getPlayerLevel()
    return Player.Data.Level.Value or 1
end

function tpTo(pos)
    if Character and Character:FindFirstChild("HumanoidRootPart") then
        Character.HumanoidRootPart.CFrame = pos
    end
end

function meleeAttack()
    local combat = ReplicatedStorage:FindFirstChild("Combat")
    if combat then
        combat:FireServer()
    end
    VirtualUser:CaptureController()
    VirtualUser:ClickButton1(Vector2.new(1280, 672))
end

-- [QUEST DATA] -- (All data included, do not edit!)
local QuestData = {
    [1] = {
        {1, 9, "BanditQuest1", 1, "Bandit", CFrame.new(1059, 17, 1549)},
        {10, 14, "JungleQuest", 1, "Monkey", CFrame.new(-1448, 50, 38)},
        {15, 29, "BuggyQuest1", 1, "Pirate", CFrame.new(-1181, 5, 3803)},
        {30, 39, "DesertQuest", 1, "Desert Bandit", CFrame.new(924, 7, 4481)},
        {40, 59, "DesertQuest", 2, "Desert Officer", CFrame.new(924, 7, 4481)},
        {60, 74, "SnowQuest", 1, "Snow Bandit", CFrame.new(1347, 104, -1319)},
        {75, 89, "SnowQuest", 2, "Snowman", CFrame.new(1347, 104, -1319)},
        {90, 99, "MarineQuest", 1, "Chief Petty Officer", CFrame.new(-2440, 7, 2025)},
        {100, 119, "MarineQuest", 2, "Rear Admiral", CFrame.new(-2440, 7, 2025)},
        {120, 149, "JungleQuest", 2, "Gorilla King", CFrame.new(-1612, 37, 149)},
        {150, 174, "ColosseumQuest", 1, "Gladiator", CFrame.new(-1427, 8, -2673)},
        {175, 189, "ColosseumQuest", 2, "Toga Warrior", CFrame.new(-1427, 8, -2673)},
        {190, 209, "ColosseumQuest", 3, "Gladiator", CFrame.new(-1427, 8, -2673)},
        {210, 249, "PrisonQuest", 1, "Prisoner", CFrame.new(4875, 6, 734)},
        {250, 274, "PrisonQuest", 2, "Dangerous Prisoner", CFrame.new(4875, 6, 734)},
        {275, 299, "ColosseumQuest", 2, "Toga Warrior", CFrame.new(-1427, 8, -2673)},
        {300, 324, "MagmaQuest", 1, "Lava Pirate", CFrame.new(-5231, 9, -4530)},
        {325, 374, "MagmaQuest", 2, "Head Baker", CFrame.new(-5231, 9, -4530)},
        {375, 399, "MagmaQuest", 3, "Cake Prince", CFrame.new(-5231, 9, -4530)},
        {400, 449, "FishmanQuest", 1, "Fishman Warrior", CFrame.new(61122, 19, 1569)},
        {450, 474, "FishmanQuest", 2, "Fishman Commando", CFrame.new(61122, 19, 1569)},
        {475, 524, "SkyQuest", 1, "God's Guard", CFrame.new(-4721, 845, -1954)},
        {525, 549, "SkyQuest", 2, "Shanda", CFrame.new(-4721, 845, -1954)},
        {550, 624, "SkyQuest", 3, "Royal Squad", CFrame.new(-4721, 845, -1954)},
        {625, 649, "SkyQuest", 4, "Royal Soldier", CFrame.new(-4721, 845, -1954)},
        {650, 699, "FountainQuest", 1, "Galley Pirate", CFrame.new(5127, 43, 4041)},
        {700, 849, "FountainQuest", 2, "Galley Captain", CFrame.new(5127, 43, 4041)}
    },
    [2] = {
        {700, 724, "Area1Quest", 1, "Raider", CFrame.new(-430, 73, 1836)},
        {725, 774, "Area1Quest", 2, "Mercenary", CFrame.new(-430, 73, 1836)},
        {775, 849, "Area1Quest", 3, "Swan Pirate", CFrame.new(-430, 73, 1836)},
        {850, 874, "Area2Quest", 1, "Factory Staff", CFrame.new(638, 73, 918)},
        {875, 899, "Area2Quest", 2, "Marine Lieutenant", CFrame.new(638, 73, 918)},
        {900, 949, "Area2Quest", 3, "Marine Captain", CFrame.new(638, 73, 918)},
        {950, 974, "MarineQuest3", 1, "Zombie", CFrame.new(-5736, 9, -877)},
        {975, 999, "MarineQuest3", 2, "Vampire", CFrame.new(-5736, 9, -877)},
        {1000, 1049, "SnowMountainQuest", 1, "Snow Trooper", CFrame.new(609, 401, -5371)},
        {1050, 1099, "SnowMountainQuest", 2, "Winter Warrior", CFrame.new(609, 401, -5371)},
        {1100, 1124, "FireSideQuest", 1, "Lab Subordinate", CFrame.new(-5492, 314, -2841)},
        {1125, 1174, "FireSideQuest", 2, "Horned Warrior", CFrame.new(-5492, 314, -2841)},
        {1175, 1199, "IceSideQuest", 1, "Magma Ninja", CFrame.new(-6059, 16, -4904)},
        {1200, 1249, "IceSideQuest", 2, "Lava Pirate", CFrame.new(-6059, 16, -4904)},
        {1250, 1274, "ShipQuest1", 1, "Ship Deckhand", CFrame.new(1037, 125, 32911)},
        {1275, 1299, "ShipQuest1", 2, "Ship Engineer", CFrame.new(1037, 125, 32911)},
        {1300, 1324, "ShipQuest2", 1, "Ship Steward", CFrame.new(968, 125, 33244)},
        {1325, 1349, "ShipQuest2", 2, "Ship Officer", CFrame.new(968, 125, 33244)},
        {1350, 1374, "FrostQuest", 1, "Arctic Warrior", CFrame.new(5669, 28, -6482)},
        {1375, 1424, "FrostQuest", 2, "Snow Lurker", CFrame.new(5669, 28, -6482)},
        {1425, 1449, "ForgottenQuest", 1, "Sea Soldier", CFrame.new(-3053, 237, -10148)},
        {1450, 1499, "ForgottenQuest", 2, "Water Fighter", CFrame.new(-3053, 237, -10148)}
    },
    [3] = {
        {1500, 1524, "PiratePortQuest", 1, "Pirate Millionaire", CFrame.new(-290, 44, 5577)},
        {1525, 1574, "PiratePortQuest", 2, "Pistol Billionaire", CFrame.new(-290, 44, 5577)},
        {1575, 1599, "AmazonQuest", 1, "Dragon Crew Warrior", CFrame.new(5832, 52, -1636)},
        {1600, 1624, "AmazonQuest", 2, "Dragon Crew Archer", CFrame.new(5832, 52, -1636)},
        {1625, 1649, "MarineTreeIsland", 1, "Female Islander", CFrame.new(2181, 73, -4773)},
        {1650, 1699, "MarineTreeIsland", 2, "Giant Islander", CFrame.new(2181, 73, -4773)},
        {1700, 1724, "DeepForestIsland", 1, "Marine Commodore", CFrame.new(-13232, 333, -7627)},
        {1725, 1774, "DeepForestIsland", 2, "Marine Rear Admiral", CFrame.new(-13232, 333, -7627)},
        {1775, 1799, "DeepForestIsland2", 1, "Mythological Pirate", CFrame.new(-13232, 333, -7627)},
        {1800, 1849, "DeepForestIsland2", 2, "Jungle Pirate", CFrame.new(-13232, 333, -7627)},
        {1850, 1899, "HydraIsland", 1, "Musketeer Pirate", CFrame.new(5259, 39, -4498)},
        {1900, 1924, "HydraIsland", 2, "Reborn Skeleton", CFrame.new(5259, 39, -4498)},
        {1925, 1974, "HydraIsland", 3, "Living Zombie", CFrame.new(5259, 39, -4498)},
        {1975, 1999, "HydraIsland", 4, "Demonic Soul", CFrame.new(5259, 39, -4498)},
        {2000, 2024, "HydraIsland", 5, "Posessed Mummy", CFrame.new(5259, 39, -4498)},
        {2025, 2049, "HauntedQuest", 1, "Peanut Scout", CFrame.new(-9482, 142, 5567)},
        {2050, 2074, "HauntedQuest", 2, "Peanut President", CFrame.new(-9482, 142, 5567)},
        {2075, 2099, "NutsIslandQuest", 1, "Ice Cream Chef", CFrame.new(-821, 66, -10965)},
        {2100, 2124, "NutsIslandQuest", 2, "Ice Cream Commander", CFrame.new(-821, 66, -10965)},
        {2125, 2149, "IceCreamIslandQuest", 1, "Cookie Crafter", CFrame.new(-821, 66, -10965)},
        {2150, 2199, "IceCreamIslandQuest", 2, "Cake Guard", CFrame.new(-821, 66, -10965)},
        {2200, 2224, "CakeQuest1", 1, "Baking Staff", CFrame.new(-1928, 38, -12030)},
        {2225, 2249, "CakeQuest1", 2, "Head Baker", CFrame.new(-1928, 38, -12030)},
        {2250, 2274, "CakeQuest2", 1, "Cocoa Warrior", CFrame.new(-1928, 38, -12030)},
        {2275, 2299, "CakeQuest2", 2, "Chocolate Bar Battler", CFrame.new(-1928, 38, -12030)},
        {2300, 2324, "ChocQuest1", 1, "Sweet Thief", CFrame.new(232, 25, -12200)},
        {2325, 2349, "ChocQuest1", 2, "Candy Rebel", CFrame.new(232, 25, -12200)},
        {2350, 2374, "ChocQuest2", 1, "Candy Pirate", CFrame.new(232, 25, -12200)},
        {2375, 2399, "ChocQuest2", 2, "Snow Demon", CFrame.new(232, 25, -12200)},
        {2400, 2424, "SeaBeastQuest1", 1, "Isle Outlaw", CFrame.new(-16544, 56, -173)},
        {2425, 2449, "SeaBeastQuest1", 2, "Island Boy", CFrame.new(-16544, 56, -173)},
        {2450, 2474, "TikiQuest1", 1, "Sun-kissed Warrior", CFrame.new(-16544, 56, -173)},
        {2475, 2499, "TikiQuest1", 2, "Isle Champion", CFrame.new(-16544, 56, -173)},
        {2500, 2524, "TikiQuest2", 1, "Leviathan", CFrame.new(-16544, 56, -173)},
        {2525, 2549, "TikiQuest2", 2, "Ancient Fishman Warrior", CFrame.new(-16544, 56, -173)},
        {2550, 2574, "KitsugaQuest", 1, "Kitsune", CFrame.new(-14542, 313, -3022)},
        {2575, 2599, "KitsugaQuest", 2, "Tanuki", CFrame.new(-14542, 313, -3022)},
        {2600, 2624, "MoonQuest", 1, "Rabbit", CFrame.new(-5496, 1050, -11173)},
        {2625, 2650, "MoonQuest", 2, "Jotaro", CFrame.new(-5496, 1050, -11173)}
    }
}

local TeleportLocations = {
    [1] = {
        "Starter Island", "Jungle", "Pirate Village", "Desert", "Frozen Village", 
        "Marine Fortress", "Skylands", "Prison", "Colosseum", "Magma Village", 
        "Under Water Island", "Fountain City"
    },
    [2] = {
        "Kingdom of Rose", "Usoapp's Island", "Green Zone", "Factory", "Coloseum", 
        "Zombie Island", "Two Snow Mountain", "Punk Hazard", "Cursed Ship", 
        "Ice Castle", "Forgotten Island", "Mini Sky Island"
    },
    [3] = {
        "Mansion", "Port Town", "Great Tree", "Castle On The Sea", "MiniSky", 
        "Hydra Island", "Floating Turtle", "Haunted Castle", "Ice Cream Island", 
        "Peanut Island", "Cake Island", "Cocoa Island", "Candy Island", 
        "Tiki Outpost", "Sea Beast Island", "Temple of Time", "Moon"
    }
}

local TeleportCFrames = {
    [1] = {
        ["Starter Island"] = CFrame.new(945, 17, 1552),
        ["Jungle"] = CFrame.new(-1612, 37, 149),
        ["Pirate Village"] = CFrame.new(-1181, 5, 3803),
        ["Desert"] = CFrame.new(944, 21, 4481),
        ["Frozen Village"] = CFrame.new(1347, 104, -1319),
        ["Marine Fortress"] = CFrame.new(-2566, 7, 2045),
        ["Skylands"] = CFrame.new(-4815, 718, -2619),
        ["Prison"] = CFrame.new(4875, 6, 734),
        ["Colosseum"] = CFrame.new(-1427, 8, -2673),
        ["Magma Village"] = CFrame.new(-5231, 9, -4530),
        ["Under Water Island"] = CFrame.new(61164, 5, 1819),
        ["Fountain City"] = CFrame.new(5127, 59, 4105)
    },
    [2] = {
        ["Kingdom of Rose"] = CFrame.new(-288, 7, 1387),
        ["Usoapp's Island"] = CFrame.new(4808, 8, 2863),
        ["Green Zone"] = CFrame.new(-2448, 73, 1816),
        ["Factory"] = CFrame.new(424, 211, -427),
        ["Coloseum"] = CFrame.new(-1503, 219, 1369),
        ["Zombie Island"] = CFrame.new(-5736, 9, -877),
        ["Two Snow Mountain"] = CFrame.new(753, 408, -5274),
        ["Punk Hazard"] = CFrame.new(-6127, 16, -4904),
        ["Cursed Ship"] = CFrame.new(923, 125, 32853),
        ["Ice Castle"] = CFrame.new(6148, 294, -6741),
        ["Forgotten Island"] = CFrame.new(-3053, 237, -10148),
        ["Mini Sky Island"] = CFrame.new(-288, 49326, 664)
    },
    [3] = {
        ["Mansion"] = CFrame.new(-12471, 375, -7551),
        ["Port Town"] = CFrame.new(-290, 7, 5343),
        ["Great Tree"] = CFrame.new(2681, 1682, -7190),
        ["Castle On The Sea"] = CFrame.new(-5085, 316, -3156),
        ["MiniSky"] = CFrame.new(-260, 49325, 664),
        ["Hydra Island"] = CFrame.new(5228, 604, -345),
        ["Floating Turtle"] = CFrame.new(-13274, 353, -7835),
        ["Haunted Castle"] = CFrame.new(-9515, 142, 5618),
        ["Ice Cream Island"] = CFrame.new(-902, 79, -10988),
        ["Peanut Island"] = CFrame.new(-2062, 50, -10232),
        ["Cake Island"] = CFrame.new(-1884, 19, -11666),
        ["Cocoa Island"] = CFrame.new(87, 73, -12297),
        ["Candy Island"] = CFrame.new(-1014, 149, -14200),
        ["Tiki Outpost"] = CFrame.new(-16545, 56, -172),
        ["Sea Beast Island"] = CFrame.new(-16918, 9, 439),
        ["Temple of Time"] = CFrame.new(28734, 14896, 105),
        ["Moon"] = CFrame.new(-5496, 1050, -11173)
    }
}

local BossLists = {
    [1] = {"The Gorilla King", "Bobby", "Yeti", "Mob Leader", "Vice Admiral", "Warden", "Chief Warden", "Swan", "Magma Admiral", "Fishman Lord", "Wysper", "Thunder God", "Cyborg"},
    [2] = {"Diamond", "Jeremy", "Fajita", "Don Swan", "Smoke Admiral", "Cursed Captain", "Darkbeard", "Order", "Awakened Ice Admiral"},
    [3] = {"Stone", "Island Empress", "Kilo Admiral", "Captain Elephant", "Beautiful Pirate", "rip_indra True Form", "Longma", "Soul Reaper", "Cake Queen", "Dough King", "Dough Prince"}
}

function getCurrentQuestForLevel()
    local level = getPlayerLevel()
    local quests = QuestData[CurrentSea]
    if quests then
        for _, questInfo in ipairs(quests) do
            if level >= questInfo[1] and level <= questInfo[2] then
                return {
                    MinLevel = questInfo[1],
                    MaxLevel = questInfo[2],
                    Quest = questInfo[3],
                    QuestNumber = questInfo[4],
                    NPC = questInfo[5],
                    Location = questInfo[6]
                }
            end
        end
    end
    return nil
end

function takeQuest(questData)
    if not questData then return end
    tpTo(questData.Location)
    wait(2)
    local args = {
        [1] = "StartQuest",
        [2] = questData.Quest,
        [3] = questData.QuestNumber
    }
    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
end

function getNearestEnemy(enemyName)
    local nearestEnemy = nil
    local shortestDistance = math.huge
    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
        if enemy.Name == enemyName and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
            if enemy.Humanoid.Health > 0 then
                local distance = (Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestEnemy = enemy
                end
            end
        end
    end
    return nearestEnemy
end

function bringMobs()
    if not getgenv().Settings.BringMob or not Character or not Character:FindFirstChild("HumanoidRootPart") then return end
    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
        if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
            if enemy.Humanoid.Health > 0 then
                local distance = (Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance <= getgenv().Settings.FarmDistance then
                    enemy.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5)
                    enemy.HumanoidRootPart.CanCollide = false
                    enemy.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
                    if enemy:FindFirstChild("Head") then
                        enemy.Head.CanCollide = false
                    end
                    if enemy.Humanoid then
                        enemy.Humanoid.WalkSpeed = 0
                        enemy.Humanoid.JumpPower = 0
                    end
                end
            end
        end
    end
end

function autoHaki()
    if getgenv().Settings.AutoBuso then
        local args = {[1] = "Buso"}
        ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
    end
end

function fastAttack()
    if getgenv().Settings.FastAttack then
        meleeAttack()
    end
end

function autoFarmLevel()
    if not getgenv().Settings.AutoFarmLevel then return end
    local questData = getCurrentQuestForLevel()
    if not questData then return end
    local hasQuest = Player.PlayerGui.Main.Quest.Visible
    if not hasQuest then
        takeQuest(questData)
        wait(3)
    end
    local enemy = getNearestEnemy(questData.NPC)
    if enemy then
        local attackPos = enemy.HumanoidRootPart.CFrame * CFrame.new(0, getgenv().Settings.TeleportHeight, 0)
        tpTo(attackPos)
        while enemy.Parent and enemy.Humanoid.Health > 0 and getgenv().Settings.AutoFarmLevel do
            bringMobs()
            autoHaki()
            fastAttack()
            wait(0.1)
        end
    end
end

function autoFarmNearest()
    if not getgenv().Settings.AutoFarmNearest or not Character or not Character:FindFirstChild("HumanoidRootPart") then return end
    local nearestEnemy = nil
    local shortestDistance = math.huge
    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
        if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
            if enemy.Humanoid.Health > 0 then
                local distance = (Character.HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance and distance <= 2000 then
                    shortestDistance = distance
                    nearestEnemy = enemy
                end
            end
        end
    end
    if nearestEnemy then
        local attackPos = nearestEnemy.HumanoidRootPart.CFrame * CFrame.new(0, getgenv().Settings.TeleportHeight, 0)
        tpTo(attackPos)
        while nearestEnemy.Parent and nearestEnemy.Humanoid.Health > 0 and getgenv().Settings.AutoFarmNearest do
            bringMobs()
            autoHaki()
            fastAttack()
            wait(0.1)
        end
    end
end

local SaberProgress = 1
function autoSaberQuest()
    if not getgenv().Settings.AutoSaber or CurrentSea ~= 1 then return end
    local level = getPlayerLevel()
    if level < 200 then return end
    if SaberProgress == 1 then
        tpTo(CFrame.new(-1405, 30, -132))
        wait(2)
        local args = {[1] = "ProQuestProgress", [2] = "SaberExpert"}
        ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
        wait(3)
        SaberProgress = 2
    elseif SaberProgress == 2 then
        local piratesKilled = 0
        while piratesKilled < 5 and getgenv().Settings.AutoSaber do
            for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                if enemy.Name == "Jungle Pirate" and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                    if enemy.Humanoid.Health > 0 then
                        tpTo(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 20, 0))
                        while enemy.Parent and enemy.Humanoid.Health > 0 and getgenv().Settings.AutoSaber do
                            meleeAttack()
                            wait(0.1)
                        end
                        piratesKilled = piratesKilled + 1
                        break
                    end
                end
            end
            wait(1)
        end
        SaberProgress = 3
    elseif SaberProgress == 3 then
        tpTo(CFrame.new(-910, 17, 4040))
        wait(2)
        local args = {[1] = "ProQuestProgress", [2] = "RichSon"}
        ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
        wait(3)
        SaberProgress = 4
    elseif SaberProgress == 4 then
        for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
            if enemy.Name == "Mob Leader" and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                if enemy.Humanoid.Health > 0 then
                    tpTo(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 20, 0))
                    while enemy.Parent and enemy.Humanoid.Health > 0 and getgenv().Settings.AutoSaber do
                        meleeAttack()
                        wait(0.1)
                    end
                    break
                end
            end
        end
        SaberProgress = 5
    elseif SaberProgress == 5 then
        tpTo(CFrame.new(1114, 5, 4350))
        wait(2)
        for _, torch in pairs(Workspace:GetChildren()) do
            if torch.Name == "Torch" and torch:FindFirstChild("Handle") then
                torch.Handle.CFrame = Character.HumanoidRootPart.CFrame
            end
        end
        SaberProgress = 6
    elseif SaberProgress == 6 then
        tpTo(CFrame.new(1114, 5, 4350))
        wait(2)
        local args = {[1] = "ProQuestProgress", [2] = "FlameTorch"}
        ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
        wait(3)
        tpTo(CFrame.new(1613, 7, 4787))
        wait(2)
        local args2 = {[1] = "ProQuestProgress", [2] = "SaberExpert"}
        ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args2))
        getgenv().Settings.AutoSaber = false
        SaberProgress = 1
        print("Saber Quest Completed!")
    end
end

function autoSecondSeaQuest()
    if not getgenv().Settings.AutoSecondSea or CurrentSea ~= 1 then return end
    local level = getPlayerLevel()
    if level < 700 then return end
    tpTo(CFrame.new(4875, 6, 734))
    wait(2)
    local args = {[1] = "DressrosaQuestProgress", [2] = "Detective"}
    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
    wait(3)
    for i = 1, 5 do
        for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
            if string.find(enemy.Name, "Key") and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                if enemy.Humanoid.Health > 0 then
                    tpTo(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 20, 0))
                    while enemy.Parent and enemy.Humanoid.Health > 0 and getgenv().Settings.AutoSecondSea do
                        meleeAttack()
                        wait(0.1)
                    end
                    break
                end
            end
        end
        wait(2)
    end
    local args2 = {[1] = "DressrosaQuestProgress", [2] = "Key"}
    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args2))
    wait(3)
    TeleportService:Teleport(4442272183, Player)
end

function openFruitStock()
    local fruitShopRemote = ReplicatedStorage:FindFirstChild("Remotes"):FindFirstChild("CommF_")
    if fruitShopRemote then
        local fruits = fruitShopRemote:InvokeServer("GetFruits")
        if fruits then
            print("=== FRUIT STOCK ===")
            for fruitName, fruitData in pairs(fruits) do
                print(fruitName .. ": $" .. tostring(fruitData.Price))
            end
            print("==================")
        else
            print("Could not retrieve fruit stock")
        end
    end
end

-- Main script loops
spawn(function()
    while wait(0.1) do
        if getgenv().Settings.AutoFarmLevel then
            autoFarmLevel()
        end
    end
end)
spawn(function()
    while wait(0.1) do
        if getgenv().Settings.AutoFarmNearest then
            autoFarmNearest()
        end
    end
end)
spawn(function()
    while wait(1) do
        if getgenv().Settings.AutoSaber then
            autoSaberQuest()
        end
    end
end)
spawn(function()
    while wait(1) do
        if getgenv().Settings.AutoSecondSea then
            autoSecondSeaQuest()
        end
    end
end)

-- Button UI
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")
ScreenGui.Name = "SpaceHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = 0.1
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = "rbxassetid://135671141026630"
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0
UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton
UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45
UIScale.Parent = ImageButton
UIScale.Scale = 1

local function animateButton()
    local tween1 = TweenService:Create(UIScale, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {Scale = 0.8})
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = TweenService:Create(UIScale, TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Scale = 1.1})
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = TweenService:Create(UIScale, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Scale = 1})
            tween3:Play()
        end)
    end)
end

local guiVisible = true
ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    if Window then
        guiVisible = not guiVisible
        if guiVisible then
            Window.Root.Visible = true
        else
            Window.Root.Visible = false
        end
    end
end)

wait(3)

-- Load Fluent Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "ENCHANTED HUB | BLOX FRUIT",
    SubTitle = "Created by AABIS",
    TabWidth = 155,
    Size = UDim2.fromOffset(600, 500),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local MainTab = Window:AddTab({ Title = "Main", Icon = "home" })
local AutoFarmTab = Window:AddTab({ Title = "Auto Farm", Icon = "zap" })
local RaidTab = Window:AddTab({ Title = "Raid", Icon = "shield" })
local V4Tab = Window:AddTab({ Title = "V4 Awakening", Icon = "star" })
local PvPTab = Window:AddTab({ Title = "PvP", Icon = "sword" })
local TeleportTab = Window:AddTab({ Title = "Teleport", Icon = "map-pin" })
local SeaTab = Window:AddTab({ Title = "Sea", Icon = "anchor" })
local SettingsTab = Window:AddTab({ Title = "Settings", Icon = "settings" })

local WeaponDropdown = MainTab:AddDropdown("WeaponDropdown", {
    Title = "Choose Weapon",
    Values = {"Melee", "Sword", "Blox Fruit", "Gun"},
    Multi = false,
    Default = 1,
})
WeaponDropdown:OnChanged(function(Value)
    getgenv().Settings.SelectedWeapon = Value
end)
MainTab:AddToggle("FastAttack", {Title = "Fast Attack", Default = false}):OnChanged(function(Value)
    getgenv().Settings.FastAttack = Value
end)
MainTab:AddToggle("BringMob", {Title = "Bring Mob", Default = false}):OnChanged(function(Value)
    getgenv().Settings.BringMob = Value
end)
MainTab:AddToggle("AutoBuso", {Title = "Auto Buso Haki", Default = false}):OnChanged(function(Value)
    getgenv().Settings.AutoBuso = Value
end)
MainTab:AddParagraph({Title = "SPECIAL", Content = "Special features and utilities"})
MainTab:AddButton({
    Title = "Open Fruit Stock",
    Description = "Check current fruit stock",
    Callback = function()
        openFruitStock()
    end
})
MainTab:AddToggle("ESPFruit", {Title = "ESP Fruit", Default = false}):OnChanged(function(Value)
    getgenv().Settings.ESPFruit = Value
end)
MainTab:AddToggle("FruitNotif", {Title = "Fruit Notification", Default = false}):OnChanged(function(Value)
    getgenv().Settings.FruitNotif = Value
end)
MainTab:AddToggle("BringFruit", {Title = "Bring Fruit", Default = false}):OnChanged(function(Value)
    getgenv().Settings.BringFruit = Value
end)
MainTab:AddToggle("StoreFruit", {Title = "Store Fruit", Default = false}):OnChanged(function(Value)
    getgenv().Settings.StoreFruit = Value
end)
if CurrentSea == 1 then
    MainTab:AddToggle("AutoSaber", {Title = "Auto Saber Sword", Default = false}):OnChanged(function(Value)
        getgenv().Settings.AutoSaber = Value
    end)
    MainTab:AddToggle("AutoSecondSea", {Title = "Auto Second Sea Quest", Default = false}):OnChanged(function(Value)
        getgenv().Settings.AutoSecondSea = Value
    end)
elseif CurrentSea == 2 then
    MainTab:AddToggle("AutoRaceV2", {Title = "Auto Race V2", Default = false}):OnChanged(function(Value)
        getgenv().Settings.AutoRaceV2 = Value
    end)
    MainTab:AddToggle("AutoRaceV3", {Title = "Auto Race V3", Default = false}):OnChanged(function(Value)
        getgenv().Settings.AutoRaceV3 = Value
    end)
end
MainTab:AddParagraph({Title = "STATS", Content = "Player Statistics"})
local function getStatsText()
    local level = getPlayerLevel()
    local money = Player.Data.Beli.Value or 0
    local fragments = Player.Data.Fragments.Value or 0
    local race = Player.Data.Race.Value or "Human"
    local bounty = Player.Data.Bounty.Value or 0
    return string.format("Level: %d\nMoney: %s\nFragments: %d\nRace: %s\nBounty: %s\nSea: %d", 
        level, tostring(money), fragments, race, tostring(bounty), CurrentSea)
end
local StatsLabel = MainTab:AddParagraph({Title = "Current Stats", Content = getStatsText()})

AutoFarmTab:AddToggle("AutoFarmLevel", {Title = "Auto Farm Level", Default = false}):OnChanged(function(Value)
    getgenv().Settings.AutoFarmLevel = Value
end)
AutoFarmTab:AddToggle("AutoFarmNearest", {Title = "Auto Farm Nearest Mobs", Default = false}):OnChanged(function(Value)
    getgenv().Settings.AutoFarmNearest = Value
end)
AutoFarmTab:AddParagraph({Title = "Boss Section", Content = "Boss farming features"})
local BossDropdown = AutoFarmTab:AddDropdown("BossDropdown", {
    Title = "Select Boss",
    Values = BossLists[CurrentSea] or {},
    Multi = false,
    Default = 1,
})
BossDropdown:OnChanged(function(Value)
    getgenv().Settings.SelectedBoss = Value
end)
AutoFarmTab:AddButton({
    Title = "Kill Selected Boss",
    Description = "Farm the selected boss",
    Callback = function()
        if getgenv().Settings.SelectedBoss then
            print("Killing boss: " .. getgenv().Settings.SelectedBoss)
        end
    end
})
AutoFarmTab:AddToggle("KillAllBosses", {Title = "Kill All Bosses", Default = false}):OnChanged(function(Value)
end)
AutoFarmTab:AddParagraph({Title = "SPECIAL FARM", Content = "Special farming features"})
AutoFarmTab:AddToggle("AutoBones", {Title = "Auto Farm Bones", Default = false}):OnChanged(function(Value)
    getgenv().Settings.AutoBones = Value
end)
AutoFarmTab:AddToggle("AutoRipIndra", {Title = "Auto Rip Indra", Default = false}):OnChanged(function(Value)
end)
AutoFarmTab:AddToggle("AutoDoughPrince", {Title = "Auto Dough Prince", Default = false}):OnChanged(function(Value)
end)
AutoFarmTab:AddToggle("AutoDoughKing", {Title = "Auto Dough King", Default = false}):OnChanged(function(Value)
end)

if CurrentSea >= 2 then
    local ChipDropdown = RaidTab:AddDropdown("ChipDropdown", {
        Title = "Buy Chip",
        Values = {"Flame", "Ice", "Quake", "Light", "Dark", "String", "Barrier", "Rubber", "Magma", "Door", "Buddha", "Love", "Spider", "Sound", "Phoenix", "Portal", "Rumble", "Pain", "Blizzard", "Gravity", "Mammoth", "T-Rex", "Dough", "Shadow", "Venom", "Control", "Spirit", "Dragon", "Leopard", "Kitsune"},
        Multi = false,
        Default = 1,
    })
    RaidTab:AddButton({
        Title = "Buy Selected Chip",
        Description = "Purchase raid chip",
        Callback = function()
        end
    })
    RaidTab:AddToggle("KillAura", {Title = "Kill Aura", Default = false}):OnChanged(function(Value)
        getgenv().Settings.KillAura = Value
    end)
else
    RaidTab:AddParagraph({Title = "Access Restricted", Content = "You need to be in Second Sea to access this tab features"})
end

if CurrentSea >= 3 then
    V4Tab:AddParagraph({Title = "V4 Awakening", Content = "V4 race awakening features"})
else
    V4Tab:AddParagraph({Title = "Access Restricted", Content = "You need to be in Third Sea to access this tab features"})
end

PvPTab:AddParagraph({Title = "PvP Features", Content = "Player vs Player combat features"})
PvPTab:AddToggle("AimNearestPlayer", {Title = "Aim Nearest Player", Default = false}):OnChanged(function(Value)
end)
PvPTab:AddToggle("AutoAim", {Title = "Auto Aim All Skills", Default = false}):OnChanged(function(Value)
end)
PvPTab:AddToggle("PvPKillAura", {Title = "PvP Kill Aura", Default = false}):OnChanged(function(Value)
end)
PvPTab:AddToggle("AutoBounty", {Title = "Auto Bounty Hunt", Default = false}):OnChanged(function(Value)
end)

local LocationDropdown = TeleportTab:AddDropdown("LocationDropdown", {
    Title = "Select Location",
    Values = TeleportLocations[CurrentSea] or {},
    Multi = false,
    Default = 1,
})
LocationDropdown:OnChanged(function(Value)
    getgenv().Settings.SelectedLocation = Value
end)
TeleportTab:AddButton({
    Title = "Teleport to Selected Place",
    Description = "Teleport to location",
    Callback = function()
        if getgenv().Settings.SelectedLocation and TeleportCFrames[CurrentSea][getgenv().Settings.SelectedLocation] then
            tpTo(TeleportCFrames[CurrentSea][getgenv().Settings.SelectedLocation])
        end
    end
})
if CurrentSea ~= 1 then
    TeleportTab:AddButton({
        Title = "Teleport to First Sea",
        Description = "Go to First Sea",
        Callback = function()
            TeleportService:Teleport(2753915549, Player)
        end
    })
end
if CurrentSea ~= 2 and getPlayerLevel() >= 700 then
    TeleportTab:AddButton({
        Title = "Teleport to Second Sea",
        Description = "Go to Second Sea",
        Callback = function()
            TeleportService:Teleport(4442272183, Player)
        end
    })
end
if CurrentSea ~= 3 and getPlayerLevel() >= 1500 then
    TeleportTab:AddButton({
        Title = "Teleport to Third Sea",
        Description = "Go to Third Sea",
        Callback = function()
            TeleportService:Teleport(7449423635, Player)
        end
    })
end

if CurrentSea >= 3 then
    SeaTab:AddParagraph({Title = "Special Sea Events", Content = "Automated sea event farming"})
    SeaTab:AddToggle("AutoKitsune", {Title = "Auto Kitsune Island", Default = false}):OnChanged(function(Value)
    end)
    SeaTab:AddToggle("AutoAzure", {Title = "Auto Collect Azure", Default = false}):OnChanged(function(Value)
    end)
    SeaTab:AddToggle("AutoLeviathan", {Title = "Auto Kill Leviathan", Default = false}):OnChanged(function(Value)
    end)
else
    SeaTab:AddParagraph({Title = "Access Restricted", Content = "You need to be in Third Sea to access this tab features"})
end

SettingsTab:AddParagraph({Title = "Script Settings", Content = "Configure script behavior"})
SettingsTab:AddSlider("TeleportHeight", {
    Title = "Teleport Height",
    Description = "Height above mobs",
    Default = 20,
    Min = 5,
    Max = 50,
    Rounding = 1,
    Callback = function(Value)
        getgenv().Settings.TeleportHeight = Value
    end
})
SettingsTab:AddSlider("FarmDistance", {
    Title = "Farm Distance",
    Description = "Bring mob distance",
    Default = 25,
    Min = 10,
    Max = 50,
    Rounding = 1,
    Callback = function(Value)
        getgenv().Settings.FarmDistance = Value
    end
})

spawn(function()
    while wait(5) do
        if StatsLabel then
            StatsLabel:SetDesc(getStatsText())
        end
    end
end)

Window:SelectTab(1)
print("ENCHANTED HUB | BLOX FRUITS loaded successfully!")
print("Current Sea: " .. CurrentSea)
print("Player Level: " .. getPlayerLevel())
