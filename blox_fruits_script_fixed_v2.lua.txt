local Show_Button = true
local Button_Icon = "rbxassetid://79350762561675"
local Button_Transparency = 0.1

-- ui 
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")
ScreenGui.Name = "SpaceHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0
UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton
UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45

UIScale.Parent = ImageButton
UIScale.Scale = 1

-- animations
local function animateButton()
    local tween1 = game:GetService("TweenService"):Create(
        UIScale,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Scale = 0.8}
    )
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = game:GetService("TweenService"):Create(
            UIScale,
            TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Scale = 1.1}
        )
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = game:GetService("TweenService"):Create(
                UIScale,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Scale = 1}
            )
            tween3:Play()
        end)
    end)
end

wait(3)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "SPACE HUB | BLOX FRUIT ",
    SubTitle = "Created by MOHA ",
    TabWidth = 155,
    Size = UDim2.fromOffset(600, 500),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Fixed Hide/Show Logic - Now properly minimizes/restores Fluent UI
local isMinimized = false
ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    if isMinimized then
        Window:Restore()
        isMinimized = false
    else
        Window:Minimize()
        isMinimized = true
    end
end)

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "zap" }),
    Raid = Window:AddTab({ Title = "Raid", Icon = "shield" }),
    V4 = Window:AddTab({ Title = "V4 Awakening", Icon = "star" }),
    PvP = Window:AddTab({ Title = "PvP", Icon = "sword" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Sea = Window:AddTab({ Title = "Sea", Icon = "anchor" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

repeat wait() until game:IsLoaded()

local Player = Players.LocalPlayer
repeat wait() until Player.Character
local Character = Player.Character
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Global Variables
_G.AutoFarm = false
_G.FastAttack = false
_G.BringMobs = false
_G.AutoQuest = false
_G.AutoSaber = false
_G.AutoSecondSea = false
_G.AutoRaceV2 = false
_G.AutoRaceV3 = false
_G.AutoThirdSea = false
_G.AutoCDK = false
_G.AutoYama = false
_G.AutoTushita = false
_G.AutoBones = false
_G.AutoAllBoss = false
_G.AutoSelectedBoss = false
_G.AutoRipIndra = false
_G.AutoDoughKing = false
_G.AutoDoughPrince = false
_G.AutoRaid = false
_G.SoloRaid = false
_G.AimNearestPlayer = false
_G.SpectatePlayer = false
_G.AutoSeaBeast = false
_G.AutoKitsuneIsland = false
_G.AutoAzure = false
_G.AutoGhostShip = false
_G.AutoPiranha = false
_G.AutoShark = false
_G.AutoTerrorshark = false
_G.AutoV4Trial = false
_G.AutoKillPlayer = false
_G.BringFruit = false
_G.StoreFruit = false

-- Combat Variables
_G.SelectedWeapon = "Melee"
_G.SelectedBoss = "Gorilla King"
_G.SkillZ = false
_G.SkillX = false
_G.SkillC = false
_G.SkillV = false
_G.SkillF = false

-- Quest Variables
_G.QuestName = ""
_G.QuestMob = ""
_G.QuestPosition = Vector3.new(0, 0, 0)

-- Attack Variables
local AttackRemote = ReplicatedStorage.Remotes.CommF_
local Camera = Workspace.CurrentCamera
local LastAttack = 0
local AttackCooldown = 0.175

local function GetCurrentSea()
    local placeId = game.PlaceId
    if placeId == 2753915549 then
        return 1 -- First Sea
    elseif placeId == 4442272183 then
        return 2 -- Second Sea
    elseif placeId == 7449423635 then
        return 3 -- Third Sea
    end
    return 1
end

local function GetPlayerLevel()
    return Player.Data and Player.Data.Level and Player.Data.Level.Value or 1
end

local function GetPlayerMoney()
    return Player.Data and Player.Data.Beli and Player.Data.Beli.Value or 0
end

local function GetPlayerRace()
    return Player.Data and Player.Data.Race and Player.Data.Race.Value or "Human"
end

local function GetPlayerBounty()
    return Player.leaderstats and Player.leaderstats["Bounty/Honor"] and Player.leaderstats["Bounty/Honor"].Value or 0
end

local function GetPlayerFragments()
    return Player.Data and Player.Data.Fragments and Player.Data.Fragments.Value or 0
end

-- Fixed Fast Attack System
local function FastAttack()
    if not _G.FastAttack then return end
    
    local currentTick = tick()
    if currentTick - LastAttack < AttackCooldown then return end
    LastAttack = currentTick
    
    pcall(function()
        AttackRemote:InvokeServer("weaponOrbEvent")
    end)
    
    local combat = Player.Character:FindFirstChildOfClass("Tool")
    if combat and combat.ToolTip == "Combat" then
        pcall(function()
            local args = {
                [1] = {
                    ["Goal"] = "Combat",
                    ["Type"] = "Hit"
                }
            }
            AttackRemote:FireServer(unpack(args))
        end)
    end
end

local function TweenToPosition(position, speed)
    if not position then return end
    speed = speed or 300
    local distance = (RootPart.Position - position).Magnitude
    
    if distance <= 10 then
        RootPart.CFrame = CFrame.new(position)
        return
    end
    
    local time = distance / speed
    local tween = TweenService:Create(
        RootPart,
        TweenInfo.new(time, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(position)}
    )
    tween:Play()
    return tween
end

local function GetNearestMob(mobName)
    local nearestMob = nil
    local shortestDistance = math.huge
    
    for _, mob in pairs(Workspace.Enemies:GetChildren()) do
        if mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
            if not mobName or mob.Name == mobName then
                local distance = (RootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestMob = mob
                end
            end
        end
    end
    
    return nearestMob
end

local function GetNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (RootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    
    return nearestPlayer
end

local function EquipWeapon(weaponName)
    if weaponName == "Melee" then
        for _, tool in pairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.ToolTip == "Combat" then
                Humanoid:EquipTool(tool)
                return
            end
        end
    elseif weaponName == "Sword" then
        for _, tool in pairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.ToolTip == "Sword" then
                Humanoid:EquipTool(tool)
                return
            end
        end
    elseif weaponName == "Gun" then
        for _, tool in pairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.ToolTip == "Gun" then
                Humanoid:EquipTool(tool)
                return
            end
        end
    elseif weaponName == "Fruit" then
        for _, tool in pairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and tool.ToolTip == "Blox Fruit" then
                Humanoid:EquipTool(tool)
                return
            end
        end
    end
end

-- Improved Bring Mobs Function
local function BringMobs(mobName, bringPosition)
    if not _G.BringMobs then return end
    
    for _, mob in pairs(Workspace.Enemies:GetChildren()) do
        if mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
            if not mobName or mob.Name == mobName then
                local distance = (RootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                if distance <= 350 then
                    mob.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
                    mob.HumanoidRootPart.Transparency = 1
                    mob.Humanoid.JumpPower = 0
                    mob.Humanoid.WalkSpeed = 0
                    mob.HumanoidRootPart.CanCollide = false
                    if mob.Humanoid:FindFirstChild("Animator") then
                        mob.Humanoid.Animator:Destroy()
                    end
                    sethiddenproperty(mob, "NetworkOwner", Player)
                    mob.HumanoidRootPart.CFrame = bringPosition or RootPart.CFrame * CFrame.new(0, 0, -3)
                end
            end
        end
    end
end

-- Auto Quest System
local function StartQuest(questName, questNumber)
    local questGiver = Workspace.NPCs:FindFirstChild(questName)
    if questGiver and questGiver:FindFirstChild("HumanoidRootPart") then
        local args = {
            [1] = "StartQuest",
            [2] = questName,
            [3] = questNumber or 1
        }
        AttackRemote:InvokeServer(unpack(args))
    end
end

-- Quest Data
local QuestData = {
    [1] = { -- First Sea
        [1] = {name = "Bandit", questName = "BanditQuest1", questMob = "Bandit", pos = Vector3.new(1060, 17, 1545)},
        [15] = {name = "Monkey", questName = "JungleQuest", questMob = "Monkey", pos = Vector3.new(-1602, 37, 152)},
        [30] = {name = "Gorilla", questName = "JungleQuest2", questMob = "Gorilla", pos = Vector3.new(-1602, 37, 152)},
        [60] = {name = "Pirate", questName = "Area1Quest", questMob = "Pirate", pos = Vector3.new(-429, 73, 1835)},
        [75] = {name = "Brute", questName = "Area1Quest", questMob = "Brute", pos = Vector3.new(-429, 73, 1835)},
        [90] = {name = "Desert Bandit", questName = "DesertQuest", questMob = "Desert Bandit", pos = Vector3.new(897, 7, 4388)},
        [100] = {name = "Desert Officer", questName = "DesertQuest", questMob = "Desert Officer", pos = Vector3.new(897, 7, 4388)},
        [120] = {name = "Snow Bandit", questName = "SnowQuest", questMob = "Snow Bandit", pos = Vector3.new(1389, 88, -1298)},
        [150] = {name = "Snowman", questName = "SnowQuest", questMob = "Snowman", pos = Vector3.new(1389, 88, -1298)},
        [175] = {name = "Chief Petty Officer", questName = "MarineQuest2", questMob = "Chief Petty Officer", pos = Vector3.new(-5040, 29, 4326)},
        [200] = {name = "Sky Bandit", questName = "SkyQuest", questMob = "Sky Bandit", pos = Vector3.new(-4842, 718, -2623)},
        [300] = {name = "Dark Master", questName = "SkyQuest", questMob = "Dark Master", pos = Vector3.new(-4842, 718, -2623)},
        [325] = {name = "Prisoner", questName = "PrisonerQuest", questMob = "Prisoner", pos = Vector3.new(5308, 1, 474)},
        [375] = {name = "Dangerous Prisoner", questName = "PrisonerQuest", questMob = "Dangerous Prisoner", pos = Vector3.new(5308, 1, 474)},
        [400] = {name = "Toga Warrior", questName = "ColosseumQuest", questMob = "Toga Warrior", pos = Vector3.new(-1581, 7, -2986)},
        [450] = {name = "Gladiator", questName = "ColosseumQuest", questMob = "Gladiator", pos = Vector3.new(-1581, 7, -2986)},
        [475] = {name = "Military Soldier", questName = "MagmaQuest", questMob = "Military Soldier", pos = Vector3.new(-5316, 12, 8515)},
        [525] = {name = "Military Spy", questName = "MagmaQuest", questMob = "Military Spy", pos = Vector3.new(-5316, 12, 8515)},
        [550] = {name = "Fishman Warrior", questName = "FishmanQuest", questMob = "Fishman Warrior", pos = Vector3.new(61123, 19, 1569)},
        [575] = {name = "Fishman Commando", questName = "FishmanQuest", questMob = "Fishman Commando", pos = Vector3.new(61123, 19, 1569)},
        [700] = {name = "God's Guard", questName = "SkyExp1Quest", questMob = "God's Guard", pos = Vector3.new(-4722, 845, -1954)}
    },
    [2] = { -- Second Sea
        [700] = {name = "Raider", questName = "Area1Quest", questMob = "Raider", pos = Vector3.new(-429, 73, 1835)},
        [875] = {name = "Mercenary", questName = "Area1Quest", questMob = "Mercenary", pos = Vector3.new(-429, 73, 1835)},
        [900] = {name = "Swan Pirate", questName = "Area2Quest", questMob = "Swan Pirate", pos = Vector3.new(638, 73, 918)},
        [950] = {name = "Factory Staff", questName = "Area2Quest", questMob = "Factory Staff", pos = Vector3.new(638, 73, 918)},
        [1000] = {name = "Marine Lieutenant", questName = "MarineQuest3", questMob = "Marine Lieutenant", pos = Vector3.new(-5040, 29, 4326)},
        [1050] = {name = "Marine Captain", questName = "MarineQuest3", questMob = "Marine Captain", pos = Vector3.new(-5040, 29, 4326)},
        [1100] = {name = "Zombie", questName = "ZombieQuest", questMob = "Zombie", pos = Vector3.new(-5657, 16, -944)},
        [1150] = {name = "Vampire", questName = "ZombieQuest", questMob = "Vampire", pos = Vector3.new(-5657, 16, -944)},
        [1200] = {name = "Snow Trooper", questName = "SnowMountainQuest", questMob = "Snow Trooper", pos = Vector3.new(607, 401, -5370)},
        [1250] = {name = "Winter Warrior", questName = "SnowMountainQuest", questMob = "Winter Warrior", pos = Vector3.new(607, 401, -5370)},
        [1300] = {name = "Lab Subordinate", questName = "IceSideQuest", questMob = "Lab Subordinate", pos = Vector3.new(-6060, 16, -4905)},
        [1350] = {name = "Horned Warrior", questName = "IceSideQuest", questMob = "Horned Warrior", pos = Vector3.new(-6060, 16, -4905)},
        [1400] = {name = "Magma Ninja", questName = "FireSideQuest", questMob = "Magma Ninja", pos = Vector3.new(-5430, 16, -5295)},
        [1450] = {name = "Lava Pirate", questName = "FireSideQuest", questMob = "Lava Pirate", pos = Vector3.new(-5430, 16, -5295)},
        [1500] = {name = "Ship Deckhand", questName = "ShipQuest1", questMob = "Ship Deckhand", pos = Vector3.new(1038, 125, 32911)},
        [1575] = {name = "Ship Engineer", questName = "ShipQuest2", questMob = "Ship Engineer", pos = Vector3.new(1038, 125, 32911)},
        [1650] = {name = "Ship Steward", questName = "ShipQuest2", questMob = "Ship Steward", pos = Vector3.new(1038, 125, 32911)},
        [1725] = {name = "Ship Officer", questName = "ShipQuest2", questMob = "Ship Officer", pos = Vector3.new(1038, 125, 32911)},
        [1800] = {name = "Arctic Warrior", questName = "FrostQuest", questMob = "Arctic Warrior", pos = Vector3.new(5669, 28, -6482)},
        [1875] = {name = "Snow Lurker", questName = "FrostQuest", questMob = "Snow Lurker", pos = Vector3.new(5669, 28, -6482)},
        [1950] = {name = "Sea Soldier", questName = "ForgottenQuest", questMob = "Sea Soldier", pos = Vector3.new(-3054, 237, -10148)},
        [2075] = {name = "Water Fighter", questName = "ForgottenQuest", questMob = "Water Fighter", pos = Vector3.new(-3054, 237, -10148)}
    },
    [3] = { -- Third Sea
        [1500] = {name = "Pirate Millionaire", questName = "PiratePortQuest", questMob = "Pirate Millionaire", pos = Vector3.new(-290, 44, 5581)},
        [1575] = {name = "Pistol Billionaire", questName = "PiratePortQuest", questMob = "Pistol Billionaire", pos = Vector3.new(-290, 44, 5581)},
        [1650] = {name = "Dragon Crew Warrior", questName = "AmazonQuest", questMob = "Dragon Crew Warrior", pos = Vector3.new(5832, 52, -1636)},
        [1725] = {name = "Dragon Crew Archer", questName = "AmazonQuest2", questMob = "Dragon Crew Archer", pos = Vector3.new(5832, 52, -1636)},
        [1800] = {name = "Female Islander", questName = "AmazonQuest2", questMob = "Female Islander", pos = Vector3.new(5832, 52, -1636)},
        [1875] = {name = "Giant Islander", questName = "AmazonQuest2", questMob = "Giant Islander", pos = Vector3.new(5832, 52, -1636)},
        [1950] = {name = "Marine Commodore", questName = "MarineTreeIsland", questMob = "Marine Commodore", pos = Vector3.new(2180, 29, -6737)},
        [2025] = {name = "Marine Rear Admiral", questName = "MarineTreeIsland", questMob = "Marine Rear Admiral", pos = Vector3.new(2180, 29, -6737)},
        [2100] = {name = "Fishman Raider", questName = "DeepForestIsland3", questMob = "Fishman Raider", pos = Vector3.new(-13234, 333, -7625)},
        [2175] = {name = "Fishman Captain", questName = "DeepForestIsland", questMob = "Fishman Captain", pos = Vector3.new(-13234, 333, -7625)},
        [2250] = {name = "Forest Pirate", questName = "DeepForestIsland", questMob = "Forest Pirate", pos = Vector3.new(-13234, 333, -7625)},
        [2325] = {name = "Mythological Pirate", questName = "DeepForestIsland2", questMob = "Mythological Pirate", pos = Vector3.new(-13234, 333, -7625)},
        [2400] = {name = "Jungle Pirate", questName = "DeepForestIsland", questMob = "Jungle Pirate", pos = Vector3.new(-12533, 340, -9373)},
        [2475] = {name = "Musketeer Pirate", questName = "DeepForestIsland2", questMob = "Musketeer Pirate", pos = Vector3.new(-12533, 340, -9373)},
        [2550] = {name = "Reborn Skeleton", questName = "HauntedQuest1", questMob = "Reborn Skeleton", pos = Vector3.new(-9482, 142, 5566)},
        [2625] = {name = "Living Zombie", questName = "HauntedQuest2", questMob = "Living Zombie", pos = Vector3.new(-9482, 142, 5566)},
        [2700] = {name = "Demonic Soul", questName = "HauntedQuest2", questMob = "Demonic Soul", pos = Vector3.new(-9482, 142, 5566)},
        [2775] = {name = "Posessed Mummy", questName = "HauntedQuest1", questMob = "Posessed Mummy", pos = Vector3.new(-9482, 142, 5566)}
    }
}

local function GetCurrentQuest()
    local level = GetPlayerLevel()
    local sea = GetCurrentSea()
    local questData = QuestData[sea]
    
    if not questData then return nil end
    
    local bestQuest = nil
    for minLevel, quest in pairs(questData) do
        if level >= minLevel then
            bestQuest = quest
        end
    end
    
    return bestQuest
end

-- Fixed Auto Farm with proper attack logic
local function AutoFarm()
    spawn(function()
        while _G.AutoFarm do
            wait()
            pcall(function()
                local quest = GetCurrentQuest()
                if not quest then return end
                
                _G.QuestName = quest.questName
                _G.QuestMob = quest.name
                _G.QuestPosition = quest.pos
                
                -- Start quest if auto quest is enabled
                if _G.AutoQuest then
                    if not Player.PlayerGui.Main.Quest.Visible then
                        TweenToPosition(quest.pos)
                        wait(1)
                        StartQuest(quest.questName, 1)
                        wait(1)
                    end
                end
                
                -- Find and attack mobs
                local mob = GetNearestMob(quest.name)
                if mob and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                    -- Equip weapon
                    EquipWeapon(_G.SelectedWeapon)
                    
                    -- Bring mobs if enabled
                    if _G.BringMobs then
                        BringMobs(quest.name, RootPart.CFrame * CFrame.new(0, 0, -3))
                    end
                    
                    -- Move to mob
                    local targetPos = mob.HumanoidRootPart.Position
                    TweenToPosition(targetPos)
                    
                    -- Attack mob
                    repeat
                        wait()
                        if mob and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                            -- Position player near mob
                            RootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5)
                            
                            -- Fast attack
                            FastAttack()
                            
                            -- Use skills
                            if _G.SkillZ then
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "Z", false, game)
                                wait(0.1)
                            end
                            if _G.SkillX then
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "X", false, game)
                                wait(0.1)
                            end
                            if _G.SkillC then
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "C", false, game)
                                wait(0.1)
                            end
                            if _G.SkillV then
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "V", false, game)
                                wait(0.1)
                            end
                            if _G.SkillF then
                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "F", false, game)
                                wait(0.1)
                            end
                        end
                    until not mob or not mob:FindFirstChild("HumanoidRootPart") or mob.Humanoid.Health <= 0 or not _G.AutoFarm
                else
                    -- No mobs found, go to quest area
                    TweenToPosition(quest.pos)
                end
            end)
        end
    end)
end

-- Auto Farm Connection
RunService.Heartbeat:Connect(function()
    if _G.AutoFarm then
        AutoFarm()
    end
end)

-- Sea Teleport Positions
local SeaPositions = {
    [1] = { -- First Sea
        ["Starter Island"] = Vector3.new(-7967, 10, 4355),
        ["Marine Base"] = Vector3.new(-2566, 7, 2045),
        ["Jungle"] = Vector3.new(-1602, 37, 152),
        ["Pirate Village"] = Vector3.new(-1182, 5, 3855),
        ["Desert"] = Vector3.new(944, 21, 4373),
        ["Snow Island"] = Vector3.new(1347, 104, -1319),
        ["MarineFord"] = Vector3.new(-4914, 51, 4282),
        ["Skypiea"] = Vector3.new(-4842, 718, -2623),
        ["Prison"] = Vector3.new(4875, 6, 734),
        ["Colosseum"] = Vector3.new(-1427, 8, -2842),
        ["Magma Village"] = Vector3.new(-5247, 12, 8504),
        ["Under Water Island"] = Vector3.new(61123, 5, 1819),
        ["Upper Skylands"] = Vector3.new(-7894, 5547, -380),
        ["Sky Island 1"] = Vector3.new(-4970, 717, -1538),
        ["Sky Island 2"] = Vector3.new(-7894, 5547, -380),
        ["Sky Island 3"] = Vector3.new(-4607, 872, -1667)
    },
    [2] = { -- Second Sea
        ["First Spot"] = Vector3.new(-11, 29, -2918),
        ["Dark Area"] = Vector3.new(3780, 73, -3944),
        ["Kingdom of Rose"] = Vector3.new(-5496, 314, -2841),
        ["Queen's Palace"] = Vector3.new(-5496, 314, -2841),
        ["Stock"] = Vector3.new(-5084, 26, -294),
        ["Arena"] = Vector3.new(3770, 86, -3944),
        ["Snow Castle"] = Vector3.new(5669, 29, -6481),
        ["Ice Castle"] = Vector3.new(6148, 294, -6741),
        ["Forgotten Island"] = Vector3.new(-3054, 237, -10147),
        ["Ussy Island"] = Vector3.new(4816, 8, 2863),
        ["Mini Sky Island"] = Vector3.new(-288, 306, -2394),
        ["Great Tree"] = Vector3.new(2681, 1682, -7190),
        ["Cursed Ship"] = Vector3.new(923, 125, 32852),
        ["Ice Cream Island"] = Vector3.new(-820, 64, -10965),
        ["Peanut Island"] = Vector3.new(-2062, 50, -10232),
        ["Ice Cream Land"] = Vector3.new(-641, 26, -11952)
    },
    [3] = { -- Third Sea
        ["Mansion"] = Vector3.new(-12471, 374, -7551),
        ["Port Town"] = Vector3.new(-290, 44, 5581),
        ["Great Tree"] = Vector3.new(2681, 1682, -7190),
        ["Castle On The Sea"] = Vector3.new(-5085, 316, -3156),
        ["MiniSky"] = Vector3.new(-260, 306, -2394),
        ["Hydra Island"] = Vector3.new(5228, 604, 345),
        ["Floating Turtle"] = Vector3.new(-13274, 316, -8245),
        ["Haunted Castle"] = Vector3.new(-9515, 142, 5618),
        ["Ice Cream Island"] = Vector3.new(-902, 79, -10988),
        ["Peanut Island"] = Vector3.new(-2062, 50, -10232),
        ["Cake Island"] = Vector3.new(-1884, 19, -11516),
        ["Sea to Treats Old"] = Vector3.new(508, 25, -13232),
        ["Tiki Outpost"] = Vector3.new(-16234, 9, 439)
    }
}

-- Raid Chips
local RaidChips = {
    "Flame",
    "Ice", 
    "Sand",
    "Quake",
    "Light",
    "Dark",
    "String",
    "Rumble",
    "Magma",
    " Buddha",
    "Phoenix",
    "Dough",
}

-- Main Tab
Tabs.Main:AddParagraph({
    Title = "Player Info",
    Content = "Level: " .. GetPlayerLevel() .. "\nSea: " .. GetCurrentSea() .. "\nBeli: " .. GetPlayerMoney() .. "\nFragments: " .. GetPlayerFragments()
})

-- Auto Farm Tab
Tabs.AutoFarm:AddToggle("AutoFarm", {
    Title = "Auto Farm",
    Description = "Automatically farm level based on your level",
    Default = false,
    Callback = function(Value)
        _G.AutoFarm = Value
    end
})

Tabs.AutoFarm:AddToggle("AutoQuest", {
    Title = "Auto Quest",
    Description = "Automatically take quests",
    Default = false,
    Callback = function(Value)
        _G.AutoQuest = Value
    end
})

Tabs.AutoFarm:AddToggle("FastAttack", {
    Title = "Fast Attack",
    Description = "Attack faster",
    Default = false,
    Callback = function(Value)
        _G.FastAttack = Value
    end
})

Tabs.AutoFarm:AddToggle("BringMobs", {
    Title = "Bring Mobs",
    Description = "Bring mobs to you",
    Default = false,
    Callback = function(Value)
        _G.BringMobs = Value
    end
})

Tabs.AutoFarm:AddDropdown("WeaponSelect", {
    Title = "Select Weapon",
    Values = {"Melee", "Sword", "Gun", "Fruit"},
    Multi = false,
    Default = 1,
    Callback = function(Value)
        _G.SelectedWeapon = Value
    end
})

-- Skills
Tabs.AutoFarm:AddToggle("SkillZ", {
    Title = "Use Z Skill",
    Default = false,
    Callback = function(Value)
        _G.SkillZ = Value
    end
})

Tabs.AutoFarm:AddToggle("SkillX", {
    Title = "Use X Skill", 
    Default = false,
    Callback = function(Value)
        _G.SkillX = Value
    end
})

Tabs.AutoFarm:AddToggle("SkillC", {
    Title = "Use C Skill",
    Default = false,
    Callback = function(Value)
        _G.SkillC = Value
    end
})

Tabs.AutoFarm:AddToggle("SkillV", {
    Title = "Use V Skill",
    Default = false,
    Callback = function(Value)
        _G.SkillV = Value
    end
})

Tabs.AutoFarm:AddToggle("SkillF", {
    Title = "Use F Skill",
    Default = false,
    Callback = function(Value)
        _G.SkillF = Value
    end
})

-- Raid Tab with Chip Dropdown
Tabs.Raid:AddDropdown("RaidChip", {
    Title = "Select Raid Chip",
    Values = RaidChips,
    Multi = false,
    Default = 1,
    Callback = function(Value)
        _G.SelectedChip = Value
    end
})

Tabs.Raid:AddToggle("AutoRaid", {
    Title = "Auto Raid",
    Description = "Automatically do raids",
    Default = false,
    Callback = function(Value)
        _G.AutoRaid = Value
        if Value then
            spawn(function()
                while _G.AutoRaid do
                    wait(1)
                    -- Raid logic here
                    pcall(function()
                        local args = {
                            [1] = "Awakener",
                            [2] = "Check"
                        }
                        AttackRemote:InvokeServer(unpack(args))
                    end)
                end
            end)
        end
    end
})

-- Teleport Tab with Sea Navigation
local currentSea = GetCurrentSea()
local currentSeaPositions = SeaPositions[currentSea] or {}

-- Add Sea Teleports
Tabs.Teleport:AddButton({
    Title = "Teleport to First Sea",
    Description = "Travel to First Sea",
    Callback = function()
        game:GetService("TeleportService"):Teleport(2753915549, Player)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Second Sea", 
    Description = "Travel to Second Sea",
    Callback = function()
        game:GetService("TeleportService"):Teleport(4442272183, Player)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Third Sea",
    Description = "Travel to Third Sea", 
    Callback = function()
        game:GetService("TeleportService"):Teleport(7449423635, Player)
    end
})

-- Add Island Teleports for Current Sea
for locationName, position in pairs(currentSeaPositions) do
    Tabs.Teleport:AddButton({
        Title = locationName,
        Description = "Teleport to " .. locationName,
        Callback = function()
            TweenToPosition(position)
        end
    })
end

-- V4 Tab
Tabs.V4:AddToggle("AutoV4Trial", {
    Title = "Auto V4 Trial",
    Description = "Automatically do V4 trials",
    Default = false,
    Callback = function(Value)
        _G.AutoV4Trial = Value
    end
})

-- PvP Tab
Tabs.PvP:AddToggle("AimNearestPlayer", {
    Title = "Aim Nearest Player",
    Description = "Automatically aim at nearest player",
    Default = false,
    Callback = function(Value)
        _G.AimNearestPlayer = Value
    end
})

Tabs.PvP:AddToggle("AutoKillPlayer", {
    Title = "Auto Kill Player",
    Description = "Automatically attack players",
    Default = false,
    Callback = function(Value)
        _G.AutoKillPlayer = Value
    end
})

-- Sea Tab
Tabs.Sea:AddToggle("AutoSeaBeast", {
    Title = "Auto Sea Beast",
    Description = "Automatically hunt sea beasts",
    Default = false,
    Callback = function(Value)
        _G.AutoSeaBeast = Value
    end
})

Tabs.Sea:AddToggle("AutoShark", {
    Title = "Auto Shark",
    Description = "Automatically hunt sharks",
    Default = false,
    Callback = function(Value)
        _G.AutoShark = Value
    end
})

-- Settings Tab
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)
Fluent:Notify({
    Title = "SPACE HUB",
    Content = "Script loaded successfully!",
    Duration = 5
})

SaveManager:LoadAutoloadConfig()
