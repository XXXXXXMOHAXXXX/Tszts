local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 0.1

-- ui creation
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")

ScreenGui.Name = "SpaceHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton

UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45

UIScale.Parent = ImageButton
UIScale.Scale = 1

-- open/close functionality
local isHidden = false
ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    if isHidden then
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = true
            end
        end
        if Window and Window.Root then
            Window.Root.Visible = true
        end
        isHidden = false
    else
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = false
            end
        end
        if Window and Window.Root then
            Window.Root.Visible = false
        end
        isHidden = true
    end
end)

-- button animation
local function animateButton()
    local tween1 = game:GetService("TweenService"):Create(
        UIScale,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Scale = 0.8}
    )
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = game:GetService("TweenService"):Create(
            UIScale,
            TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Scale = 1.1}
        )
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = game:GetService("TweenService"):Create(
                UIScale,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Scale = 1}
            )
            tween3:Play()
        end)
    end)
end

wait(3)

-- load fluent library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- window creation
local Window = Fluent:CreateWindow({
    Title = "ENCHANTED HUB | BLOX FRUIT SEA 1",
    SubTitle = "Created by AABIS & moha",
    TabWidth = 125,
    Size = UDim2.fromOffset(600, 500),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "fan" }),
}

-- services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

-- variables
local _G = getgenv()
_G.FastAttack = false
_G.BringFruit = false
_G.StoreFruit = false
_G.AutoLevel = false
_G.AutoBone = false
_G.AutoKatakuri = false
_G.AutoDough = false

-- weapon functions
local function equipWeapon(weaponName)
    local weapon = Player.Backpack:FindFirstChild(weaponName) or Character:FindFirstChild(weaponName)
    if weapon and weapon.Parent == Player.Backpack then
        Humanoid:EquipTool(weapon)
    end
end

-- fast attack function
local function fastAttack()
    spawn(function()
        while _G.FastAttack do
            local weapon = Character:FindFirstChildOfClass("Tool")
            if weapon then
                local weaponName = weapon.Name
                if weaponName:match("Sword") or weaponName:match("Katana") or weaponName:match("Blade") then
                    game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
                    game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
                end
            end
            wait(0.1)
        end
    end)
end

-- fruit functions
local function bringFruit()
    spawn(function()
        while _G.BringFruit do
            for _, fruit in pairs(workspace:GetChildren()) do
                if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
                    fruit.Handle.CFrame = Player.Character.HumanoidRootPart.CFrame
                end
            end
            wait(1)
        end
    end)
end

local function storeFruit()
    spawn(function()
        while _G.StoreFruit do
            local backpackFruits = {}
            for _, item in pairs(Player.Backpack:GetChildren()) do
                if string.find(item.Name, "Fruit") then
                    table.insert(backpackFruits, item)
                end
            end
            if #backpackFruits > 1 then
                -- store logic would go here
                -- this requires game-specific remote events
            end
            wait(2)
        end
    end)
end

-- player stats function
local function getPlayerStats()
    local stats = {}
    if Player:FindFirstChild("Data") then
        stats.Level = Player.Data.Level.Value or 1
        stats.Money = Player.Data.Beli.Value or 0
        stats.Race = Player.Data.Race.Value or "Human"
        stats.Bounty = Player.leaderstats and Player.leaderstats.Bounty.Value or 0
    end
    return stats
end

-- sea 1 specific farming functions
local function autoLevel()
    spawn(function()
        while _G.AutoLevel do
            local sea1Enemies = {
                "Bandit", "Monkey", "Gorilla", "Pirate", "Brute", 
                "Desert Bandit", "Desert Officer", "Snow Bandit", 
                "Snowman", "Chief Petty Officer", "Sky Bandit"
            }
            
            local nearestEnemy = nil
            local shortestDistance = math.huge
            
            for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                for _, enemyName in pairs(sea1Enemies) do
                    if enemy.Name == enemyName and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                        local distance = (enemy.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
                        if distance < shortestDistance then
                            shortestDistance = distance
                            nearestEnemy = enemy
                        end
                    end
                end
            end
            
            if nearestEnemy then
                Player.Character.HumanoidRootPart.CFrame = nearestEnemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
            end
            wait(0.1)
        end
    end)
end

local function autoSea1Material()
    spawn(function()
        while _G.AutoSea1Material do
            -- sea 1 material farming (leather, scrap metal, etc)
            local materialEnemies = {"Brute", "Pirate", "Desert Officer"}
            
            for _, enemy in pairs(workspace.Enemies:GetChildren()) do
                for _, enemyName in pairs(materialEnemies) do
                    if enemy.Name == enemyName and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                        Player.Character.HumanoidRootPart.CFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                        break
                    end
                end
            end
            wait(0.1)
        end
    end)
end

-- main tab
Tabs.Main:AddSection("Weapon")

local WeaponDropdown = Tabs.Main:AddDropdown("WeaponDropdown", {
    Title = "Choose Weapon",
    Values = {"Melee", "Sword", "Blox Fruit", "Gun"},
    Multi = false,
    Default = 1,
})

WeaponDropdown:OnChanged(function(Value)
    local weapons = {
        ["Melee"] = "Combat",
        ["Sword"] = "Katana",
        ["Blox Fruit"] = "Rubber",
        ["Gun"] = "Slingshot"
    }
    if weapons[Value] then
        equipWeapon(weapons[Value])
    end
end)

local FastAttackToggle = Tabs.Main:AddToggle("FastAttack", {
    Title = "Fast Attack",
    Default = false
})

FastAttackToggle:OnChanged(function(Value)
    _G.FastAttack = Value
    if Value then
        fastAttack()
    end
end)

-- fruits section
Tabs.Main:AddSection("Fruits")

local BringFruitToggle = Tabs.Main:AddToggle("BringFruit", {
    Title = "Bring Fruit",
    Default = false
})

BringFruitToggle:OnChanged(function(Value)
    _G.BringFruit = Value
    if Value then
        bringFruit()
    end
end)

local StoreFruitToggle = Tabs.Main:AddToggle("StoreFruit", {
    Title = "Store Fruit",
    Default = false
})

StoreFruitToggle:OnChanged(function(Value)
    _G.StoreFruit = Value
    if Value then
        storeFruit()
    end
end)

-- player stats section
Tabs.Main:AddSection("Player Stats")

local StatsLabel = Tabs.Main:AddParagraph({
    Title = "Current Stats",
    Content = "Loading..."
})

spawn(function()
    while true do
        local stats = getPlayerStats()
        local sea = "Sea 1" -- can be determined by game state
        StatsLabel:SetDesc(string.format(
            "Level: %d\nMoney: %d Beli\nRace: %s\nBounty: %d\nSea: %s",
            stats.Level or 1,
            stats.Money or 0,
            stats.Race or "Human",
            stats.Bounty or 0,
            sea
        ))
        wait(5)
    end
end)

-- auto farm tab
Tabs.AutoFarm:AddSection("Level Farming")

local AutoLevelToggle = Tabs.AutoFarm:AddToggle("AutoLevel", {
    Title = "Auto Level",
    Default = false
})

AutoLevelToggle:OnChanged(function(Value)
    _G.AutoLevel = Value
    if Value then
        autoLevel()
    end
end)

Tabs.AutoFarm:AddSection("Material Farming")

local AutoSea1MaterialToggle = Tabs.AutoFarm:AddToggle("AutoSea1Material", {
    Title = "Auto Sea 1 Materials",
    Default = false
})

AutoSea1MaterialToggle:OnChanged(function(Value)
    _G.AutoSea1Material = Value
    if Value then
        autoSea1Material()
    end
end)

Tabs.AutoFarm:AddSection("Quest Farming")

local QuestDropdown = Tabs.AutoFarm:AddDropdown("QuestDropdown", {
    Title = "Select Quest",
    Values = {"Bandit", "Monkey", "Gorilla", "Pirate", "Brute", "Desert Bandit", "Desert Officer", "Snow Bandit", "Snowman", "Chief Petty Officer"},
    Multi = false,
    Default = 1,
})

local AutoQuestToggle = Tabs.AutoFarm:AddToggle("AutoQuest", {
    Title = "Auto Quest",
    Default = false
})

AutoQuestToggle:OnChanged(function(Value)
    if Value then
        spawn(function()
            while _G.AutoQuest do
                -- quest logic would be implemented here
                -- this requires specific game knowledge for each quest NPC
                wait(1)
            end
        end)
    end
    _G.AutoQuest = Value
end)

Tabs.AutoFarm:AddSection("Boss Farming")

local BossDropdown = Tabs.AutoFarm:AddDropdown("BossDropdown", {
    Title = "Select Boss",
    Values = {"The Gorilla King", "Bobby", "Yeti", "Mob Leader", "Vice Admiral", "Warden", "Chief Warden"},
    Multi = false,
    Default = 1,
})

local AutoBossToggle = Tabs.AutoFarm:AddToggle("AutoBoss", {
    Title = "Auto Boss",
    Default = false
})

AutoBossToggle:OnChanged(function(Value)
    if Value then
        spawn(function()
            while _G.AutoBoss do
                local selectedBoss = BossDropdown.Value
                -- boss farming logic would be implemented here
                wait(0.5)
            end
        end)
    end
    _G.AutoBoss = Value
end)

-- save manager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Main)
SaveManager:BuildConfigSection(Tabs.Main)

Window:SelectTab(1)

SaveManager:LoadAutoloadConfig()
