-- ENCHANTED HUB | BLOX FRUIT Script
-- Created by AABIS
-- Advanced Features & Auto Systems

local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 0.1

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")

-- Player Variables
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Game Detection
local PlaceId = game.PlaceId
local CurrentSea = 1
if PlaceId == 2753915549 then
    CurrentSea = 1
elseif PlaceId == 4442272183 then
    CurrentSea = 2
elseif PlaceId == 7449423635 then
    CurrentSea = 3
end

-- Global Variables
local ScriptSettings = {
    AutoFarm = false,
    BringMobs = false,
    FastAttack = false,
    AutoBoss = false,
    AutoRaid = false,
    SelectedWeapon = nil,
    SelectedBoss = nil,
    SelectedLocation = nil,
    SkillAimbot = false,
    PlayerAimbot = false,
    AutoV4 = false,
    AutoSpecialFarm = false
}

-- UI Creation
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")

ScreenGui.Name = "SpaceHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton

UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45

UIScale.Parent = ImageButton
UIScale.Scale = 1

-- Animation Function
local function animateButton()
    local tween1 = TweenService:Create(
        UIScale,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Scale = 0.8}
    )
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = TweenService:Create(
            UIScale,
            TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Scale = 1.1}
        )
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = TweenService:Create(
                UIScale,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Scale = 1}
            )
            tween3:Play()
        end)
    end)
end

-- Open/Close Logic
local isUIVisible = true
ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    isUIVisible = not isUIVisible
    
    -- Hide/Show all GUI elements properly
    for _, gui in pairs(game.CoreGui:GetChildren()) do
        if gui.Name ~= "SpaceHubButton" and gui:FindFirstChild("Frame") then
            gui.Enabled = isUIVisible
        end
    end
    
    -- Also handle the main window if it exists
    spawn(function()
        wait(0.5)
        if Window and Window.Root then
            Window.Root.Visible = isUIVisible
        end
    end)
end)

-- Load Fluent UI
wait(3)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "ENCHANTED HUB | BLOX FRUIT ",
    SubTitle = "Created by AABIS ",
    TabWidth = 155,
    Size = UDim2.fromOffset(600, 500),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "fan" }),
    Raid = Window:AddTab({ Title = "Raid", Icon = "shield" }),
    V4 = Window:AddTab({ Title = "V4 Awakening", Icon = "star" }),
    PvP = Window:AddTab({ Title = "PvP", Icon = "sword" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Sea = Window:AddTab({ Title = "Sea", Icon = "anchor" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Weapons Data
local WeaponsList = {
    "Combat", "Sword", "Melee", "Blox Fruit", "Gun"
}

-- Sea-specific Data
local SeaData = {
    [1] = {
        bosses = {"The Gorilla King", "Bobby", "Yeti", "Mob Leader", "Vice Admiral", "Warden", "Chief Warden", "Swan", "Magma Admiral", "Fishman Lord", "Wysper", "Thunder God", "Cyborg"},
        locations = {"Middle Town", "Pirate Village", "Marine Base", "Jungle", "Pirate Village", "Desert", "Frozen Village", "Marine Fortress", "Sky Island", "Prison", "Colosseum", "Magma Village", "Under Water City", "Fountain City", "Shank Room", "Mob Island"},
        specialFarms = {"AUTO SABER SWORD", "AUTO 2 SEA QUEST"},
        mobs = {
            {name = "Bandit", level = {5, 7}},
            {name = "Monkey", level = {14, 16}},
            {name = "Gorilla", level = {20, 25}},
            {name = "Pirate", level = {35, 40}},
            {name = "Brute", level = {45, 50}},
            {name = "Desert Bandit", level = {60, 65}},
            {name = "Desert Officer", level = {70, 75}},
            {name = "Snow Bandit", level = {90, 95}},
            {name = "Snowman", level = {100, 105}},
            {name = "Chief Petty Officer", level = {120, 125}},
            {name = "Sky Bandit", level = {150, 155}},
            {name = "Dark Master", level = {175, 180}},
            {name = "Prisoner", level = {190, 195}},
            {name = "Dangerous Prisoner", level = {210, 215}},
            {name = "Toga Warrior", level = {250, 255}},
            {name = "Gladiator", level = {275, 280}},
            {name = "Military Soldier", level = {300, 305}},
            {name = "Military Spy", level = {325, 330}},
            {name = "Fishman Warrior", level = {375, 380}},
            {name = "Fishman Commando", level = {400, 405}},
            {name = "God's Guard", level = {450, 455}},
            {name = "Shanda", level = {475, 480}},
            {name = "Royal Squad", level = {525, 530}},
            {name = "Royal Soldier", level = {550, 555}},
            {name = "Galley Pirate", level = {625, 630}},
            {name = "Galley Captain", level = {650, 655}}
        }
    },
    [2] = {
        bosses = {"Diamond", "Jeremy", "Fajita", "Don Swan", "Smoke Admiral", "Cursed Captain", "Darkbeard", "Order", "Awakened Ice Admiral", "Tide Keeper"},
        locations = {"The Cafe", "Frist Spot", "Dark Area", "Flamingo Mansion", "Flamingo Room", "Green Zone", "Factory", "Colossuim", "Zombie Island", "Two Snow Mountain", "Punk Hazard", "Cursed Ship", "Ice Castle", "Forgotten Island", "Ussop Island", "Mini Sky Island"},
        specialFarms = {"AUTO RACE 2", "AUTO RACE 3"},
        mobs = {
            {name = "Raider", level = {700, 725}},
            {name = "Mercenary", level = {725, 775}},
            {name = "Swan Pirate", level = {775, 825}},
            {name = "Factory Staff", level = {800, 850}},
            {name = "Marine Lieutenant", level = {875, 900}},
            {name = "Marine Captain", level = {900, 950}},
            {name = "Zombie", level = {950, 975}},
            {name = "Vampire", level = {975, 1000}},
            {name = "Snow Trooper", level = {1000, 1050}},
            {name = "Winter Warrior", level = {1100, 1150}},
            {name = "Lab Subordinate", level = {1150, 1200}},
            {name = "Horned Warrior", level = {1200, 1250}},
            {name = "Magma Ninja", level = {1175, 1200}},
            {name = "Lava Pirate", level = {1200, 1250}},
            {name = "Ship Deckhand", level = {1250, 1300}},
            {name = "Ship Engineer", level = {1275, 1300}},
            {name = "Ship Steward", level = {1300, 1325}},
            {name = "Ship Officer", level = {1325, 1350}},
            {name = "Arctic Warrior", level = {1350, 1400}},
            {name = "Snow Lurker", level = {1375, 1400}},
            {name = "Sea Soldier", level = {1425, 1450}},
            {name = "Water Fighter", level = {1450, 1500}}
        }
    },
    [3] = {
        bosses = {"Stone", "Island Empress", "Kilo Admiral", "Captain Elephant", "Beautiful Pirate", "rip_indra True Form", "Longma", "Soul Reaper", "Cake Queen"},
        locations = {"Mansion", "Port Town", "Great Tree", "Castle On The Sea", "MiniSky", "Hydra Island", "Floating Turtle", "Haunted Castle", "Ice Cream Island", "Peanut Island", "Cocoa Island", "Candy Island", "Tiki Outpost"},
        specialFarms = {"AUTO CDK SWORD", "AUTO YAMA", "AUTO TUSHITA", "AUTO ELITE HUNTER", "AUTO FARM BONES"},
        mobs = {
            {name = "Pirate Millionaire", level = {1500, 1525}},
            {name = "Dragon Crew Warrior", level = {1575, 1600}},
            {name = "Dragon Crew Archer", level = {1600, 1625}},
            {name = "Female Islander", level = {1675, 1700}},
            {name = "Giant Islander", level = {1700, 1725}},
            {name = "Marine Commodore", level = {1700, 1725}},
            {name = "Marine Rear Admiral", level = {1725, 1750}},
            {name = "Fishman Raider", level = {1775, 1800}},
            {name = "Fishman Captain", level = {1800, 1825}},
            {name = "Forest Pirate", level = {1825, 1850}},
            {name = "Mythological Pirate", level = {1850, 1875}},
            {name = "Jungle Pirate", level = {1900, 1925}},
            {name = "Musketeer Pirate", level = {1925, 1950}},
            {name = "Reborn Skeleton", level = {1975, 2000}},
            {name = "Living Zombie", level = {2000, 2025}},
            {name = "Demonic Soul", level = {2025, 2050}},
            {name = "Posessed Mummy", level = {2050, 2075}},
            {name = "Peanut Scout", level = {2075, 2100}},
            {name = "Peanut President", level = {2100, 2125}},
            {name = "Ice Cream Chef", level = {2125, 2150}},
            {name = "Ice Cream Commander", level = {2150, 2175}},
            {name = "Cookie Crafter", level = {2200, 2225}},
            {name = "Cake Guard", level = {2225, 2250}},
            {name = "Baking Staff", level = {2250, 2275}},
            {name = "Head Baker", level = {2275, 2300}},
            {name = "Cocoa Warrior", level = {2300, 2325}},
            {name = "Chocolate Bar Battler", level = {2325, 2350}},
            {name = "Sweet Thief", level = {2350, 2375}},
            {name = "Candy Rebel", level = {2375, 2400}},
            {name = "Candy Pirate", level = {2400, 2425}},
            {name = "Snow Demon", level = {2425, 2450}},
            {name = "Isle Outlaw", level = {2450, 2475}},
            {name = "Island Boy", level = {2475, 2500}},
            {name = "Sun-kissed Warrior", level = {2500, 2525}},
            {name = "Isle Champion", level = {2525, 2550}},
            {name = "Leviathan", level = {2575, 2600}},
            {name = "Kraken", level = {2600, 2625}},
            {name = "Terrorshark", level = {2625, 2650}}
        }
    }
}

-- Helper Functions
local function GetPlayerStats()
    local stats = {
        Level = Player.leaderstats and Player.leaderstats.Level.Value or "Unknown",
        Money = Player.leaderstats and Player.leaderstats["Beli"].Value or "Unknown",
        Fragments = Player.leaderstats and Player.leaderstats["Fragments"].Value or "Unknown",
        Race = "Unknown", -- Would need specific game data
        Bounty = Player.leaderstats and Player.leaderstats["Bounty/Honor"].Value or "Unknown"
    }
    return stats
end

local function AttackMob(mob, weapon)
    if not mob or not mob:FindFirstChild("Humanoid") or mob.Humanoid.Health <= 0 then
        return
    end
    
    -- Position player above the mob for better hitbox
    local mobPosition = mob.HumanoidRootPart.Position
    RootPart.CFrame = CFrame.new(mobPosition + Vector3.new(0, 8, 0)) * CFrame.Angles(math.rad(-90), 0, 0)
    
    -- Try to equip the weapon if not already equipped
    if weapon and Player.Backpack:FindFirstChild(weapon) then
        Player.Character.Humanoid:EquipTool(Player.Backpack[weapon])
    end

    -- Enhanced attack with larger hitbox
    for i = 1, 3 do
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        wait(0.01)
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        wait(0.01)
    end
    
    -- Use game remote for more reliable damage
    pcall(function()
        local args = {
            [1] = "Attack"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end)
end

local hakiEnabled = false
local function EnableHaki()
    if hakiEnabled then return end
    
    hakiEnabled = true
    spawn(function()
        -- Enable Buso (Armament Haki)
        pcall(function()
            local args = {
                [1] = "Buso"
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end)
        
        wait(1)
        
        -- Enable Ken (Observation Haki)
        pcall(function()
            local args = {
                [1] = "Ken",
                [2] = true
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end)
        
        wait(30) -- Wait 30 seconds before allowing haki to be enabled again
        hakiEnabled = false
    end)
end

local function BringMobsToPlayer()
    if not ScriptSettings.BringMobs then return end
    
    for _, mob in pairs(Workspace.Enemies:GetChildren()) do
        if mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") then
            if mob.Humanoid.Health > 0 then
                local distance = (RootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                if distance < 500 then -- Only bring mobs within 500 studs
                    mob.HumanoidRootPart.CFrame = RootPart.CFrame * CFrame.new(0, 0, -10)
                    mob.HumanoidRootPart.CanCollide = false
                    mob.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
                    if mob:FindFirstChild("Body") then
                        mob.Body:Destroy()
                    end
                end
            end
        end
    end
end

local function GetAllPlayers()
    local playerList = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            table.insert(playerList, player.Name)
        end
    end
    return playerList
end

local function GetNearestPlayer()
    local nearestPlayer = nil
    local nearestDistance = math.huge
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (RootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestPlayer = player
            end
        end
    end
    
    return nearestPlayer
end

local function GetFruitStock()
    -- Get current fruit stock from Blox Fruit Dealer
    pcall(function()
        local args = {
            [1] = "GetFruits",
            [2] = true
        }
        local result = game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        
        if result then
            print("=== CURRENT FRUIT STOCK ===")
            for fruit, data in pairs(result) do
                if data.OnSale then
                    print("ðŸŽ " .. fruit .. " - Price: $" .. tostring(data.Price))
                end
            end
            print("==========================")
        end
    end)
end

local function StoreFruit()
    local args = {
        [1] = "StoreFruit",
        [2] = Player.Character:FindFirstChild("Fruit") and Player.Character.Fruit.Name or nil
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end

local function RollFruit()
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end

-- Teleport locations with coordinates
local TeleportLocations = {
    [1] = { -- First Sea
        ["Middle Town"] = CFrame.new(1068, 16, 1429),
        ["Pirate Village"] = CFrame.new(-345, 7, 263),
        ["Marine Base"] = CFrame.new(-2573, 7, -326),
        ["Jungle"] = CFrame.new(-1612, 36, 149),
        ["Desert"] = CFrame.new(944, 20, 4373),
        ["Frozen Village"] = CFrame.new(1347, 104, -1319),
        ["Marine Fortress"] = CFrame.new(-4914, 50, 4040),
        ["Sky Island"] = CFrame.new(-4970, 717, -2622),
        ["Prison"] = CFrame.new(4854, 5, 734),
        ["Colosseum"] = CFrame.new(-1427, 7, -2792),
        ["Magma Village"] = CFrame.new(-5247, 12, -4445),
        ["Under Water City"] = CFrame.new(61163, 11, 1819),
        ["Fountain City"] = CFrame.new(5127, 59, 4105),
        ["Shank Room"] = CFrame.new(-1442, 29, -12),
        ["Mob Island"] = CFrame.new(-2850, 7, -253)
    },
    [2] = { -- Second Sea
        ["The Cafe"] = CFrame.new(-380, 77, 251),
        ["Frist Spot"] = CFrame.new(-11, 29, 2771),
        ["Dark Area"] = CFrame.new(3780, 22, -3498),
        ["Flamingo Mansion"] = CFrame.new(-483, 332, 595),
        ["Flamingo Room"] = CFrame.new(2284, 15, 905),
        ["Green Zone"] = CFrame.new(-2448, 72, -3262),
        ["Factory"] = CFrame.new(424, 211, -427),
        ["Colossuim"] = CFrame.new(-1503, 219, 1369),
        ["Zombie Island"] = CFrame.new(-5622, 492, -781),
        ["Two Snow Mountain"] = CFrame.new(753, 408, -5274),
        ["Punk Hazard"] = CFrame.new(-6127, 15, -5420),
        ["Cursed Ship"] = CFrame.new(923, 125, 32885),
        ["Ice Castle"] = CFrame.new(6148, 294, -6741),
        ["Forgotten Island"] = CFrame.new(-3032, 317, -10075),
        ["Ussop Island"] = CFrame.new(4816, 8, 2863),
        ["Mini Sky Island"] = CFrame.new(-288, 306, -2394)
    },
    [3] = { -- Third Sea
        ["Mansion"] = CFrame.new(-12468, 374, -7551),
        ["Port Town"] = CFrame.new(-290, 43, 5343),
        ["Great Tree"] = CFrame.new(2681, 1682, -7190),
        ["Castle On The Sea"] = CFrame.new(-5074, 314, -2991),
        ["MiniSky"] = CFrame.new(-260, 1968, -431),
        ["Hydra Island"] = CFrame.new(5228, 604, -345),
        ["Floating Turtle"] = CFrame.new(-13274, 531, -7579),
        ["Haunted Castle"] = CFrame.new(-9515, 142, 5618),
        ["Ice Cream Island"] = CFrame.new(-902, 79, -10988),
        ["Peanut Island"] = CFrame.new(-2062, 50, -10232),
        ["Cocoa Island"] = CFrame.new(87, 73, -12297),
        ["Candy Island"] = CFrame.new(-1049, 13, -14822),
        ["Tiki Outpost"] = CFrame.new(-16234, 9, 439)
    }
}

local function GetCurrentMobsForLevel()
    local playerLevel = Player.leaderstats and Player.leaderstats.Level.Value or 1
    local seaMobs = SeaData[CurrentSea].mobs
    local suitableMobs = {}
    
    for _, mob in pairs(seaMobs) do
        if mob.level[1] <= playerLevel and mob.level[2] >= playerLevel then
            table.insert(suitableMobs, mob.name)
        end
    end
    
    return suitableMobs
end

local function TweenToPosition(position)
    if not RootPart then return end
    
    local distance = (RootPart.Position - position).Magnitude
    local speed = 350
    local time = distance / speed
    
    local tween = TweenService:Create(
        RootPart,
        TweenInfo.new(time, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(position)}
    )
    
    tween:Play()
    return tween
end

local function GetNearestMob(mobName)
    local nearestMob = nil
    local nearestDistance = math.huge
    
    for _, mob in pairs(Workspace.Enemies:GetChildren()) do
        if mob.Name == mobName and mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") then
            if mob.Humanoid.Health > 0 then
                local distance = (RootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                if distance < nearestDistance then
                    nearestDistance = distance
                    nearestMob = mob
                end
            end
        end
    end
    
    return nearestMob
end

-- Main Tab Implementation
do
    -- Weapon Selection
    local WeaponDropdown = Tabs.Main:AddDropdown("WeaponDropdown", {
        Title = "Choose Weapon",
        Values = WeaponsList,
        Multi = false,
        Default = 1,
    })
    
    WeaponDropdown:OnChanged(function(Value)
        ScriptSettings.SelectedWeapon = Value
        print("Selected weapon:", Value)
    end)
    
    -- Combat Section
    Tabs.Main:AddSection("Combat")
    
    local BringMobsToggle = Tabs.Main:AddToggle("BringMobs", {
        Title = "Bring Mobs",
        Default = false
    })
    
    BringMobsToggle:OnChanged(function(Value)
        ScriptSettings.BringMobs = Value
        if Value then
            spawn(function()
                while ScriptSettings.BringMobs do
                    BringMobsToPlayer()
                    wait(0.1)
                end
            end)
        end
    end)
    
    local FastAttackToggle = Tabs.Main:AddToggle("FastAttack", {
        Title = "Fast Attack",
        Default = false
    })
    
    FastAttackToggle:OnChanged(function(Value)
        ScriptSettings.FastAttack = Value
        if Value then
            spawn(function()
                while ScriptSettings.FastAttack do
                    -- Enhanced fast attack with bigger hitbox
                    for i = 1, 5 do
                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                        wait(0.01)
                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
                        wait(0.01)
                    end
                    
                    -- Use game attack remote for better range
                    pcall(function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Attack")
                    end)
                    
                    wait(0.03) -- Super fast attack speed
                end
            end)
        end
    end)
    
    local AutoHakiToggle = Tabs.Main:AddToggle("AutoHaki", {
        Title = "Auto Haki",
        Default = false
    })
    
    AutoHakiToggle:OnChanged(function(Value)
        ScriptSettings.AutoHaki = Value
        if Value then
            spawn(function()
                while ScriptSettings.AutoHaki do
                    EnableHaki()
                    wait(10) -- Enable haki every 10 seconds
                end
            end)
        end
    end)
    
    -- Fruits Section
    Tabs.Main:AddSection("Fruits")
    
    local OpenFruitStock = Tabs.Main:AddButton({
        Title = "Open Fruit Stock",
        Description = "Shows current fruit stock available",
        Callback = function()
            local stock = GetFruitStock()
            print("Current Fruit Stock:")
            if stock then
                for fruit, available in pairs(stock) do
                    if available then
                        print("- " .. fruit .. ": Available")
                    end
                end
            else
                print("Could not retrieve fruit stock")
            end
        end
    })
    
    local ESPFruitToggle = Tabs.Main:AddToggle("ESPFruit", {
        Title = "ESP Fruit/Notification",
        Default = false
    })
    
    local fruitESPConnections = {}
    ESPFruitToggle:OnChanged(function(Value)
        ScriptSettings.ESPFruit = Value
        if Value then
            spawn(function()
                while ScriptSettings.ESPFruit do
                    for _, fruit in pairs(Workspace:GetChildren()) do
                        if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
                            -- Only create ESP if it doesn't exist
                            if not fruit.Handle:FindFirstChild("FruitESP") then
                                local distance = math.floor((RootPart.Position - fruit.Handle.Position).Magnitude)
                                
                                local billboard = Instance.new("BillboardGui")
                                local label = Instance.new("TextLabel")
                                
                                billboard.Name = "FruitESP"
                                billboard.Parent = fruit.Handle
                                billboard.Size = UDim2.new(0, 120, 0, 60)
                                billboard.StudsOffset = Vector3.new(0, 3, 0)
                                billboard.AlwaysOnTop = true
                                
                                label.Parent = billboard
                                label.Size = UDim2.new(1, 0, 1, 0)
                                label.BackgroundTransparency = 1
                                label.Text = fruit.Name .. "\n[" .. distance .. " studs]"
                                label.TextColor3 = Color3.new(1, 0.8, 0)
                                label.TextStrokeTransparency = 0
                                label.Font = Enum.Font.SourceSansBold
                                label.TextSize = 16
                                label.TextScaled = true
                                
                                -- Update distance periodically
                                local connection
                                connection = RunService.Heartbeat:Connect(function()
                                    if fruit and fruit.Handle and billboard then
                                        local newDistance = math.floor((RootPart.Position - fruit.Handle.Position).Magnitude)
                                        label.Text = fruit.Name .. "\n[" .. newDistance .. " studs]"
                                    else
                                        connection:Disconnect()
                                    end
                                end)
                                
                                table.insert(fruitESPConnections, connection)
                            end
                        end
                    end
                    wait(2) -- Check every 2 seconds to avoid lag
                end
            end)
        else
            -- Remove all fruit ESP and disconnect connections
            for _, connection in pairs(fruitESPConnections) do
                connection:Disconnect()
            end
            fruitESPConnections = {}
            
            for _, fruit in pairs(Workspace:GetChildren()) do
                if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
                    if fruit.Handle:FindFirstChild("FruitESP") then
                        fruit.Handle.FruitESP:Destroy()
                    end
                end
            end
        end
    end)
    
    local BringFruitToggle = Tabs.Main:AddToggle("BringFruit", {
        Title = "Bring Fruit",
        Default = false
    })
    
    BringFruitToggle:OnChanged(function(Value)
        ScriptSettings.BringFruit = Value
        if Value then
            spawn(function()
                while ScriptSettings.BringFruit do
                    for _, fruit in pairs(Workspace:GetChildren()) do
                        if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
                            fruit.Handle.CFrame = RootPart.CFrame * CFrame.new(0, 5, -5)
                        end
                    end
                    wait(0.5)
                end
            end)
        end
    end)
    
    local StoreFruitButton = Tabs.Main:AddButton({
        Title = "Store Fruit",
        Description = "Stores current fruit in backpack",
        Callback = function()
            StoreFruit()
            print("Fruit stored!")
        end
    })
    
    local RollFruitButton = Tabs.Main:AddButton({
        Title = "Roll Random Fruit",
        Description = "Rolls a random fruit from gacha",
        Callback = function()
            RollFruit()
            print("Rolling fruit from gacha...")
        end
    })
    
    -- Player Stats Section
    Tabs.Main:AddSection("Player Stats")
    
    local StatsLabel = Tabs.Main:AddParagraph({
        Title = "Current Stats",
        Content = "Loading stats..."
    })
    
    -- Update stats periodically
    spawn(function()
        while true do
            wait(5)
            local stats = GetPlayerStats()
            local statsText = string.format(
                "Level: %s\nMoney: %s\nFragments: %s\nRace: %s\nBounty: %s",
                tostring(stats.Level),
                tostring(stats.Money),
                tostring(stats.Fragments),
                tostring(stats.Race),
                tostring(stats.Bounty)
            )
            StatsLabel:SetDesc(statsText)
        end
    end)
end

-- Auto Farm Tab Implementation
do
    -- Level Farming
    Tabs.AutoFarm:AddSection("Level Farm")
    
    local AutoFarmToggle = Tabs.AutoFarm:AddToggle("AutoFarm", {
        Title = "Auto Farm Level",
        Default = false
    })
    
    AutoFarmToggle:OnChanged(function(Value)
        ScriptSettings.AutoFarm = Value
        if Value then
            spawn(function()
                while ScriptSettings.AutoFarm do
                    local suitableMobs = GetCurrentMobsForLevel()
                    if #suitableMobs > 0 then
                        local targetMob = suitableMobs[1]
                        local mob = GetNearestMob(targetMob)
                        if mob then
                            -- Move to mob
                            TweenToPosition(mob.HumanoidRootPart.Position + Vector3.new(0, 0, -5))
                            wait(1)
                            
                            -- Attack the mob repeatedly until it dies
                            for i = 1, 15 do
                                if not mob or not mob:FindFirstChild("Humanoid") or mob.Humanoid.Health <= 0 then
                                    break
                                end
                                AttackMob(mob, ScriptSettings.SelectedWeapon or "Combat")
                                wait(0.2)
                            end
                        end
                    end
                    wait(0.5)
                end
            end)
        end
    end)
    
    -- Boss Farm
    Tabs.AutoFarm:AddSection("Boss Farm")
    
    local BossDropdown = Tabs.AutoFarm:AddDropdown("BossDropdown", {
        Title = "Select Boss",
        Values = SeaData[CurrentSea].bosses,
        Multi = false,
        Default = 1,
    })
    
    BossDropdown:OnChanged(function(Value)
        ScriptSettings.SelectedBoss = Value
    end)
    
    local AutoBossToggle = Tabs.AutoFarm:AddToggle("AutoBoss", {
        Title = "Auto Boss Farm",
        Default = false
    })
    
    AutoBossToggle:OnChanged(function(Value)
        ScriptSettings.AutoBoss = Value
        if Value then
            spawn(function()
                while ScriptSettings.AutoBoss do
                    if ScriptSettings.SelectedBoss then
                        local boss = GetNearestMob(ScriptSettings.SelectedBoss)
                        if boss then
                            TweenToPosition(boss.HumanoidRootPart.Position + Vector3.new(0, 0, -10))
                            wait(1)
                            
                            -- Attack boss repeatedly
                            for i = 1, 20 do
                                if not boss or not boss:FindFirstChild("Humanoid") or boss.Humanoid.Health <= 0 then
                                    break
                                end
                                AttackMob(boss, ScriptSettings.SelectedWeapon or "Combat")
                                wait(0.3)
                            end
                        end
                    end
                    wait(1)
                end
            end)
        end
    end)
    
    -- Special Farm Section
    Tabs.AutoFarm:AddSection("Special Farm")
    
    if CurrentSea == 1 then
        -- AUTO SABER SWORD
        local AutoSaberToggle = Tabs.AutoFarm:AddToggle("AutoSaber", {
            Title = "AUTO SABER SWORD",
            Default = false
        })
        
        AutoSaberToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    print("Starting Saber sword quest...")
                    
                    -- Step 1: Go to Jungle and get the quest
                    RootPart.CFrame = CFrame.new(-1612, 36, 149)
                    wait(2)
                    
                    -- Start Saber quest
                    pcall(function()
                        local args = {
                            [1] = "ProQuestProgress",
                            [2] = "SaberExpert"
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    end)
                    
                    wait(1)
                    
                    -- Step 2: Kill Saber Expert
                    local saberExpert = GetNearestMob("Saber Expert")
                    if saberExpert then
                        while saberExpert and saberExpert:FindFirstChild("Humanoid") and saberExpert.Humanoid.Health > 0 do
                            RootPart.CFrame = CFrame.new(saberExpert.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                            AttackMob(saberExpert, ScriptSettings.SelectedWeapon or "Combat")
                            wait(0.2)
                        end
                    end
                    
                    wait(2)
                    
                    -- Step 3: Complete saber quest
                    pcall(function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("ProQuestProgress", "RichSon")
                    end)
                    
                    print("Saber quest completed!")
                end)
            end
        end)
        
        -- AUTO 2 SEA QUEST
        local Auto2SeaToggle = Tabs.AutoFarm:AddToggle("Auto2Sea", {
            Title = "AUTO 2 SEA QUEST",
            Default = false
        })
        
        Auto2SeaToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    local playerLevel = Player.leaderstats and Player.leaderstats.Level.Value or 1
                    if playerLevel >= 700 then
                        print("Starting 2nd Sea quest...")
                        -- Implement 2nd sea quest logic
                        local args = {
                            [1] = "DressrosaQuestProgress",
                            [2] = "Detective"
                        }
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    else
                        print("Need level 700+ for 2nd Sea quest!")
                    end
                end)
            end
        end)
        
    elseif CurrentSea == 2 then
        -- AUTO RACE V2
        local AutoRace2Toggle = Tabs.AutoFarm:AddToggle("AutoRace2", {
            Title = "AUTO RACE V2",
            Default = false
        })
        
        AutoRace2Toggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    print("Starting Race V2 quest...")
                    -- Implement race v2 logic
                end)
            end
        end)
        
        -- AUTO RACE V3
        local AutoRace3Toggle = Tabs.AutoFarm:AddToggle("AutoRace3", {
            Title = "AUTO RACE V3",
            Default = false
        })
        
        AutoRace3Toggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    print("Starting Race V3 quest...")
                    -- Implement race v3 logic
                end)
            end
        end)
        
    elseif CurrentSea == 3 then
        -- AUTO CDK SWORD
        local AutoCDKToggle = Tabs.AutoFarm:AddToggle("AutoCDK", {
            Title = "AUTO CDK SWORD",
            Default = false
        })
        
        AutoCDKToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    print("Starting CDK sword quest...")
                    
                    -- Step 1: Get Tushita sword first
                    RootPart.CFrame = CFrame.new(-12468, 374, -7551)
                    wait(2)
                    
                    -- Get Tushita quest
                    pcall(function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest", "Progress", "Good")
                    end)
                    
                    wait(2)
                    
                    -- Step 2: Complete CDK trials
                    local cdkTrials = {
                        "Cake Prince",
                        "Dough King",
                        "rip_indra True Form"
                    }
                    
                    for _, bossName in pairs(cdkTrials) do
                        local boss = GetNearestMob(bossName)
                        if boss then
                            print("Fighting", bossName, "for CDK...")
                            while boss and boss:FindFirstChild("Humanoid") and boss.Humanoid.Health > 0 do
                                RootPart.CFrame = CFrame.new(boss.HumanoidRootPart.Position + Vector3.new(0, 15, 0))
                                
                                -- Enhanced boss fighting
                                for i = 1, 8 do
                                    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                                    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
                                    wait(0.05)
                                end
                                
                                pcall(function()
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Attack")
                                end)
                                
                                wait(0.3)
                            end
                        end
                        wait(2)
                    end
                    
                    -- Step 3: Complete CDK quest
                    pcall(function()
                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CDKQuest", "Progress", "Evil")
                    end)
                    
                    print("CDK quest completed!")
                end)
            end
        end)
        
        -- AUTO YAMA
        local AutoYamaToggle = Tabs.AutoFarm:AddToggle("AutoYama", {
            Title = "AUTO YAMA",
            Default = false
        })
        
        AutoYamaToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    print("Starting Yama quest...")
                    -- Implement Yama logic
                end)
            end
        end)
        
        -- AUTO TUSHITA
        local AutoTushitaToggle = Tabs.AutoFarm:AddToggle("AutoTushita", {
            Title = "AUTO TUSHITA",
            Default = false
        })
        
        AutoTushitaToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    print("Starting Tushita quest...")
                    -- Implement Tushita logic
                end)
            end
        end)
        
        -- AUTO ELITE HUNTER
        local AutoEliteToggle = Tabs.AutoFarm:AddToggle("AutoElite", {
            Title = "AUTO ELITE HUNTER",
            Default = false
        })
        
        AutoEliteToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    print("Starting Elite Hunter quest...")
                    -- Implement Elite Hunter logic
                end)
            end
        end)
        
        -- AUTO FARM BONES
        local AutoBonesToggle = Tabs.AutoFarm:AddToggle("AutoBones", {
            Title = "AUTO FARM BONES",
            Default = false
        })
        
        AutoBonesToggle:OnChanged(function(Value)
            ScriptSettings.AutoBones = Value
            if Value then
                spawn(function()
                    while ScriptSettings.AutoBones do
                        -- Teleport to Haunted Castle
                        RootPart.CFrame = CFrame.new(-9515, 142, 5618)
                        wait(1)
                        
                        -- Find and farm bone mobs
                        local boneMobs = {"Reborn Skeleton", "Living Zombie", "Demonic Soul", "Posessed Mummy"}
                        local foundMob = false
                        
                        for _, mobName in pairs(boneMobs) do
                            local mob = GetNearestMob(mobName)
                            if mob then
                                foundMob = true
                                -- Position above mob for better farming
                                local mobPos = mob.HumanoidRootPart.Position
                                RootPart.CFrame = CFrame.new(mobPos + Vector3.new(0, 10, 0))
                                
                                -- Attack until dead
                                while mob and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 and ScriptSettings.AutoBones do
                                    -- Enhanced attack for bone farming
                                    for i = 1, 5 do
                                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
                                        wait(0.01)
                                    end
                                    
                                    pcall(function()
                                        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Attack")
                                    end)
                                    
                                    wait(0.1)
                                end
                                break
                            end
                        end
                        
                        if not foundMob then
                            wait(3) -- Wait for mobs to respawn
                        end
                        
                        wait(0.5)
                    end
                end)
            end
        end)
    end
end

-- V4 Tab Implementation
do
    if CurrentSea < 3 then
        Tabs.V4:AddParagraph({
            Title = "Access Denied",
            Content = "You need to be in 3rd Sea to access V4 features!"
        })
    else
        local TeleportTempleButton = Tabs.V4:AddButton({
            Title = "Teleport to Temple",
            Description = "Teleports to the V4 Temple",
            Callback = function()
                -- Implementation for temple teleport
                print("Teleporting to temple...")
            end
        })
        
        local AutoV4Toggle = Tabs.V4:AddToggle("AutoV4", {
            Title = "Auto Upgrade V4",
            Default = false
        })
        
        AutoV4Toggle:OnChanged(function(Value)
            ScriptSettings.AutoV4 = Value
        end)
        
        -- Race-specific trials
        local raceTrials = {
            {name = "Human Trial", action = "melee_boss"},
            {name = "Angel Trial", action = "parkour"},
            {name = "Mink Trial", action = "maze"},
            {name = "Ghoul Trial", action = "kill_skeletons"},
            {name = "Cyborg Trial", action = "cyborg_quest"},
            {name = "Shark Trial", action = "shark_quest"}
        }
        
        for _, trial in pairs(raceTrials) do
            local TrialToggle = Tabs.V4:AddToggle(trial.name, {
                Title = "Auto " .. trial.name,
                Default = false
            })
            
            TrialToggle:OnChanged(function(Value)
                if Value then
                    spawn(function()
                        print("Starting " .. trial.name .. "...")
                        
                        if trial.action == "melee_boss" then
                            -- Human trial - kill boss with melee/sword only
                            local humanBoss = GetNearestMob("Longma") or GetNearestMob("rip_indra True Form")
                            if humanBoss then
                                while humanBoss and humanBoss:FindFirstChild("Humanoid") and humanBoss.Humanoid.Health > 0 do
                                    RootPart.CFrame = CFrame.new(humanBoss.HumanoidRootPart.Position + Vector3.new(0, 8, 0))
                                    -- Use only melee attacks
                                    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                                    VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
                                    wait(0.2)
                                end
                            end
                            
                        elseif trial.action == "parkour" then
                            -- Angel trial - complete parkour automatically
                            print("Completing Angel parkour trial...")
                            local parkourPoints = {
                                Vector3.new(-7748, 5606, -1421),
                                Vector3.new(-7748, 5645, -1421),
                                Vector3.new(-7748, 5684, -1421)
                            }
                            for _, point in pairs(parkourPoints) do
                                RootPart.CFrame = CFrame.new(point)
                                wait(1)
                            end
                            
                        elseif trial.action == "maze" then
                            -- Mink trial - complete maze automatically
                            print("Completing Mink maze trial...")
                            local mazePoints = {
                                Vector3.new(448, 498, -1829),
                                Vector3.new(448, 498, -1813),
                                Vector3.new(448, 498, -1797)
                            }
                            for _, point in pairs(mazePoints) do
                                RootPart.CFrame = CFrame.new(point)
                                wait(1)
                            end
                            
                        elseif trial.action == "kill_skeletons" then
                            -- Ghoul trial - kill all skeletons
                            print("Killing skeletons for Ghoul trial...")
                            local skeletonCount = 0
                            while skeletonCount < 50 do
                                local skeleton = GetNearestMob("Reborn Skeleton") or GetNearestMob("Living Zombie")
                                if skeleton then
                                    while skeleton and skeleton:FindFirstChild("Humanoid") and skeleton.Humanoid.Health > 0 do
                                        RootPart.CFrame = CFrame.new(skeleton.HumanoidRootPart.Position + Vector3.new(0, 5, 0))
                                        AttackMob(skeleton, ScriptSettings.SelectedWeapon or "Combat")
                                        wait(0.1)
                                    end
                                    skeletonCount = skeletonCount + 1
                                end
                                wait(0.5)
                            end
                            
                        elseif trial.action == "cyborg_quest" then
                            -- Cyborg trial - complete cyborg specific quest
                            print("Completing Cyborg trial quest...")
                            pcall(function()
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("CyborgQuest", "StartTrial")
                            end)
                            wait(2)
                            
                            -- Fight cyborg enemies
                            local cyborgEnemies = {"Cyborg", "Order"}
                            for _, enemyName in pairs(cyborgEnemies) do
                                local enemy = GetNearestMob(enemyName)
                                if enemy then
                                    while enemy and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 do
                                        RootPart.CFrame = CFrame.new(enemy.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                                        AttackMob(enemy, ScriptSettings.SelectedWeapon or "Combat")
                                        wait(0.2)
                                    end
                                end
                            end
                            
                        elseif trial.action == "shark_quest" then
                            -- Shark trial - complete shark specific quest
                            print("Completing Shark trial quest...")
                            
                            -- Teleport to underwater area for shark trial
                            RootPart.CFrame = CFrame.new(61163, -5, 1819)
                            wait(2)
                            
                            -- Kill sea beasts and sharks
                            local sharkTargets = {"Sea Beast", "Shark", "Terrorshark"}
                            for _, targetName in pairs(sharkTargets) do
                                local target = GetNearestMob(targetName)
                                if target then
                                    while target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 do
                                        RootPart.CFrame = CFrame.new(target.HumanoidRootPart.Position + Vector3.new(0, 8, 0))
                                        AttackMob(target, ScriptSettings.SelectedWeapon or "Combat")
                                        wait(0.2)
                                    end
                                end
                                wait(1)
                            end
                            
                            -- Complete shark trial quest
                            pcall(function()
                                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SharkQuest", "Complete")
                            end)
                        end
                        
                        print(trial.name .. " completed!")
                    end)
                end
            end)
        end
    end
end

-- PvP Tab Implementation
do
    local AimbotToggle = Tabs.PvP:AddToggle("PlayerAimbot", {
        Title = "Aimbot to Nearest Player",
        Default = false
    })
    
    AimbotToggle:OnChanged(function(Value)
        ScriptSettings.PlayerAimbot = Value
        if Value then
            spawn(function()
                while ScriptSettings.PlayerAimbot do
                    local nearestPlayer = GetNearestPlayer()
                    if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        -- Aim at the nearest player
                        local targetPosition = nearestPlayer.Character.HumanoidRootPart.Position
                        local direction = (targetPosition - RootPart.Position).Unit
                        RootPart.CFrame = CFrame.lookAt(RootPart.Position, targetPosition)
                    end
                    wait(0.1)
                end
            end)
        end
    end)
    
    local SkillAimbotToggle = Tabs.PvP:AddToggle("SkillAimbot", {
        Title = "Skills Aimbot (Z,X,C,V,F)",
        Default = false
    })
    
    SkillAimbotToggle:OnChanged(function(Value)
        ScriptSettings.SkillAimbot = Value
        if Value then
            spawn(function()
                while ScriptSettings.SkillAimbot do
                    local nearestPlayer = GetNearestPlayer()
                    if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        -- Auto-cast skills towards nearest player
                        local keys = {"Z", "X", "C", "V", "F"}
                        for _, key in pairs(keys) do
                            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode[key], false, game)
                            wait(0.1)
                            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode[key], false, game)
                            wait(0.5)
                        end
                    end
                    wait(2)
                end
            end)
        end
    end)
    
    -- Player Spectate Dropdown
    local playerList = GetAllPlayers()
    local SpectateDropdown = Tabs.PvP:AddDropdown("SpectateDropdown", {
        Title = "Select Player to Spectate",
        Values = playerList,
        Multi = false,
        Default = 1,
    })
    
    local selectedSpectatePlayer = nil
    SpectateDropdown:OnChanged(function(Value)
        selectedSpectatePlayer = Value
    end)
    
    local SpectateToggle = Tabs.PvP:AddToggle("SpectatePlayer", {
        Title = "Spectate Selected Player",
        Default = false
    })
    
    SpectateToggle:OnChanged(function(Value)
        if Value and selectedSpectatePlayer then
            local targetPlayer = Players:FindFirstChild(selectedSpectatePlayer)
            if targetPlayer then
                Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
                print("Now spectating:", selectedSpectatePlayer)
            end
        else
            Workspace.CurrentCamera.CameraSubject = Player.Character.Humanoid
            print("Stopped spectating")
        end
    end)
    
    -- Refresh player list button
    local RefreshPlayersButton = Tabs.PvP:AddButton({
        Title = "Refresh Player List",
        Description = "Updates the player dropdown list",
        Callback = function()
            playerList = GetAllPlayers()
            SpectateDropdown:SetValues(playerList)
            print("Player list refreshed!")
        end
    })
end

-- Teleport Tab Implementation
do
    local LocationDropdown = Tabs.Teleport:AddDropdown("LocationDropdown", {
        Title = "Select Location",
        Values = SeaData[CurrentSea].locations,
        Multi = false,
        Default = 1,
    })
    
    LocationDropdown:OnChanged(function(Value)
        ScriptSettings.SelectedLocation = Value
    end)
    
    local TweenButton = Tabs.Teleport:AddButton({
        Title = "Tween to Selected Place",
        Description = "Smoothly travels to the selected location",
        Callback = function()
            if ScriptSettings.SelectedLocation then
                local targetCFrame = TeleportLocations[CurrentSea][ScriptSettings.SelectedLocation]
                if targetCFrame then
                    -- Special handling for mansion and sea castles - direct teleport
                    if string.find(ScriptSettings.SelectedLocation:lower(), "mansion") or 
                       string.find(ScriptSettings.SelectedLocation:lower(), "castle") then
                        RootPart.CFrame = targetCFrame
                        print("Teleported to:", ScriptSettings.SelectedLocation)
                    else
                        -- Tween from above for other locations
                        local abovePosition = targetCFrame.Position + Vector3.new(0, 50, 0)
                        TweenToPosition(abovePosition)
                        wait(2)
                        TweenToPosition(targetCFrame.Position)
                        print("Tweened to:", ScriptSettings.SelectedLocation)
                    end
                else
                    print("Location coordinates not found!")
                end
            else
                print("Please select a location first!")
            end
        end
    })
end

-- Raid Tab Implementation
do
    local RaidChips = {"Flame", "Ice", "Quake", "Light", "Dark", "Spider", "Rumble", "Magma", "Buddha", "Sand"}
    
    local selectedRaidChip = nil
    local RaidChipDropdown = Tabs.Raid:AddDropdown("RaidChipDropdown", {
        Title = "Choose Raid Chip",
        Values = RaidChips,
        Multi = false,
        Default = 1,
    })
    
    RaidChipDropdown:OnChanged(function(Value)
        selectedRaidChip = Value
    end)
    
    local BuyChipButton = Tabs.Raid:AddButton({
        Title = "Buy Chip",
        Description = "Purchases the selected raid chip",
        Callback = function()
            if selectedRaidChip then
                local args = {
                    [1] = "RaidsNpc",
                    [2] = "Select",
                    [3] = selectedRaidChip
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                print("Bought", selectedRaidChip, "raid chip!")
            else
                print("Please select a raid chip first!")
            end
        end
    })
    
    local StartRaidButton = Tabs.Raid:AddButton({
        Title = "Start Raid",
        Description = "Starts the selected raid",
        Callback = function()
            if selectedRaidChip then
                pcall(function()
                    -- Use proper raid start remote
                    local args = {
                        [1] = "RaidsNpc",
                        [2] = "StartRaid",
                        [3] = selectedRaidChip
                    }
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                    
                    wait(2)
                    
                    -- Alternative raid start method
                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartRaid", selectedRaidChip)
                    
                    print("Starting", selectedRaidChip, "raid...")
                end)
            else
                print("Please select and buy a raid chip first!")
            end
        end
    })
    
    local SoloRaidToggle = Tabs.Raid:AddToggle("SoloRaid", {
        Title = "Solo Raid (Kill Aura)",
        Default = false
    })
    
    SoloRaidToggle:OnChanged(function(Value)
        ScriptSettings.AutoRaid = Value
        if Value then
            spawn(function()
                while ScriptSettings.AutoRaid do
                    -- Advanced kill aura for raids
                    local raidEnemies = {}
                    
                    -- Find all raid enemies
                    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                        if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                            if enemy.Humanoid.Health > 0 then
                                local distance = (RootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                                if distance < 150 then -- Wider range for raid
                                    table.insert(raidEnemies, {enemy = enemy, distance = distance})
                                end
                            end
                        end
                    end
                    
                    -- Sort by distance and attack closest first
                    table.sort(raidEnemies, function(a, b) return a.distance < b.distance end)
                    
                    for _, enemyData in pairs(raidEnemies) do
                        local enemy = enemyData.enemy
                        if enemy and enemy:FindFirstChild("HumanoidRootPart") and enemy.Humanoid.Health > 0 then
                            -- Position above enemy for better hit detection
                            local enemyPos = enemy.HumanoidRootPart.Position
                            RootPart.CFrame = CFrame.new(enemyPos + Vector3.new(0, 15, 0))
                            
                            -- Rapid fire attacks
                            for i = 1, 8 do
                                if not enemy or enemy.Humanoid.Health <= 0 then break end
                                
                                -- Multiple attack methods for maximum damage
                                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
                                
                                pcall(function()
                                    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Attack")
                                end)
                                
                                wait(0.05)
                            end
                        end
                        
                        if not ScriptSettings.AutoRaid then break end
                    end
                    
                    wait(0.1)
                end
            end)
        end
    end)
end

-- Sea Tab Implementation
do
    local SeaEvents = {"Ship Raid", "Sea Beast", "Rough Sea", "Kitsune Island", "Full Moon"}
    
    local SeaEventDropdown = Tabs.Sea:AddDropdown("SeaEventDropdown", {
        Title = "Sea Events",
        Values = SeaEvents,
        Multi = false,
        Default = 1,
    })
    
    Tabs.Sea:AddSection("Special Events")
    
    if CurrentSea < 3 then
        Tabs.Sea:AddParagraph({
            Title = "Access Denied",
            Content = "You need to be in 3rd Sea to access special sea events!"
        })
    else
        local KitsuneToggle = Tabs.Sea:AddToggle("AutoKitsune", {
            Title = "Auto Kitsune Island",
            Default = false
        })
        
        KitsuneToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    while Value do
                        -- Auto Kitsune Island logic
                        print("Searching for Kitsune Island...")
                        -- Look for Kitsune Island and teleport
                        wait(5)
                    end
                end)
            end
        end)
        
        local AzureToggle = Tabs.Sea:AddToggle("AutoAzure", {
            Title = "Auto Azure",
            Default = false
        })
        
        AzureToggle:OnChanged(function(Value)
            if Value then
                spawn(function()
                    while Value do
                        -- Auto Azure logic
                        print("Looking for Azure Ember...")
                        wait(5)
                    end
                end)
            end
        end)
    end
end

-- Settings Tab (will be implemented by user)
do
    Tabs.Settings:AddParagraph({
        Title = "Settings",
        Content = "Custom settings will be added here."
    })
end

-- Save Configuration
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})

InterfaceManager:SetFolder("EnchantedHub")
SaveManager:SetFolder("EnchantedHub/BloxFruit")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

SaveManager:LoadAutoloadConfig()

print("ENCHANTED HUB | BLOX FRUIT - Loaded successfully!")
print("Current Sea:", CurrentSea)
print("Features loaded for Sea", CurrentSea)
