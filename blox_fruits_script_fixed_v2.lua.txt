-- Blox Fruits Enhanced Script
-- Professional Grade Development
-- Anti-Detection & Human-Like Behavior

local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 0.1

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local PathfindingService = game:GetService("PathfindingService")
local HttpService = game:GetService("HttpService")

-- Player References
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid", 15)
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart", 15)

-- Safe Character Update Function
local function UpdateCharacter()
    local success = pcall(function()
        Character = Player.Character
        if Character then
            Humanoid = Character:FindFirstChild("Humanoid")
            HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
        end
    end)
    
    if not success then
        wait(2)
        spawn(UpdateCharacter)
    end
end

-- Enhanced Character Loading
Player.CharacterAdded:Connect(function(char)
    wait(3) -- Extended wait for full character load
    Character = char
    UpdateCharacter()
end)

-- Global Variables
getgenv().AutoFarmLevel = false
getgenv().AutoFastAttack = false
getgenv().AutoBringMobs = false
getgenv().AutoArmamentHaki = false
getgenv().FruitESP = false
getgenv().BringFruit = false
getgenv().StoreFruit = false
getgenv().SelectedWeapon = "Combat"
getgenv().AutoBossFarm = false
getgenv().SelectedBoss = ""
getgenv().AutoSaber = false
getgenv().Auto2SeaQuest = false
getgenv().TweenSpeed = 300
getgenv().AntiDetection = true

-- Connection Variables
local FastAttackConnection
local BringMobConnection
local LevelFarmConnection
local BossFarmConnection

-- Anti-Detection System
local DetectionSystem = {
    LastAction = tick(),
    ActionCount = 0,
    RandomDelay = function()
        if getgenv().AntiDetection then
            wait(math.random(15, 85) / 1000)
        end
    end,
    
    UpdateActivity = function()
        DetectionSystem.LastAction = tick()
        DetectionSystem.ActionCount = DetectionSystem.ActionCount + 1
    end,
    
    HumanizeMovement = function()
        if math.random(1, 100) <= 3 then -- 3% chance
            spawn(function()
                if HumanoidRootPart and Humanoid then
                    local originalSpeed = Humanoid.WalkSpeed
                    Humanoid.WalkSpeed = originalSpeed + math.random(-2, 2)
                    wait(math.random(1, 3))
                    Humanoid.WalkSpeed = originalSpeed
                end
            end)
        end
    end
}

-- Enhanced Error Handling for Parent Locking Issues
local function SafeParentChange(object, newParent)
    local success = false
    local attempts = 0
    
    while not success and attempts < 5 do
        success = pcall(function()
            if object and object.Parent ~= newParent then
                -- Check if object is locked
                if object.Parent and object.Parent:IsA("Instance") then
                    -- Use alternative method for locked parents
                    local clone = object:Clone()
                    clone.Parent = newParent
                    object:Destroy()
                    return clone
                else
                    object.Parent = newParent
                    return object
                end
            end
            return object
        end)
        
        if not success then
            attempts = attempts + 1
            wait(0.1 * attempts) -- Exponential backoff
        end
    end
    
    return success
end

-- Enhanced Weapon Equipping with Error Handling
local function EquipWeapon(weaponName)
    local success = pcall(function()
        UpdateCharacter()
        if not Character or not Humanoid then return false end
        
        -- Safely unequip current tools
        for _, tool in pairs(Character:GetChildren()) do
            if tool:IsA("Tool") then
                SafeParentChange(tool, Player.Backpack)
            end
        end
        
        wait(0.2) -- Increased wait time
        
        -- Find and equip weapon with enhanced search
        local weapon = Player.Backpack:FindFirstChild(weaponName)
        if weapon and weapon:IsA("Tool") then
            SafeParentChange(weapon, Character)
            wait(0.1)
            return true
        end
        
        -- Extended combat weapon search
        if weaponName == "Combat" then
            local combatWeapons = {
                "Combat", "Superhuman", "Dark Step", "Electric", 
                "Water Kung Fu", "Dragon Breath", "Fishman Karate", 
                "Dragon Claw", "Godhuman", "Death Step", 
                "Sharkman Karate", "Electric Claw", "Dragon Talon"
            }
            
            for _, combatName in pairs(combatWeapons) do
                local combat = Player.Backpack:FindFirstChild(combatName)
                if combat then
                    SafeParentChange(combat, Character)
                    wait(0.1)
                    return true
                end
            end
        end
    end)
    
    return success
end

-- Professional Tween Teleportation
local function TweenTeleport(targetPosition, speed)
    if not HumanoidRootPart then return false end
    
    local tweenSpeed = speed or getgenv().TweenSpeed or 300
    local distance = (HumanoidRootPart.Position - targetPosition).Magnitude
    local duration = distance / tweenSpeed
    
    -- Clamp duration for safety
    duration = math.max(0.1, math.min(duration, 15))
    
    local success = pcall(function()
        local tween = TweenService:Create(
            HumanoidRootPart,
            TweenInfo.new(
                duration,
                Enum.EasingStyle.Linear,
                Enum.EasingDirection.InOut
            ),
            {CFrame = CFrame.new(targetPosition)}
        )
        
        tween:Play()
        DetectionSystem.UpdateActivity()
        
        return tween
    end)
    
    return success
end

-- Enhanced Player Level Detection
local function GetPlayerLevel()
    local level = 1
    
    pcall(function()
        -- Multiple methods to get level
        if Player.Data and Player.Data.Level then
            level = Player.Data.Level.Value
        elseif Player.leaderstats and Player.leaderstats.Level then
            level = Player.leaderstats.Level.Value
        elseif Player.PlayerGui and Player.PlayerGui.Main then
            local levelLabel = Player.PlayerGui.Main:FindFirstChild("Level")
            if levelLabel then
                local levelText = levelLabel.Text
                level = tonumber(levelText:match("%d+")) or 1
            end
        end
    end)
    
    return math.max(1, level)
end

-- Complete Quest Database (Enhanced)
local QuestDatabase = {
    [1] = {Level = 1, Name = "Bandit", Enemy = "Bandit", QuestGiver = "Bandit Quest", 
           QuestLocation = Vector3.new(1059.37, 15.4, 1550.42), 
           EnemySpawn = Vector3.new(1045, 14, 1563)},
    [2] = {Level = 10, Name = "Monkey", Enemy = "Monkey", QuestGiver = "Jungle Quest", 
           QuestLocation = Vector3.new(-1448.51, 67.85, 11.46), 
           EnemySpawn = Vector3.new(-1448, 50, 11)},
    [3] = {Level = 15, Name = "Gorilla", Enemy = "Gorilla", QuestGiver = "Jungle Quest", 
           QuestLocation = Vector3.new(-1448.51, 67.85, 11.46), 
           EnemySpawn = Vector3.new(-1129, 40, -515)},
    [4] = {Level = 20, Name = "Pirate", Enemy = "Pirate", QuestGiver = "Pirate Quest", 
           QuestLocation = Vector3.new(-1141.07, 4.78, 3831.99), 
           EnemySpawn = Vector3.new(-1103, 13, 3896)},
    [5] = {Level = 30, Name = "Brute", Enemy = "Brute", QuestGiver = "Pirate Quest", 
           QuestLocation = Vector3.new(-1141.07, 4.78, 3831.99), 
           EnemySpawn = Vector3.new(-1140, 15, 4314)},
    [6] = {Level = 40, Name = "Desert Bandit", Enemy = "Desert Bandit", QuestGiver = "Desert Quest", 
           QuestLocation = Vector3.new(894.49, 5.14, 4392.43), 
           EnemySpawn = Vector3.new(924, 7, 4481)},
    [7] = {Level = 60, Name = "Desert Officer", Enemy = "Desert Officer", QuestGiver = "Desert Quest", 
           QuestLocation = Vector3.new(894.49, 5.14, 4392.43), 
           EnemySpawn = Vector3.new(1608, 7, 4371)},
    [8] = {Level = 75, Name = "Snow Bandit", Enemy = "Snow Bandit", QuestGiver = "Snow Quest", 
           QuestLocation = Vector3.new(1389.74, 88.15, -1298.90), 
           EnemySpawn = Vector3.new(1354, 87, -1352)},
    [9] = {Level = 90, Name = "Snowman", Enemy = "Snowman", QuestGiver = "Snow Quest", 
           QuestLocation = Vector3.new(1389.74, 88.15, -1298.90), 
           EnemySpawn = Vector3.new(1201, 87, -1502)},
    [10] = {Level = 100, Name = "Chief Petty Officer", Enemy = "Chief Petty Officer", QuestGiver = "Marine Quest", 
            QuestLocation = Vector3.new(-5039.58, 27.34, 4324.68), 
            EnemySpawn = Vector3.new(-4882, 23, 4255)},
    [11] = {Level = 120, Name = "Sky Bandit", Enemy = "Sky Bandit", QuestGiver = "Sky Quest", 
            QuestLocation = Vector3.new(-4839.53, 717.67, -2619.44), 
            EnemySpawn = Vector3.new(-4970, 717, -2888)},
    [12] = {Level = 150, Name = "Dark Master", Enemy = "Dark Master", QuestGiver = "Sky Quest", 
            QuestLocation = Vector3.new(-4839.53, 717.67, -2619.44), 
            EnemySpawn = Vector3.new(-5259, 717, -2221)},
    [13] = {Level = 200, Name = "Prisoner", Enemy = "Prisoner", QuestGiver = "Prison Quest", 
            QuestLocation = Vector3.new(5308.93, 1.65, 475.12), 
            EnemySpawn = Vector3.new(5411, 96, 690)},
    [14] = {Level = 250, Name = "Dangerous Prisoner", Enemy = "Dangerous Prisoner", QuestGiver = "Prison Quest", 
            QuestLocation = Vector3.new(5308.93, 1.65, 475.12), 
            EnemySpawn = Vector3.new(5411, 96, 690)},
    [15] = {Level = 300, Name = "Toga Warrior", Enemy = "Toga Warrior", QuestGiver = "Colosseum Quest", 
            QuestLocation = Vector3.new(-1427.6, 8.7, -2792.5), 
            EnemySpawn = Vector3.new(-1770, 8, -2777)},
    [16] = {Level = 325, Name = "Gladiator", Enemy = "Gladiator", QuestGiver = "Colosseum Quest", 
            QuestLocation = Vector3.new(-1427.6, 8.7, -2792.5), 
            EnemySpawn = Vector3.new(-1770, 8, -2777)},
    [17] = {Level = 350, Name = "Military Soldier", Enemy = "Military Soldier", QuestGiver = "Magma Quest", 
            QuestLocation = Vector3.new(-5313.37, 10.9, 8515.29), 
            EnemySpawn = Vector3.new(-5411, 11, 8549)},
    [18] = {Level = 400, Name = "Military Spy", Enemy = "Military Spy", QuestGiver = "Magma Quest", 
            QuestLocation = Vector3.new(-5313.37, 10.9, 8515.29), 
            EnemySpawn = Vector3.new(-5802, 87, 8860)},
    [19] = {Level = 450, Name = "Fishman Warrior", Enemy = "Fishman Warrior", QuestGiver = "Underwater City Quest", 
            QuestLocation = Vector3.new(61123.05, 18.5, 1569.3), 
            EnemySpawn = Vector3.new(60878, 19, 1449)},
    [20] = {Level = 475, Name = "Fishman Commando", Enemy = "Fishman Commando", QuestGiver = "Underwater City Quest", 
            QuestLocation = Vector3.new(61123.05, 18.5, 1569.3), 
            EnemySpawn = Vector3.new(61922, 19, 1808)},
    [21] = {Level = 500, Name = "God's Guard", Enemy = "God's Guard", QuestGiver = "Sky Island Quest", 
            QuestLocation = Vector3.new(-4721.88, 845.38, -1949.96), 
            EnemySpawn = Vector3.new(-4628, 873, -1926)},
    [22] = {Level = 525, Name = "Shanda", Enemy = "Shanda", QuestGiver = "Sky Island Quest", 
            QuestLocation = Vector3.new(-7859.09, 5544.19, -381.476), 
            EnemySpawn = Vector3.new(-7678, 5567, -446)},
    [23] = {Level = 550, Name = "Royal Squad", Enemy = "Royal Squad", QuestGiver = "Sky Island Quest", 
            QuestLocation = Vector3.new(-7906.81, 5634.6, -1411.99), 
            EnemySpawn = Vector3.new(-7555, 5637, -1407)},
    [24] = {Level = 575, Name = "Royal Soldier", Enemy = "Royal Soldier", QuestGiver = "Sky Island Quest", 
            QuestLocation = Vector3.new(-7906.81, 5634.6, -1411.99), 
            EnemySpawn = Vector3.new(-7837, 5637, -1456)},
    [25] = {Level = 600, Name = "Galley Pirate", Enemy = "Galley Pirate", QuestGiver = "Fountain City Quest", 
            QuestLocation = Vector3.new(5259.81, 1, 3364.83), 
            EnemySpawn = Vector3.new(5551, 152, 3972)},
    [26] = {Level = 625, Name = "Galley Captain", Enemy = "Galley Captain", QuestGiver = "Fountain City Quest", 
            QuestLocation = Vector3.new(5259.81, 1, 3364.83), 
            EnemySpawn = Vector3.new(5441, 42, 4028)}
}

-- Enhanced Quest System
local function GetOptimalQuest()
    local playerLevel = GetPlayerLevel()
    local selectedQuest = QuestDatabase[1] -- Default fallback
    
    for _, questData in pairs(QuestDatabase) do
        if playerLevel >= questData.Level then
            selectedQuest = questData
        end
    end
    
    return selectedQuest
end

-- Quest Status Detection
local function HasActiveQuest(questName)
    local hasQuest = false
    
    pcall(function()
        local questGui = Player.PlayerGui:FindFirstChild("Main")
        if questGui then
            local questContainer = questGui:FindFirstChild("Quest")
            if questContainer and questContainer.Visible then
                local questTitle = questContainer:FindFirstChild("Container"):FindFirstChild("QuestTitle")
                if questTitle and questTitle.Title then
                    hasQuest = string.find(questTitle.Title.Text:lower(), questName:lower()) ~= nil
                end
            end
        end
    end)
    
    return hasQuest
end

-- Enhanced Quest Acceptance
local function AcceptQuest(questData)
    if not questData or HasActiveQuest(questData.Name) then return true end
    
    local success = pcall(function()
        -- Teleport to quest location
        TweenTeleport(questData.QuestLocation, 400)
        wait(2)
        
        -- Multiple quest acceptance methods
        local remotes = ReplicatedStorage:FindFirstChild("Remotes")
        if remotes then
            local commF = remotes:FindFirstChild("CommF_")
            if commF then
                -- Try different quest acceptance parameters
                for questLevel = 1, 2 do
                    pcall(function()
                        commF:InvokeServer("StartQuest", questData.Name, questLevel)
                    end)
                    wait(0.3)
                end
            end
        end
        
        -- Alternative method through NPCs
        for _, npc in pairs(Workspace.NPCs:GetChildren()) do
            if npc.Name:find(questData.QuestGiver:gsub(" Quest", "")) then
                local npcHRP = npc:FindFirstChild("HumanoidRootPart")
                if npcHRP then
                    local distance = (HumanoidRootPart.Position - npcHRP.Position).Magnitude
                    if distance > 15 then
                        TweenTeleport(npcHRP.Position + Vector3.new(0, 0, 8), 200)
                        wait(1)
                    end
                    break
                end
            end
        end
    end)
    
    return success
end

-- Professional Auto Farm Level System
local function StartAdvancedLevelFarming()
    if LevelFarmConnection then
        LevelFarmConnection:Disconnect()
    end
    
    LevelFarmConnection = RunService.Heartbeat:Connect(function()
        if getgenv().AutoFarmLevel then
            pcall(function()
                UpdateCharacter()
                if not Character or not HumanoidRootPart then return end
                
                local currentQuest = GetOptimalQuest()
                if not currentQuest then return end
                
                -- Quest Management
                if not HasActiveQuest(currentQuest.Name) then
                    AcceptQuest(currentQuest)
                    wait(2)
                    return
                end
                
                -- Weapon Management
                if not Character:FindFirstChildOfClass("Tool") then
                    EquipWeapon(getgenv().SelectedWeapon)
                    wait(0.4)
                end
                
                -- Enemy Detection & Targeting
                local targetEnemies = {}
                local maxSearchDistance = 800
                
                for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                    if enemy.Name == currentQuest.Enemy and 
                       enemy:FindFirstChild("Humanoid") and 
                       enemy:FindFirstChild("HumanoidRootPart") then
                        
                        local enemyHealth = enemy.Humanoid.Health
                        if enemyHealth > 0 then
                            local distance = (HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                            if distance <= maxSearchDistance then
                                table.insert(targetEnemies, {
                                    enemy = enemy,
                                    distance = distance,
                                    health = enemyHealth
                                })
                            end
                        end
                    end
                end
                
                -- Sort by distance (closest first)
                table.sort(targetEnemies, function(a, b) 
                    return a.distance < b.distance 
                end)
                
                -- No enemies found - go to spawn area
                if #targetEnemies == 0 then
                    local spawnDistance = (HumanoidRootPart.Position - currentQuest.EnemySpawn).Magnitude
                    if spawnDistance > 60 then
                        TweenTeleport(currentQuest.EnemySpawn, 350)
                        wait(2)
                    end
                    return
                end
                
                -- Calculate optimal farming position (above enemy cluster)
                local centerPosition = Vector3.new(0, 0, 0)
                local enemyCount = math.min(#targetEnemies, 12)
                
                for i = 1, enemyCount do
                    centerPosition = centerPosition + targetEnemies[i].enemy.HumanoidRootPart.Position
                end
                centerPosition = centerPosition / enemyCount
                
                -- Professional farming position - above enemies
                local farmingHeight = 45 -- Height above enemies
                local optimalPosition = centerPosition + Vector3.new(0, farmingHeight, 0)
                local currentDistance = (HumanoidRootPart.Position - optimalPosition).Magnitude
                
                -- Position management
                if currentDistance > 30 then
                    TweenTeleport(optimalPosition, 250)
                    wait(0.8)
                elseif currentDistance <= 80 then
                    -- Fine positioning
                    HumanoidRootPart.CFrame = CFrame.new(optimalPosition)
                    HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                    HumanoidRootPart.AngularVelocity = Vector3.new(0, 0, 0)
                end
                
                -- Enhanced Combat System
                local attackRange = 500 -- Large attack radius
                local attackedThisFrame = 0
                local maxAttacksPerFrame = 18
                
                for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                    if enemy.Name == currentQuest.Enemy and 
                       enemy:FindFirstChild("Humanoid") and 
                       enemy:FindFirstChild("HumanoidRootPart") and
                       attackedThisFrame < maxAttacksPerFrame then
                        
                        if enemy.Humanoid.Health > 0 then
                            local distance = (HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                            if distance <= attackRange then
                                attackedThisFrame = attackedThisFrame + 1
                                
                                local tool = Character:FindFirstChildOfClass("Tool")
                                if tool then
                                    -- Enhanced attack sequence
                                    local attackMethods = {
                                        function()
                                            local args = {"weaponChange", tool.Name}
                                            ReplicatedStorage:FindFirstChild("RigControllerEvent"):FireServer(unpack(args))
                                        end,
                                        function()
                                            local hitArgs = {
                                                "hit",
                                                {
                                                    ["Name"] = tool.Name,
                                                    ["Target"] = enemy.HumanoidRootPart,
                                                    ["RigType"] = Character.Humanoid.RigType
                                                }
                                            }
                                            ReplicatedStorage:FindFirstChild("RigControllerEvent"):FireServer(unpack(hitArgs))
                                        end,
                                        function()
                                            local remotes = ReplicatedStorage:FindFirstChild("Remotes")
                                            if remotes and remotes:FindFirstChild("CommF_") then
                                                remotes.CommF_:InvokeServer("weaponChange", tool.Name)
                                            end
                                        end
                                    }
                                    
                                    -- Execute attack methods with error handling
                                    for _, attackMethod in pairs(attackMethods) do
                                        pcall(attackMethod)
                                    end
                                    
                                    -- Virtual input simulation
                                    pcall(function()
                                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 1)
                                        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 1)
                                    end)
                                end
                            end
                        end
                    end
                end
                
                -- Anti-detection measures
                DetectionSystem.RandomDelay()
                DetectionSystem.HumanizeMovement()
                DetectionSystem.UpdateActivity()
            end)
        end
    end)
end

-- Enhanced Fast Attack System
local function StartProfessionalFastAttack()
    if FastAttackConnection then
        FastAttackConnection:Disconnect()
    end
    
    FastAttackConnection = RunService.Heartbeat:Connect(function()
        if getgenv().AutoFastAttack then
            pcall(function()
                UpdateCharacter()
                if not Character or not HumanoidRootPart then return end
                
                local tool = Character:FindFirstChildOfClass("Tool")
                if not tool then return end
                
                local attackRange = 500
                local enemiesProcessed = 0
                local maxEnemiesPerFrame = 20
                
                for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                    if enemy:FindFirstChild("HumanoidRootPart") and 
                       enemy:FindFirstChild("Humanoid") and 
                       enemiesProcessed < maxEnemiesPerFrame then
                        
                        if enemy.Humanoid.Health > 0 then
                            local distance = (HumanoidRootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                            if distance <= attackRange then
                                enemiesProcessed = enemiesProcessed + 1
                                
                                -- Multi-layered attack system
                                local attackSystems = {
                                    {name = "weaponChange", args = {tool.Name}},
                                    {name = "hit", args = {{
                                        ["Name"] = tool.Name,
                                        ["Target"] = enemy.HumanoidRootPart,
                                        ["RigType"] = Character.Humanoid.RigType
                                    }}}
                                }
                                
                                for _, attackSystem in pairs(attackSystems) do
                                    pcall(function()
                                        ReplicatedStorage:FindFirstChild("RigControllerEvent"):FireServer(attackSystem.name, unpack(attackSystem.args))
                                    end)
                                end
                                
                                -- Alternative attack method
                                pcall(function()
                                    local remotes = ReplicatedStorage:FindFirstChild("Remotes")
                                    if remotes and remotes:FindFirstChild("CommF_") then
                                        remotes.CommF_:InvokeServer("weaponChange", tool.Name)
                                    end
                                end)
                            end
                        end
                    end
                end
                
                DetectionSystem.RandomDelay()
            end)
        end
    end)
end

-- Enhanced Bring Mobs System (Fixed)
local function StartAdvancedBringMobs()
    if BringMobConnection then
        BringMobConnection:Disconnect()
    end
    
    BringMobConnection = RunService.Heartbeat:Connect(function()
        if getgenv().AutoBringMobs and HumanoidRootPart then
            pcall(function()
                local bringRange = 400
                local playerPosition = HumanoidRootPart.Position
                local mobsProcessed = 0
                local maxMobsPerFrame = 15
                
                for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                    if enemy:FindFirstChild("HumanoidRootPart") and 
                       enemy:FindFirstChild("Humanoid") and
                       mobsProcessed < maxMobsPerFrame then
                        
                        local enemyHRP = enemy.HumanoidRootPart
                        local enemyHumanoid = enemy.Humanoid
                        
                        if enemyHumanoid.Health > 0 then
                            local distance = (playerPosition - enemyHRP.Position).Magnitude
                            
                            if distance <= bringRange and distance > 12 then
                                mobsProcessed = mobsProcessed + 1
                                
                                -- Enhanced mob positioning
                                local angle = math.random(0, 360)
                                local radius = math.random(10, 18)
                                local heightOffset = math.random(-5, 5)
                                
                                local newX = playerPosition.X + radius * math.cos(math.rad(angle))
                                local newZ = playerPosition.Z + radius * math.sin(math.rad(angle))
                                local newY = playerPosition.Y + heightOffset
                                
                                local targetPosition = Vector3.new(newX, newY, newZ)
                                
                                -- Disable AI movement
                                enemyHumanoid.WalkSpeed = 0
                                enemyHumanoid.JumpPower = 0
                                enemyHumanoid.PlatformStand = true
                                
                                -- Set position with smooth transition
                                enemyHRP.CFrame = CFrame.new(targetPosition)
                                enemyHRP.Velocity = Vector3.new(0, 0, 0)
                                enemyHRP.AngularVelocity = Vector3.new(0, 0, 0)
                                
                                -- Maintain collision for attacking
                                for _, part in pairs(enemy:GetChildren()) do
                                    if part:IsA("BasePart") then
                                        if part.Name == "HumanoidRootPart" or part.Name == "Head" then
                                            part.CanCollide = true
                                        else
                                            part.CanCollide = false
                                        end
                                    end
                                end
                                
                                -- Ensure enemy remains attackable
                                enemyHumanoid.Sit = false
                            end
                        end
                    end
                end
            end)
        end
    end)
end

-- Boss Database
local BossDatabase = {
    ["The Gorilla King"] = {
        SpawnLocation = Vector3.new(-1129, 40, -515),
        Level = 25,
        RespawnTime = 600
    },
    ["Bobby"] = {
        SpawnLocation = Vector3.new(-1140, 15, 4314),
        Level = 55,
        RespawnTime = 600
    },
    ["Yeti"] = {
        SpawnLocation = Vector3.new(1201, 87, -1502),
        Level = 110,
        RespawnTime = 600
    },
    ["Mob Leader"] = {
        SpawnLocation = Vector3.new(-2848, 7, 5342),
        Level = 120,
        RespawnTime = 600
    },
    ["Vice Admiral"] = {
        SpawnLocation = Vector3.new(-5026, 29, 4324),
        Level = 130,
        RespawnTime = 600
    },
    ["Warden"] = {
        SpawnLocation = Vector3.new(5278, 3, 473),
        Level = 220,
        RespawnTime = 600
    },
    ["Chief Warden"] = {
        SpawnLocation = Vector3.new(5206, 1, 438),
        Level = 200,
        RespawnTime = 600
    },
    ["Swan"] = {
        SpawnLocation = Vector3.new(5230, 4, 749),
        Level = 240,
        RespawnTime = 600
    },
    ["Magma Admiral"] = {
        SpawnLocation = Vector3.new(-5530, 12, 8610),
        Level = 350,
        RespawnTime = 600
    },
    ["Fishman Lord"] = {
        SpawnLocation = Vector3.new(61351, 31, 1095),
        Level = 425,
        RespawnTime = 600
    },
    ["Wysper"] = {
        SpawnLocation = Vector3.new(-7925, 5550, -636),
        Level = 500,
        RespawnTime = 600
    },
    ["Thunder God"] = {
        SpawnLocation = Vector3.new(-7748, 5607, -2305),
        Level = 575,
        RespawnTime = 600
    },
    ["Cyborg"] = {
        SpawnLocation = Vector3.new(6041, 52, 3907),
        Level = 675,
        RespawnTime = 600
    }
}

-- Enhanced Boss Farming
local function StartAdvancedBossFarming()
    if BossFarmConnection then
        BossFarmConnection:Disconnect()
    end
    
    BossFarmConnection = RunService.Heartbeat:Connect(function()
        if getgenv().AutoBossFarm and getgenv().SelectedBoss ~= "" then
            pcall(function()
                UpdateCharacter()
                if not Character or not HumanoidRootPart then return end
                
                local bossData = BossDatabase[getgenv().SelectedBoss]
                if not bossData then return end
                
                -- Ensure weapon is equipped
                if not Character:FindFirstChildOfClass("Tool") then
                    EquipWeapon(getgenv().SelectedWeapon)
                    wait(0.3)
                end
                
                -- Multi-location boss search
                local boss = nil
                local searchLocations = {Workspace.Enemies, ReplicatedStorage}
                
                for _, location in pairs(searchLocations) do
                    for _, enemy in pairs(location:GetChildren()) do
                        if enemy.Name == getgenv().SelectedBoss and 
                           enemy:FindFirstChild("Humanoid") and 
                           enemy:FindFirstChild("HumanoidRootPart") then
                            if enemy.Humanoid.Health > 0 then
                                boss = enemy
                                break
                            end
                        end
                    end
                    if boss then break end
                end
                
                if boss then
                    local bossPosition = boss.HumanoidRootPart.Position
                    local distance = (HumanoidRootPart.Position - bossPosition).Magnitude
                    
                    -- Professional boss combat positioning
                    local combatPosition = bossPosition + Vector3.new(0, 35, 0) -- Above boss
                    
                    if distance > 120 then
                        TweenTeleport(combatPosition, 300)
                        wait(1)
                    elseif distance > 60 then
                        HumanoidRootPart.CFrame = CFrame.new(combatPosition)
                    end
                    
                    -- Enhanced boss combat
                    local tool = Character:FindFirstChildOfClass("Tool")
                    if tool then
                        -- Multi-hit boss attack system
                        for attackRound = 1, 4 do
                            local attackSequence = {
                                {"weaponChange", tool.Name},
                                {"hit", {
                                    ["Name"] = tool.Name,
                                    ["Target"] = boss.HumanoidRootPart,
                                    ["RigType"] = Character.Humanoid.RigType
                                }}
                            }
                            
                            for _, attack in pairs(attackSequence) do
                                pcall(function()
                                    ReplicatedStorage:FindFirstChild("RigControllerEvent"):FireServer(unpack(attack))
                                end)
                            end
                            
                            wait(0.02)
                        end
                    end
                else
                    -- Boss not found - go to spawn location
                    local spawnDistance = (HumanoidRootPart.Position - bossData.SpawnLocation).Magnitude
                    if spawnDistance > 80 then
                        TweenTeleport(bossData.SpawnLocation, 300)
                        wait(2)
                    end
                end
            end)
        end
    end)
end

-- Auto Haki Functions
local function ActivateArmamentHaki()
    spawn(function()
        while getgenv().AutoArmamentHaki do
            pcall(function()
                UpdateCharacter()
                if Character and not Character:FindFirstChild("HasBuso") then
                    local remotes = ReplicatedStorage:FindFirstChild("Remotes")
                    if remotes and remotes:FindFirstChild("CommF_") then
                        remotes.CommF_:InvokeServer("Buso")
                    end
                end
            end)
            wait(0.8)
        end
    end)
end

-- Teleport Locations Database
local TeleportDatabase = {
    -- Starting Areas
    ["Starter Island"] = Vector3.new(1059.37, 15.4, 1550.42),
    ["Jungle"] = Vector3.new(-1448.51, 67.85, 11.46),
    ["Pirate Village"] = Vector3.new(-1141.07, 4.78, 3831.99),
    
    -- Mid-Level Areas
    ["Desert"] = Vector3.new(894.49, 5.14, 4392.43),
    ["Snow Island"] = Vector3.new(1389.74, 88.15, -1298.90),
    ["Marine Base"] = Vector3.new(-5039.58, 27.34, 4324.68),
    
    -- High-Level Areas
    ["Sky Island 1"] = Vector3.new(-4839.53, 717.67, -2619.44),
    ["Prison"] = Vector3.new(5308.93, 1.65, 475.12),
    ["Colosseum"] = Vector3.new(-1427.6, 8.7, -2792.5),
    ["Magma Village"] = Vector3.new(-5313.37, 10.9, 8515.29),
    ["Underwater City"] = Vector3.new(61123.05, 18.5, 1569.3),
    
    -- Sky Areas
    ["Upper Sky"] = Vector3.new(-7859.09, 5544.19, -381.476),
    ["Sky Island 2"] = Vector3.new(-7906.81, 5634.6, -1411.99),
    
    -- End Game
    ["Fountain City"] = Vector3.new(5259.81, 1, 3364.83)
}

-- UI Creation with Professional Design
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")

ScreenGui.Name = "EnchantedHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton

UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45

UIScale.Parent = ImageButton
UIScale.Scale = 1

-- Professional Button Animation
local function animateButton()
    local animationSequence = {
        {scale = 0.8, time = 0.1, style = Enum.EasingStyle.Quad, direction = Enum.EasingDirection.InOut},
        {scale = 1.1, time = 0.1, style = Enum.EasingStyle.Back, direction = Enum.EasingDirection.Out},
        {scale = 1, time = 0.1, style = Enum.EasingStyle.Quad, direction = Enum.EasingDirection.Out}
    }
    
    local function playNextAnimation(index)
        if index <= #animationSequence then
            local anim = animationSequence[index]
            local tween = TweenService:Create(
                UIScale,
                TweenInfo.new(anim.time, anim.style, anim.direction),
                {Scale = anim.scale}
            )
            tween:Play()
            tween.Completed:Connect(function()
                playNextAnimation(index + 1)
            end)
        end
    end
    
    playNextAnimation(1)
end

-- Load UI Library with Error Handling
wait(3)

local function LoadUI()
    local success = pcall(function()
        local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
        local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
        local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

        local Window = Fluent:CreateWindow({
            Title = "ENCHANTED HUB | BLOX FRUITS [PROFESSIONAL]",
            SubTitle = "Advanced Anti-Detection | Human-Like Behavior",
            TabWidth = 180,
            Size = UDim2.fromOffset(750, 650),
            Acrylic = true,
            Theme = "Dark",
            MinimizeKey = Enum.KeyCode.LeftControl
        })

        -- Create Tabs
        local Tabs = {
            Main = Window:AddTab({ Title = "Main Dashboard", Icon = "home" }),
            AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "fan" }),
            Combat = Window:AddTab({ Title = "Combat System", Icon = "sword" }),
            Boss = Window:AddTab({ Title = "Boss Farm", Icon = "crown" }),
            Fruits = Window:AddTab({ Title = "Devil Fruits", Icon = "apple" }),
            Teleport = Window:AddTab({ Title = "Teleportation", Icon = "map-pin" }),
            Settings = Window:AddTab({ Title = "Configuration", Icon = "settings" })
        }

        -- UI Toggle System
        local isHidden = false
        ImageButton.MouseButton1Click:Connect(function()
            animateButton()
            wait(0.2)
            if Window and Window.Root then
                if isHidden then
                    Window.Root.Visible = true
                    isHidden = false
                else
                    Window.Root.Visible = false
                    isHidden = true
                end
            end
        end)

        -- Main Dashboard
        Tabs.Main:AddParagraph({
            Title = "Enchanted Hub - Professional Edition",
            Content = "Advanced Blox Fruits automation with human-like behavior patterns, comprehensive error handling, and anti-detection systems. Developed with professional-grade architecture."
        })

        local PlayerInfo = Tabs.Main:AddParagraph({
            Title = "Player Information",
            Content = "Loading player data..."
        })

        -- Real-time player info updates
        spawn(function()
            while true do
                pcall(function()
                    local level = GetPlayerLevel()
                    local money = Player.Data.Beli.Value or 0
                    local race = Player.Data.Race.Value or "Human"
                    local currentQuest = GetOptimalQuest()
                    
                    PlayerInfo:SetDesc(string.format(
                        "Level: %d | Money: %s | Race: %s | Current Quest: %s",
                        level, tostring(money), race, currentQuest.Name
                    ))
                end)
                wait(3)
            end
        end)

        -- Auto Farm Section
        Tabs.AutoFarm:AddToggle("AutoFarmLevel", {
            Title = "Professional Auto Farm",
            Description = "Advanced level farming with optimal positioning and 500+ stud range",
            Default = false,
            Callback = function(Value)
                getgenv().AutoFarmLevel = Value
                if Value then
                    StartAdvancedLevelFarming()
                elseif LevelFarmConnection then
                    LevelFarmConnection:Disconnect()
                end
            end
        })

        local WeaponSelector = Tabs.AutoFarm:AddDropdown("WeaponSelect", {
            Title = "Weapon Selection",
            Description = "Choose your preferred farming weapon",
            Values = {"Combat", "Sword", "Fruit", "Gun"},
            Multi = false,
            Default = 1,
            Callback = function(Value)
                getgenv().SelectedWeapon = Value
            end
        })

        Tabs.AutoFarm:AddButton({
            Title = "Refresh Weapon List",
            Description = "Update available weapons from inventory",
            Callback = function()
                local weapons = {"Combat", "Sword", "Fruit", "Gun"}
                pcall(function()
                    for _, tool in pairs(Player.Backpack:GetChildren()) do
                        if tool:IsA("Tool") and not table.find(weapons, tool.Name) then
                            table.insert(weapons, tool.Name)
                        end
                    end
                    if Character then
                        for _, tool in pairs(Character:GetChildren()) do
                            if tool:IsA("Tool") and not table.find(weapons, tool.Name) then
                                table.insert(weapons, tool.Name)
                            end
                        end
                    end
                end)
                WeaponSelector:SetValues(weapons)
            end
        })

        -- Combat System
        Tabs.Combat:AddToggle("AutoFastAttack", {
            Title = "Enhanced Fast Attack",
            Description = "Professional fast attack system with 500+ stud range",
            Default = false,
            Callback = function(Value)
                getgenv().AutoFastAttack = Value
                if Value then
                    StartProfessionalFastAttack()
                elseif FastAttackConnection then
                    FastAttackConnection:Disconnect()
                end
            end
        })

        Tabs.Combat:AddToggle("AutoBringMobs", {
            Title = "Advanced Bring Mobs",
            Description = "Intelligent mob positioning system (fixed collision issues)",
            Default = false,
            Callback = function(Value)
                getgenv().AutoBringMobs = Value
                if Value then
                    StartAdvancedBringMobs()
                elseif BringMobConnection then
                    BringMobConnection:Disconnect()
                end
            end
        })

        Tabs.Combat:AddToggle("AutoArmamentHaki", {
            Title = "Auto Armament Haki",
            Description = "Automatically maintain Armament Haki",
            Default = false,
            Callback = function(Value)
                getgenv().AutoArmamentHaki = Value
                if Value then
                    ActivateArmamentHaki()
                end
            end
        })

        -- Boss Farm Section
        Tabs.Boss:AddToggle("AutoBossFarm", {
            Title = "Professional Boss Farm",
            Description = "Advanced boss farming with strategic positioning",
            Default = false,
            Callback = function(Value)
                getgenv().AutoBossFarm = Value
                if Value then
                    StartAdvancedBossFarming()
                elseif BossFarmConnection then
                    BossFarmConnection:Disconnect()
                end
            end
        })

        local BossList = {}
        for bossName, _ in pairs(BossDatabase) do
            table.insert(BossList, bossName)
        end

        Tabs.Boss:AddDropdown("BossSelection", {
            Title = "Boss Selection",
            Description = "Choose target boss for farming",
            Values = BossList,
            Multi = false,
            Default = 1,
            Callback = function(Value)
                getgenv().SelectedBoss = Value
            end
        })

        Tabs.Boss:AddButton({
            Title = "Teleport to Boss",
            Description = "Smooth teleport to selected boss location",
            Callback = function()
                if getgenv().SelectedBoss ~= "" then
                    local bossData = BossDatabase[getgenv().SelectedBoss]
                    if bossData then
                        TweenTeleport(bossData.SpawnLocation, 350)
                    end
                end
            end
        })

        -- Teleportation Section
        for locationName, position in pairs(TeleportDatabase) do
            Tabs.Teleport:AddButton({
                Title = "â†’ " .. locationName,
                Description = "Professional tween teleportation",
                Callback = function()
                    TweenTeleport(position, getgenv().TweenSpeed)
                end
            })
        end

        -- Configuration Section
        Tabs.Settings:AddSlider("TweenSpeed", {
            Title = "Teleportation Speed",
            Description = "Adjust movement speed for teleportation",
            Default = 300,
            Min = 150,
            Max = 800,
            Rounding = 25,
            Callback = function(Value)
                getgenv().TweenSpeed = Value
            end
        })

        Tabs.Settings:AddToggle("AntiDetection", {
            Title = "Anti-Detection System",
            Description = "Advanced detection evasion with human-like patterns",
            Default = true,
            Callback = function(Value)
                getgenv().AntiDetection = Value
            end
        })

        Tabs.Settings:AddButton({
            Title = "Refresh Character Data",
            Description = "Update character references and status",
            Callback = function()
                UpdateCharacter()
            end
        })

        Tabs.Settings:AddButton({
            Title = "Reset All Connections",
            Description = "Restart all farming connections",
            Callback = function()
                if FastAttackConnection then FastAttackConnection:Disconnect() end
                if BringMobConnection then BringMobConnection:Disconnect() end
                if LevelFarmConnection then LevelFarmConnection:Disconnect() end
                if BossFarmConnection then BossFarmConnection:Disconnect() end
                
                wait(1)
                UpdateCharacter()
            end
        })

        return true
    end)
    
    if not success then
        print("UI Load Failed - Retrying in 5 seconds...")
        wait(5)
        LoadUI()
    end
end

-- Initialize Everything
spawn(function()
    -- Initialize character
    UpdateCharacter()
    
    -- Load UI
    LoadUI()
    
    -- Start anti-detection
    DetectionSystem.UpdateActivity()
    
    print("=== ENCHANTED HUB LOADED SUCCESSFULLY ===")
    print("Features: Professional Auto Farm | Advanced Anti-Detection | Human Behavior")
    print("Status: All systems operational and ready for use")
    print("Version: Professional Edition v2.0")
end)
