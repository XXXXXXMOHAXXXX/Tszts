local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 0.1

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")

-- Variables
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Script Settings
getgenv().EnchantedHub = {
    AutoFarm = false,
    AutoLevel = false,
    AutoBossKill = false,
    AutoSeaEvent = false,
    AutoRaid = false,
    SafeMode = true,
    SelectedWeapon = "",
    FastAttack = false,
    AutoStats = false,
    AntiAFK = true,
    TweenSpeed = 350,
    BypassTP = true,
    AutoObservationV2 = false,
    AutoSoulGuitar = false,
    AutoCDKQuest = false,
    AutoTushita = false,
    AutoEliteHunter = false,
    AutoMiragePuzzle = false,
    SelectedIsland = "",
    FruitSniper = false,
    AutoStore = false,
    WebhookURL = "",
    NotifyFruit = true
}

-- UI Creation
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")

ScreenGui.Name = "EnchantedHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton

UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45

UIScale.Parent = ImageButton
UIScale.Scale = 1

-- Button Animation Function
local function animateButton()
    local tween1 = TweenService:Create(
        UIScale,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Scale = 0.8}
    )
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = TweenService:Create(
            UIScale,
            TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Scale = 1.1}
        )
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = TweenService:Create(
                UIScale,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Scale = 1}
            )
            tween3:Play()
        end)
    end)
end

-- Open/Close GUI Logic
local isHidden = false
ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    if isHidden then
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = true
            end
        end
        if Window and Window.Root then
            Window.Root.Visible = true
        end
        isHidden = false
    else
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = false
            end
        end
        if Window and Window.Root then
            Window.Root.Visible = false
        end
        isHidden = true
    end
end)

-- Wait before creating main GUI
wait(3)

-- Load Fluent Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create Main Window
local Window = Fluent:CreateWindow({
    Title = "ENCHANTED HUB | BLOX FRUITS",
    SubTitle = "Created by AABIS | Version 3.2.1",
    TabWidth = 160,
    Size = UDim2.fromOffset(680, 520),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "zap" }),
    Combat = Window:AddTab({ Title = "Combat", Icon = "sword" }),
    Fruits = Window:AddTab({ Title = "Devil Fruits", Icon = "apple" }),
    Items = Window:AddTab({ Title = "Items & Quests", Icon = "package" }),
    SeaEvents = Window:AddTab({ Title = "Sea Events", Icon = "anchor" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Misc = Window:AddTab({ Title = "Miscellaneous", Icon = "settings" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "user" })
}

-- Utility Functions
local function getDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function tweenToPosition(targetPosition, speed)
    if not character or not rootPart then return end
    
    local distance = getDistance(rootPart.Position, targetPosition)
    local tweenTime = distance / (speed or EnchantedHub.TweenSpeed)
    
    local tween = TweenService:Create(
        rootPart,
        TweenInfo.new(tweenTime, Enum.EasingStyle.Linear),
        {CFrame = CFrame.new(targetPosition)}
    )
    
    tween:Play()
    return tween
end

local function getAllEnemies()
    local enemies = {}
    for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
        if enemy:FindFirstChild("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") and enemy.Humanoid.Health > 0 then
            table.insert(enemies, enemy)
        end
    end
    return enemies
end

local function getNearestEnemy()
    local nearestEnemy = nil
    local shortestDistance = math.huge
    
    for _, enemy in pairs(getAllEnemies()) do
        local distance = getDistance(rootPart.Position, enemy.HumanoidRootPart.Position)
        if distance < shortestDistance then
            shortestDistance = distance
            nearestEnemy = enemy
        end
    end
    
    return nearestEnemy
end

local function equipWeapon(weaponName)
    if player.Backpack:FindFirstChild(weaponName) then
        local tool = player.Backpack[weaponName]
        humanoid:EquipTool(tool)
    end
end

local function performAttack()
    local tool = character:FindFirstChildOfClass("Tool")
    if tool and tool:FindFirstChild("Level") then
        -- Sword attack
        game:GetService("VirtualUser"):CaptureController()
        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280, 672))
        wait(0.1)
        game:GetService("VirtualUser"):Button1Up(Vector2.new(1280, 672))
    end
end

-- Main Tab
Tabs.Main:AddParagraph({
    Title = "Welcome to Enchanted Hub!",
    Content = "Premium Blox Fruits script with advanced features.\n\nMade by AABIS with love â¤ï¸"
})

local MainStats = Tabs.Main:AddParagraph({
    Title = "Player Statistics",
    Content = "Loading player data..."
})

local function updatePlayerStats()
    local level = player.Data.Level.Value or 0
    local beli = player.Data.Beli.Value or 0
    local fragments = player.Data.Fragments.Value or 0
    
    MainStats:SetDesc(string.format(
        "Level: %d\nBeli: %s\nFragments: %d\nBounty/Honor: %s",
        level,
        tostring(beli):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", ""),
        fragments,
        tostring(player.leaderstats["Bounty/Honor"].Value):reverse():gsub("(%d%d%d)", "%1,"):reverse():gsub("^,", "")
    ))
end

-- Update stats every 5 seconds
spawn(function()
    while wait(5) do
        pcall(updatePlayerStats)
    end
end)

-- Auto Farm Tab
local farmingMethods = {"Level", "Nearest Enemy", "Boss", "Elite Hunter", "Cake Prince", "Dough King", "Soul Guitar", "CDK"}
local selectedFarmMethod = "Level"

Tabs.AutoFarm:AddDropdown("FarmMethod", {
    Title = "Farming Method",
    Values = farmingMethods,
    Multi = false,
    Default = 1,
    Callback = function(value)
        selectedFarmMethod = value
    end
})

local AutoFarmToggle = Tabs.AutoFarm:AddToggle("AutoFarm", {
    Title = "Enable Auto Farm",
    Default = false,
    Callback = function(value)
        EnchantedHub.AutoFarm = value
    end
})

local FastAttackToggle = Tabs.AutoFarm:AddToggle("FastAttack", {
    Title = "Fast Attack (Recommended)",
    Default = false,
    Callback = function(value)
        EnchantedHub.FastAttack = value
    end
})

-- Weapon Selection
local weapons = {}
for _, item in pairs(player.Backpack:GetChildren()) do
    if item:IsA("Tool") then
        table.insert(weapons, item.Name)
    end
end

if #weapons > 0 then
    Tabs.AutoFarm:AddDropdown("WeaponSelect", {
        Title = "Select Weapon",
        Values = weapons,
        Multi = false,
        Default = 1,
        Callback = function(value)
            EnchantedHub.SelectedWeapon = value
        end
    })
end

-- Auto Farm Logic
spawn(function()
    while wait(0.1) do
        if EnchantedHub.AutoFarm and character and rootPart then
            pcall(function()
                if EnchantedHub.SelectedWeapon ~= "" then
                    equipWeapon(EnchantedHub.SelectedWeapon)
                end
                
                if selectedFarmMethod == "Level" or selectedFarmMethod == "Nearest Enemy" then
                    local enemy = getNearestEnemy()
                    if enemy then
                        local enemyRoot = enemy:FindFirstChild("HumanoidRootPart")
                        local enemyHumanoid = enemy:FindFirstChild("Humanoid")
                        
                        if enemyRoot and enemyHumanoid and enemyHumanoid.Health > 0 then
                            -- Teleport behind enemy
                            local behindPosition = enemyRoot.Position - enemyRoot.CFrame.LookVector * 7
                            rootPart.CFrame = CFrame.new(behindPosition, enemyRoot.Position)
                            
                            -- Attack
                            if EnchantedHub.FastAttack then
                                for i = 1, 3 do
                                    performAttack()
                                    wait(0.05)
                                end
                            else
                                performAttack()
                            end
                        end
                    end
                end
            end)
        end
    end
end)

-- Combat Tab
Tabs.Combat:AddToggle("KillAura", {
    Title = "Kill Aura",
    Default = false,
    Callback = function(value)
        -- Kill Aura logic here
    end
})

Tabs.Combat:AddSlider("AttackRange", {
    Title = "Attack Range",
    Description = "Range for combat attacks",
    Default = 50,
    Min = 10,
    Max = 200,
    Rounding = 1,
    Callback = function(value)
        -- Attack range logic
    end
})

-- Devil Fruits Tab
Tabs.Fruits:AddToggle("FruitNotify", {
    Title = "Fruit Spawn Notifications",
    Default = true,
    Callback = function(value)
        EnchantedHub.NotifyFruit = value
    end
})

Tabs.Fruits:AddToggle("AutoStoreFruit", {
    Title = "Auto Store Fruits",
    Default = false,
    Callback = function(value)
        EnchantedHub.AutoStore = value
    end
})

-- Teleport Tab
local islands = {
    "Starter Island", "Jungle", "Pirate Village", "Desert", "Frozen Village",
    "Marine Fortress", "Skylands", "Prison", "Colosseum", "Magma Village",
    "Underwater City", "Upper Skylands", "Royal High", "Fountain City",
    "Shank Room", "Mob Island", "Kingdom of Rose", "Usoapp's Island",
    "Greenbit", "Zou", "Hydra Island", "Floating Turtle", "Mansion",
    "Haunted Castle", "Ice Castle", "Forgotten Island", "Ussop Island",
    "Mysterious Island", "Tiki Outpost", "Mirage Island"
}

Tabs.Teleport:AddDropdown("IslandSelect", {
    Title = "Select Island",
    Values = islands,
    Multi = false,
    Default = 1,
    Callback = function(value)
        EnchantedHub.SelectedIsland = value
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Island",
    Description = "Instantly travel to selected island",
    Callback = function()
        -- Island teleport logic would go here
        Window:Dialog({
            Title = "Teleporting...",
            Content = "Traveling to " .. EnchantedHub.SelectedIsland,
            Buttons = {
                {
                    Title = "Confirm",
                    Callback = function()
                        -- Actual teleport code here
                    end
                }
            }
        })
    end
})

-- Sea Events Tab
Tabs.SeaEvents:AddToggle("AutoSeaEvent", {
    Title = "Auto Sea Events",
    Default = false,
    Callback = function(value)
        EnchantedHub.AutoSeaEvent = value
    end
})

Tabs.SeaEvents:AddToggle("AutoLeviathan", {
    Title = "Auto Kill Leviathan",
    Default = false,
    Callback = function(value)
        -- Auto Leviathan logic
    end
})

-- Miscellaneous Tab
Tabs.Misc:AddToggle("AntiAFK", {
    Title = "Anti AFK",
    Default = true,
    Callback = function(value)
        EnchantedHub.AntiAFK = value
    end
})

Tabs.Misc:AddSlider("TweenSpeed", {
    Title = "Tween Speed",
    Description = "Speed for teleportation",
    Default = 350,
    Min = 100,
    Max = 1000,
    Rounding = 50,
    Callback = function(value)
        EnchantedHub.TweenSpeed = value
    end
})

-- Settings Tab
Tabs.Settings:AddParagraph({
    Title = "Script Information",
    Content = "Enchanted Hub - Blox Fruits\nVersion: 3.2.1\nCreated by: AABIS\nLast Updated: January 2025\n\nJoin our Discord: discord.gg/enchanted"
})

Tabs.Settings:AddButton({
    Title = "Copy Discord Link",
    Description = "Get support and updates",
    Callback = function()
        setclipboard("discord.gg/enchanted")
        Fluent:Notify({
            Title = "Copied!",
            Content = "Discord link copied to clipboard",
            Duration = 3
        })
    end
})

Tabs.Settings:AddButton({
    Title = "Rejoin Server",
    Description = "Rejoin current server",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId, player)
    end
})

Tabs.Settings:AddButton({
    Title = "Server Hop",
    Description = "Find a new server",
    Callback = function()
        -- Server hop logic
        local servers = {}
        local req = game:HttpGetAsync("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100")
        local body = HttpService:JSONDecode(req)
        
        for i, v in next, body.data do
            if v.playing ~= v.maxPlayers and v.id ~= game.JobId then
                table.insert(servers, v.id)
            end
        end
        
        if #servers > 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)])
        end
    end
})

-- Anti AFK System
spawn(function()
    while wait(300) do -- Check every 5 minutes
        if EnchantedHub.AntiAFK then
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
        end
    end
end)

-- Save System
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("EnchantedHub")
SaveManager:SetFolder("EnchantedHub/BloxFruits")

SaveManager:BuildConfigSection(Tabs.Settings)
InterfaceManager:BuildInterfaceSection(Tabs.Settings)

SaveManager:LoadAutoloadConfig()

-- Startup Notification
Fluent:Notify({
    Title = "Enchanted Hub Loaded!",
    Content = "Welcome back! All systems are online.",
    Duration = 5
})

-- Error Handling
game:GetService("Players").PlayerRemoving:Connect(function(plr)
    if plr == player then
        SaveManager:SaveConfig()
    end
end)
