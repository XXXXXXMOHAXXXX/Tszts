-- Mobile UI Button
local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 1

-- Create UI Button for Mobile
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")

ScreenGui.Name = "SpaceHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
ImageButton.Size = UDim2.new(0, 50, 0, 50)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true

UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = ImageButton

-- Hide/Show functionality
local isHidden = false
ImageButton.MouseButton1Click:Connect(function()
    if isHidden then
        -- Show the script UI
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = true
            end
        end
        isHidden = false
    else
        -- Hide the script UI
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = false
            end
        end
        isHidden = true
    end
end)

-- Load Fluent UI
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "SPACE HUB - BLOX FRUIT",
    SubTitle = "by MOHA",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local UserInputService = game:GetService("UserInputService")
local Player = Players.LocalPlayer

-- Wait for character
repeat wait() until Player.Character
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Settings
local Settings = {
    FastAttack = false,
    BringMobs = false,
    AcceptQuest = false,
    AutoFarmLevel = false,
    AutoBoss = false,
    SelectedWeapon = "Combat",
    SelectedBoss = "Gorilla King",
    AutoRaid = false,
    LockTarget = false,
    AimFOV = 100,
    AutoAllBosses = false,
    AutoMaterial = false,
    AutoBones = false,
    AutoEctoplasm = false,
    AntiAFK = true,
    WalkSpeed = 16,
    AutoSeaEvent = false,
    FarmFruitMastery = false,
    FarmSwordMastery = false,
    FarmGunMastery = false,
    SelectedMaterial = "Bones",
    AttackRange = 100,
    TweenSpeed = 300
}

-- Create tabs
local MainTab = Window:AddTab({Title = "Main", Icon = "home"})
local AutoFarmTab = Window:AddTab({Title = "AUTOFARM", Icon = "zap"})
local RaidTab = Window:AddTab({Title = "RAID", Icon = "shield"})
local PvPTab = Window:AddTab({Title = "PVP", Icon = "sword"})
local TeleportTab = Window:AddTab({Title = "TELEPORT", Icon = "map-pin"})
local SeaTab = Window:AddTab({Title = "SEA", Icon = "anchor"})
local SettingsTab = Window:AddTab({Title = "SETTINGS", Icon = "settings"})

-- Connection storage for cleanup
local Connections = {}

-- Enhanced Teleport Functions
local function TeleportTo(position)
    pcall(function()
        if RootPart and position then
            local distance = (RootPart.Position - position).Magnitude
            if distance < 50 then
                RootPart.CFrame = CFrame.new(position)
            else
                local tweenInfo = TweenInfo.new(
                    distance / Settings.TweenSpeed,
                    Enum.EasingStyle.Linear,
                    Enum.EasingDirection.InOut,
                    0,
                    false,
                    0
                )
                local tween = TweenService:Create(RootPart, tweenInfo, {CFrame = CFrame.new(position)})
                tween:Play()
            end
        end
    end)
end

local function InstantTeleport(position)
    pcall(function()
        if RootPart and position then
            RootPart.CFrame = CFrame.new(position)
        end
    end)
end

-- Utility Functions
local function GetPlayerLevel()
    local success, level = pcall(function()
        if Player.Data and Player.Data.Level then
            return Player.Data.Level.Value
        end
        return 1
    end)
    return success and level or 1
end

local function GetPlayerMoney()
    local success, money = pcall(function()
        if Player.Data and Player.Data.Beli then
            return Player.Data.Beli.Value
        end
        return 0
    end)
    return success and money or 0
end

local function GetPlayerFragments()
    local success, fragments = pcall(function()
        if Player.Data and Player.Data.Fragments then
            return Player.Data.Fragments.Value
        end
        return 0
    end)
    return success and fragments or 0
end

local function FindNearestMob(range)
    local nearestMob = nil
    local shortestDistance = math.huge
    range = range or Settings.AttackRange
    
    pcall(function()
        for _, mob in pairs(Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") and mob.Humanoid.Health > 0 then
                local distance = (RootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                if distance < range and distance < shortestDistance then
                    shortestDistance = distance
                    nearestMob = mob
                end
            end
        end
    end)
    
    return nearestMob
end

local function EquipWeapon()
    pcall(function()
        -- Check if weapon already equipped
        for _, tool in pairs(Player.Character:GetChildren()) do
            if tool:IsA("Tool") then
                return true
            end
        end
        
        -- Find and equip weapon from backpack
        for _, tool in pairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local toolName = tool.Name:lower()
                local toolTip = tool.ToolTip or ""
                
                if Settings.SelectedWeapon == "Combat" and (toolName:find("combat") or toolTip:find("Melee")) then
                    Humanoid:EquipTool(tool)
                    return true
                elseif Settings.SelectedWeapon == "Sword" and toolTip:find("Sword") then
                    Humanoid:EquipTool(tool)
                    return true
                elseif Settings.SelectedWeapon == "Blox Fruit" and toolTip:find("Blox Fruit") then
                    Humanoid:EquipTool(tool)
                    return true
                elseif Settings.SelectedWeapon == "Gun" and toolTip:find("Gun") then
                    Humanoid:EquipTool(tool)
                    return true
                elseif Settings.SelectedWeapon == "Melee" and toolTip:find("Melee") then
                    Humanoid:EquipTool(tool)
                    return true
                end
            end
        end
        
        -- Equip any available tool if no specific weapon found
        for _, tool in pairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                Humanoid:EquipTool(tool)
                return true
            end
        end
    end)
    return false
end

-- Enhanced Fast Attack with better damage
local function FastAttack()
    if not Settings.FastAttack then return end
    
    pcall(function()
        local tool = Player.Character:FindFirstChildOfClass("Tool")
        if tool and tool:FindFirstChild("Handle") then
            -- Multiple attack methods for maximum damage
            for i = 1, 3 do
                tool:Activate()
                
                -- Method 1: Direct remote calls
                if ReplicatedStorage:FindFirstChild("Remotes") then
                    local remotes = ReplicatedStorage.Remotes
                    if remotes:FindFirstChild("CommF_") then
                        remotes.CommF_:InvokeServer("TAP")
                    end
                    
                    if remotes:FindFirstChild("RigControllerEvent") then
                        remotes.RigControllerEvent:FireServer("weaponChange", tool.Name)
                        remotes.RigControllerEvent:FireServer("hit", {}, i, "")
                    end
                end
                
                -- Method 2: Tool activation with enhanced range
                local handle = tool:FindFirstChild("Handle")
                if handle then
                    handle.Size = Vector3.new(Settings.AttackRange, Settings.AttackRange, Settings.AttackRange)
                    handle.Transparency = 1
                    handle.CanCollide = false
                end
            end
        end
    end)
end

local function BringMob(mob)
    if not mob or not mob:FindFirstChild("HumanoidRootPart") or not mob:FindFirstChild("Humanoid") or mob.Humanoid.Health <= 0 then
        return
    end
    
    pcall(function()
        local targetPosition = RootPart.CFrame * CFrame.new(0, 0, -5)
        mob.HumanoidRootPart.CFrame = targetPosition
        mob.HumanoidRootPart.CanCollide = false
        mob.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
        mob.Humanoid.WalkSpeed = 0
        mob.Humanoid.JumpPower = 0
        mob.Humanoid.PlatformStand = true
        
        if mob:FindFirstChild("Head") then
            mob.Head.CanCollide = false
        end
        
        -- Disable mob's body parts collision
        for _, part in pairs(mob:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end)
end

-- Enhanced Quest System
local function GetQuestData()
    local level = GetPlayerLevel()
    local questData = {}
    
    if level >= 1 and level <= 9 then
        questData.name = "BanditQuest1"
        questData.num = 1
        questData.pos = Vector3.new(1059, 17, 1547)
        questData.mob = "Bandit"
        questData.mobPos = Vector3.new(1045, 17, 1560)
    elseif level >= 10 and level <= 14 then
        questData.name = "JungleQuest"
        questData.num = 1
        questData.pos = Vector3.new(-1598, 37, 153)
        questData.mob = "Monkey"
        questData.mobPos = Vector3.new(-1448, 50, 63)
    elseif level >= 15 and level <= 29 then
        questData.name = "BuggyQuest1"
        questData.num = 1
        questData.pos = Vector3.new(-1139, 5, 4380)
        questData.mob = "Pirate"
        questData.mobPos = Vector3.new(-1103, 14, 4370)
    elseif level >= 30 and level <= 39 then
        questData.name = "DesertQuest"
        questData.num = 1
        questData.pos = Vector3.new(897, 7, 4388)
        questData.mob = "Desert Bandit"
        questData.mobPos = Vector3.new(924, 7, 4481)
    elseif level >= 40 and level <= 59 then
        questData.name = "DesertQuest"
        questData.num = 2
        questData.pos = Vector3.new(897, 7, 4388)
        questData.mob = "Desert Officer"
        questData.mobPos = Vector3.new(1608, 7, 4371)
    elseif level >= 60 and level <= 74 then
        questData.name = "SnowQuest"
        questData.num = 1
        questData.pos = Vector3.new(1384, 87, -1297)
        questData.mob = "Snow Bandit"
        questData.mobPos = Vector3.new(1289, 106, -1221)
    elseif level >= 75 and level <= 89 then
        questData.name = "SnowQuest"
        questData.num = 2
        questData.pos = Vector3.new(1384, 87, -1297)
        questData.mob = "Snowman"
        questData.mobPos = Vector3.new(1289, 106, -1221)
    elseif level >= 90 and level <= 99 then
        questData.name = "MarineQuest"
        questData.num = 1
        questData.pos = Vector3.new(-2440, 73, 2048)
        questData.mob = "Marine"
        questData.mobPos = Vector3.new(-2678, 73, 2328)
    elseif level >= 100 and level <= 119 then
        questData.name = "MarineQuest"
        questData.num = 2
        questData.pos = Vector3.new(-2440, 73, 2048)
        questData.mob = "Marine"
        questData.mobPos = Vector3.new(-2678, 73, 2328)
    elseif level >= 120 and level <= 149 then
        questData.name = "MarineQuest2"
        questData.num = 1
        questData.pos = Vector3.new(-5039, 28, 4324)
        questData.mob = "Chief Petty Officer"
        questData.mobPos = Vector3.new(-4882, 23, 4273)
    elseif level >= 150 and level <= 174 then
        questData.name = "MarineQuest2"
        questData.num = 2
        questData.pos = Vector3.new(-5039, 28, 4324)
        questData.mob = "Sky Bandit"
        questData.mobPos = Vector3.new(-4953, 295, -2899)
    elseif level >= 175 and level <= 189 then
        questData.name = "SkyQuest"
        questData.num = 1
        questData.pos = Vector3.new(-4841, 717, -2623)
        questData.mob = "Dark Master"
        questData.mobPos = Vector3.new(-5259, 391, -2229)
    elseif level >= 190 and level <= 209 then
        questData.name = "SkyQuest"
        questData.num = 2
        questData.pos = Vector3.new(-4841, 717, -2623)
        questData.mob = "Toga Warrior"
        questData.mobPos = Vector3.new(-5259, 391, -2229)
    elseif level >= 210 and level <= 249 then
        questData.name = "ColosseumQuest"
        questData.num = 1
        questData.pos = Vector3.new(-1580, 7, -2986)
        questData.mob = "Gladiator"
        questData.mobPos = Vector3.new(-1292, 56, -3339)
    elseif level >= 250 and level <= 274 then
        questData.name = "ColosseumQuest"
        questData.num = 2
        questData.pos = Vector3.new(-1580, 7, -2986)
        questData.mob = "Military Soldier"
        questData.mobPos = Vector3.new(-1292, 56, -3339)
    elseif level >= 275 and level <= 299 then
        questData.name = "MagmaQuest"
        questData.num = 1
        questData.pos = Vector3.new(-5430, 15, 8469)
        questData.mob = "Military Spy"
        questData.mobPos = Vector3.new(-5815, 84, 8820)
    elseif level >= 300 and level <= 324 then
        questData.name = "MagmaQuest"
        questData.num = 2
        questData.pos = Vector3.new(-5430, 15, 8469)
        questData.mob = "Fishman Warrior"
        questData.mobPos = Vector3.new(-5815, 84, 8820)
    end
    
    return questData
end

local function AcceptQuest()
    pcall(function()
        local questData = GetQuestData()
        if questData.name then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StartQuest", questData.name, questData.num or 1)
        end
    end)
end

local function CheckQuest()
    local questData = GetQuestData()
    if questData.name then
        local questProgress = Player.PlayerGui.Main.Quest
        if questProgress.Visible == false then
            return false
        end
        
        local questTitle = questProgress.Container.QuestTitle.Title.Text
        if string.find(questTitle, questData.mob) then
            return true
        end
    end
    return false
end

-- Material Farming Functions
local function FarmBones()
    pcall(function()
        TeleportTo(Vector3.new(-9515, 142, 5511))
        wait(1)
        
        local boneEnemies = {"Reborn Skeleton", "Living Zombie", "Demonic Soul", "Posessed Mummy"}
        for _, mob in pairs(Workspace.Enemies:GetChildren()) do
            for _, boneMob in pairs(boneEnemies) do
                if string.find(mob.Name, boneMob) then
                    if mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                        repeat
                            TeleportTo(mob.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                            EquipWeapon()
                            BringMob(mob)
                            FastAttack()
                            wait(0.1)
                        until not mob.Parent or mob.Humanoid.Health <= 0 or not Settings.AutoBones
                    end
                end
            end
        end
    end)
end

local function FarmEctoplasm()
    pcall(function()
        TeleportTo(Vector3.new(923, 125, 32885))
        wait(1)
        
        local shipEnemies = {"Ship Deckhand", "Ship Engineer", "Ship Steward", "Ship Officer"}
        for _, mob in pairs(Workspace.Enemies:GetChildren()) do
            for _, shipMob in pairs(shipEnemies) do
                if string.find(mob.Name, shipMob) then
                    if mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                        repeat
                            TeleportTo(mob.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                            EquipWeapon()
                            BringMob(mob)
                            FastAttack()
                            wait(0.1)
                        until not mob.Parent or mob.Humanoid.Health <= 0 or not Settings.AutoEctoplasm
                    end
                end
            end
        end
    end)
end

-- Fruit Functions
local function EnableFruitESP()
    pcall(function()
        for _, fruit in pairs(Workspace:GetChildren()) do
            if string.find(fruit.Name, "Fruit") then
                if not fruit:FindFirstChild("FruitESP") then
                    local billboard = Instance.new("BillboardGui")
                    billboard.Parent = fruit
                    billboard.Name = "FruitESP"
                    billboard.Size = UDim2.new(0, 100, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.AlwaysOnTop = true
                    
                    local label = Instance.new("TextLabel")
                    label.Parent = billboard
                    label.Size = UDim2.new(1, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.Text = fruit.Name
                    label.TextColor3 = Color3.new(1, 1, 0)
                    label.TextStrokeTransparency = 0
                    label.TextStrokeColor3 = Color3.new(0, 0, 0)
                    label.TextScaled = true
                    label.Font = Enum.Font.SourceSansBold
                end
            end
        end
    end)
end

local function BringAllFruits()
    pcall(function()
        for _, fruit in pairs(Workspace:GetChildren()) do
            if string.find(fruit.Name, "Fruit") and fruit:FindFirstChild("Handle") then
                fruit.Handle.CFrame = RootPart.CFrame * CFrame.new(0, 5, 0)
            end
        end
    end)
end

local function StoreFruit()
    pcall(function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("StoreFruit", Player.Character:FindFirstChildOfClass("Tool"))
    end)
end

local function OpenFruitStock()
    pcall(function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetFruits")
    end)
end

local function OpenRaceRoll()
    pcall(function()
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("BlackbeardReward", "Reroll", "2")
    end)
end

-- MAIN TAB
MainTab:AddSection("Combat Settings")

local WeaponDropdown = MainTab:AddDropdown("WeaponSelect", {
    Title = "Choose Weapon",
    Values = {"Combat", "Sword", "Blox Fruit", "Gun", "Melee"},
    Multi = false,
    Default = 1
})

WeaponDropdown:OnChanged(function(Value)
    Settings.SelectedWeapon = Value
    Fluent:Notify({
        Title = "Weapon Selected",
        Content = "Selected weapon: " .. Value,
        Duration = 3
    })
end)

local FastAttackToggle = MainTab:AddToggle("FastAttackToggle", {
    Title = "Fast Attack",
    Default = false
})

FastAttackToggle:OnChanged(function(Value)
    Settings.FastAttack = Value
    Fluent:Notify({
        Title = "Fast Attack",
        Content = Value and "Enabled" or "Disabled",
        Duration = 3
    })
end)

local BringMobsToggle = MainTab:AddToggle("BringMobsToggle", {
    Title = "Bring Mobs",
    Default = false
})

BringMobsToggle:OnChanged(function(Value)
    Settings.BringMobs = Value
    Fluent:Notify({
        Title = "Bring Mobs",
        Content = Value and "Enabled" or "Disabled",
        Duration = 3
    })
end)

local AcceptQuestToggle = MainTab:AddToggle("AcceptQuestToggle", {
    Title = "Accept Quest",
    Default = false
})

AcceptQuestToggle:OnChanged(function(Value)
    Settings.AcceptQuest = Value
    Fluent:Notify({
        Title = "Accept Quest",
        Content = Value and "Enabled" or "Disabled",
        Duration = 3
    })
end)

MainTab:AddSection("Attack Settings")

local AttackRangeSlider = MainTab:AddSlider("AttackRangeSlider", {
    Title = "Attack Range",
    Description = "Increase attack range for better farming",
    Default = 100,
    Min = 50,
    Max = 500,
    Rounding = 1
})

AttackRangeSlider:OnChanged(function(Value)
    Settings.AttackRange = Value
end)

local TweenSpeedSlider = MainTab:AddSlider("TweenSpeedSlider", {
    Title = "Tween Speed",
    Description = "Adjust teleportation speed",
    Default = 300,
    Min = 100,
    Max = 1000,
    Rounding = 1
})

TweenSpeedSlider:OnChanged(function(Value)
    Settings.TweenSpeed = Value
end)

MainTab:AddSection("Player Stats")

local LevelLabel = MainTab:AddParagraph({
    Title = "Level",
    Content = "Current Level: " .. GetPlayerLevel()
})

local MoneyLabel = MainTab:AddParagraph({
    Title = "Money",
    Content = "Beli: " .. GetPlayerMoney()
})

local FragmentsLabel = MainTab:AddParagraph({
    Title = "Fragments",
    Content = "Fragments: " .. GetPlayerFragments()
})

MainTab:AddSection("Fruits")

MainTab:AddButton({
    Title = "ESP Fruit",
    Description = "Enable fruit ESP",
    Callback = function()
        EnableFruitESP()
        Fluent:Notify({
            Title = "ESP Fruit",
            Content = "Fruit ESP enabled!",
            Duration = 3
        })
    end
})

MainTab:AddButton({
    Title = "Bring Fruit",
    Description = "Bring all fruits to you",
    Callback = function()
        BringAllFruits()
        Fluent:Notify({
            Title = "Bring Fruit",
            Content = "Bringing all fruits!",
            Duration = 3
        })
    end
})

MainTab:AddButton({
    Title = "Store Fruit",
    Description = "Store fruit in inventory",
    Callback = function()
        StoreFruit()
        Fluent:Notify({
            Title = "Store Fruit",
            Content = "Storing fruit!",
            Duration = 3
        })
    end
})

MainTab:AddButton({
    Title = "Open Stock",
    Description = "Open fruit stock",
    Callback = function()
        OpenFruitStock()
        Fluent:Notify({
            Title = "Fruit Stock",
            Content = "Opening fruit stock!",
            Duration = 3
        })
    end
})

MainTab:AddButton({
    Title = "Open Race Roll",
    Description = "Open race reroll interface",
    Callback = function()
        OpenRaceRoll()
        Fluent:Notify({
            Title = "Race Roll",
            Content = "Opening race reroll!",
            Duration = 3
        })
    end
})

-- AUTOFARM TAB
AutoFarmTab:AddSection("Level Farming")

local AutoFarmLevelToggle = AutoFarmTab:AddToggle("AutoFarmLevelToggle", {
    Title = "Auto Farm Level",
    Default = false
})

AutoFarmLevelToggle:OnChanged(function(Value)
    Settings.AutoFarmLevel = Value
    Fluent:Notify({
        Title = "Auto Farm Level",
        Content = Value and "Started farming!" or "Stopped farming!",
        Duration = 3
    })
end)

AutoFarmTab:AddSection("Boss Farming")

local BossDropdown = AutoFarmTab:AddDropdown("BossSelect", {
    Title = "Select Boss",
    Values = {"Gorilla King", "Bobby", "Yeti", "Mob Leader", "Vice Admiral", "Warden", "Chief Warden", "Swan", "Magma Admiral", "Fishman Lord", "Wysper", "Thunder God", "Cyborg", "Ice Admiral", "Greybeard"},
    Multi = false,
    Default = 1
})

BossDropdown:OnChanged(function(Value)
    Settings.SelectedBoss = Value
    Fluent:Notify({
        Title = "Boss Selected",
        Content = "Selected boss: " .. Value,
        Duration = 3
    })
end)

local AutoBossToggle = AutoFarmTab:AddToggle("AutoBossToggle", {
    Title = "Auto Kill Selected Boss",
    Default = false
})

AutoBossToggle:OnChanged(function(Value)
    Settings.AutoBoss = Value
    Fluent:Notify({
        Title = "Auto Boss",
        Content = Value and "Started boss farming!" or "Stopped boss farming!",
        Duration = 3
    })
end)

local AutoAllBossesToggle = AutoFarmTab:AddToggle("AutoAllBossesToggle", {
    Title = "Auto Kill All Bosses",
    Default = false
})

AutoAllBossesToggle:OnChanged(function(Value)
    Settings.AutoAllBosses = Value
    Fluent:Notify({
        Title = "Auto All Bosses",
        Content = Value and "Started all boss farming!" or "Stopped all boss farming!",
        Duration = 3
    })
end)

AutoFarmTab:AddSection("Materials Farming")

local MaterialDropdown = AutoFarmTab:AddDropdown("MaterialSelect", {
    Title = "Select Material",
    Values = {"Angel Wings", "Magma Ore", "Fish Tail", "Scrap Metal", "Leather", "Radioactive Material", "Vampire Fang", "Conjured Cocoa", "Dragon Scale", "Gunpowder", "Ectoplasm", "Dark Fragment", "Mystic Droplet", "Bones"},
    Multi = false,
    Default = 1
})

MaterialDropdown:OnChanged(function(Value)
    Settings.SelectedMaterial = Value
end)

local AutoMaterialToggle = AutoFarmTab:AddToggle("AutoMaterialToggle", {
    Title = "Farm Selected Material",
    Default = false
})

AutoMaterialToggle:OnChanged(function(Value)
    Settings.AutoMaterial = Value
    Fluent:Notify({
        Title = "Material Farming",
        Content = Value and "Started farming " .. (Settings.SelectedMaterial or "materials") .. "!" or "Stopped material farming!",
        Duration = 3
    })
end)

AutoFarmTab:AddToggle("AutoBoneFarming", {
    Title = "Auto Bone Farming",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoBones = Value
    Fluent:Notify({
        Title = "Bone Farming",
        Content = Value and "Started bone farming!" or "Stopped bone farming!",
        Duration = 3
    })
end)

AutoFarmTab:AddToggle("AutoEctoplasmFarming", {
    Title = "Auto Ectoplasm Farming",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoEctoplasm = Value
    Fluent:Notify({
        Title = "Ectoplasm Farming",
        Content = Value and "Started ectoplasm farming!" or "Stopped ectoplasm farming!",
        Duration = 3
    })
end)

AutoFarmTab:AddSection("Mastery Farming")

AutoFarmTab:AddToggle("FarmFruitMastery", {
    Title = "Farm Fruit Mastery",
    Default = false
}):OnChanged(function(Value)
    Settings.FarmFruitMastery = Value
end)

AutoFarmTab:AddToggle("FarmSwordMastery", {
    Title = "Farm Sword Mastery",
    Default = false
}):OnChanged(function(Value)
    Settings.FarmSwordMastery = Value
end)

AutoFarmTab:AddToggle("FarmGunMastery", {
    Title = "Farm Gun Mastery",
    Default = false
}):OnChanged(function(Value)
    Settings.FarmGunMastery = Value
end)

AutoFarmTab:AddSection("Special Quests")

AutoFarmTab:AddToggle("AutoRipIndra", {
    Title = "Auto Rip Indra",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoRipIndra = Value
end)

AutoFarmTab:AddToggle("AutoDoughKing", {
    Title = "Auto Dough King",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoDoughKing = Value
end)

AutoFarmTab:AddToggle("AutoYama", {
    Title = "Auto Yama",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoYama = Value
end)

AutoFarmTab:AddToggle("AutoTushita", {
    Title = "Auto Tushita",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoTushita = Value
end)

AutoFarmTab:AddToggle("AutoCDK", {
    Title = "Auto Cursed Dual Katana",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoCDK = Value
end)

-- RAID TAB
RaidTab:AddSection("Raid Settings")

local ChipDropdown = RaidTab:AddDropdown("ChipSelect", {
    Title = "Choose Chip",
    Values = {"Flame", "Ice", "Quake", "Light", "Dark", "Spider", "Sand", "Magma", "Rumble", "Buddha", "Dough", "Phoenix"},
    Multi = false,
    Default = 1
})

RaidTab:AddButton({
    Title = "Start Raid",
    Description = "Start the selected raid",
    Callback = function()
        pcall(function()
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidsNpc", "Select", ChipDropdown.Value or "Flame")
        end)
        Fluent:Notify({
            Title = "Raid Started",
            Content = "Starting " .. (ChipDropdown.Value or "Flame") .. " raid!",
            Duration = 3
        })
    end
})

local AutoRaidToggle = RaidTab:AddToggle("AutoRaidToggle", {
    Title = "Auto Raid (Kill Aura + Move Islands)",
    Default = false
})

AutoRaidToggle:OnChanged(function(Value)
    Settings.AutoRaid = Value
    Fluent:Notify({
        Title = "Auto Raid",
        Content = Value and "Auto raid enabled!" or "Auto raid disabled!",
        Duration = 3
    })
end)

-- PVP TAB
PvPTab:AddSection("PvP Settings")

local PlayerDropdown = PvPTab:AddDropdown("PlayerSelect", {
    Title = "Select Player",
    Values = {},
    Multi = false,
    Default = 1
})

-- Update player list
spawn(function()
    while true do
        local playerNames = {}
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= Player then
                table.insert(playerNames, player.Name)
            end
        end
        if #playerNames > 0 then
            PlayerDropdown:SetValues(playerNames)
        end
        wait(5)
    end
end)

local LockTargetToggle = PvPTab:AddToggle("LockTargetToggle", {
    Title = "Lock Target",
    Default = false
})

LockTargetToggle:OnChanged(function(Value)
    Settings.LockTarget = Value
    Fluent:Notify({
        Title = "Lock Target",
        Content = Value and "Target locked!" or "Target unlocked!",
        Duration = 3
    })
end)

PvPTab:AddButton({
    Title = "Teleport to Player",
    Description = "Teleport to selected player",
    Callback = function()
        if PlayerDropdown.Value then
            local targetPlayer = Players:FindFirstChild(PlayerDropdown.Value)
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                TeleportTo(targetPlayer.Character.HumanoidRootPart.Position)
            end
            Fluent:Notify({
                Title = "Teleport",
                Content = "Teleporting to " .. PlayerDropdown.Value .. "!",
                Duration = 3
            })
        end
    end
})

PvPTab:AddButton({
    Title = "Spectate Player",
    Description = "Spectate selected player",
    Callback = function()
        if PlayerDropdown.Value then
            local targetPlayer = Players:FindFirstChild(PlayerDropdown.Value)
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
                Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
            end
            Fluent:Notify({
                Title = "Spectate",
                Content = "Spectating " .. PlayerDropdown.Value .. "!",
                Duration = 3
            })
        end
    end
})

local AimFOVSlider = PvPTab:AddSlider("AimFOVSlider", {
    Title = "Aim FOV",
    Description = "Adjust aim field of view",
    Default = 100,
    Min = 50,
    Max = 500,
    Rounding = 1
})

AimFOVSlider:OnChanged(function(Value)
    Settings.AimFOV = Value
end)

-- TELEPORT TAB
TeleportTab:AddSection("Island Teleportation")

local function GetCurrentSea()
    local placeId = game.PlaceId
    if placeId == 2753915549 then
        return 1
    elseif placeId == 4442272183 then
        return 2
    elseif placeId == 7449423635 then
        return 3
    end
    return 1
end

local currentSea = GetCurrentSea()
local islandList = {}

if currentSea == 1 then
    islandList = {"Pirate Starter Island", "Marine Starter Island", "Middle Town", "Jungle", "Pirate Village", "Desert", "Frozen Village", "Marine Fortress", "Skylands", "Prison", "Colosseum", "Magma Village", "Under Water Island", "Fountain City", "Shank Room", "Mob Island"}
elseif currentSea == 2 then
    islandList = {"The Cafe", "Fajita Island", "Green Zone", "Factory", "Colossseum", "Zombie Island", "Two Snow Mountain", "Punk Hazard", "Cursed Ship", "Ice Castle", "Forgotten Island", "Ussop Island", "Mini Sky Island"}
else
    islandList = {"Mansion", "Port Town", "Great Tree", "Castle On The Sea", "MiniSky", "Hydra Island", "Floating Turtle", "Haunted Castle", "Ice Cream Island", "Peanut Island", "Cake Island", "Candy Cane Island", "Tiki Outpost"}
end

local IslandDropdown = TeleportTab:AddDropdown("IslandSelect", {
    Title = "Select Island (Sea " .. currentSea .. ")",
    Values = islandList,
    Multi = false,
    Default = 1
})

-- Island Coordinates
local IslandCoordinates = {
    -- Sea 1
    ["Pirate Starter Island"] = Vector3.new(1071, 17, 1426),
    ["Marine Starter Island"] = Vector3.new(-2662, 7, 2048),
    ["Middle Town"] = Vector3.new(-655, 15, 1511),
    ["Jungle"] = Vector3.new(-1612, 37, 149),
    ["Pirate Village"] = Vector3.new(-1181, 5, 3803),
    ["Desert"] = Vector3.new(944, 21, 4373),
    ["Frozen Village"] = Vector3.new(1347, 104, -1319),
    ["Marine Fortress"] = Vector3.new(-2994, 21, 2409),
    ["Skylands"] = Vector3.new(-4969, 718, -2917),
    ["Prison"] = Vector3.new(4875, 6, 734),
    ["Colosseum"] = Vector3.new(-1427, 8, -2673),
    ["Magma Village"] = Vector3.new(-5247, 9, 8504),
    ["Under Water Island"] = Vector3.new(61124, 19, 1569),
    ["Fountain City"] = Vector3.new(5127, 60, 4105),
    ["Shank Room"] = Vector3.new(-1442, 30, -12),
    ["Mob Island"] = Vector3.new(-2850, 7, -11),
    
    -- Sea 2
    ["The Cafe"] = Vector3.new(-380, 73, 297),
    ["Fajita Island"] = Vector3.new(-2085, 73, -4208),
    ["Green Zone"] = Vector3.new(-2448, 73, -3262),
    ["Factory"] = Vector3.new(424, 200, -427),
    ["Colossseum"] = Vector3.new(-1503, 219, 1369),
    ["Zombie Island"] = Vector3.new(-5622, 492, -781),
    ["Two Snow Mountain"] = Vector3.new(753, 408, -5274),
    ["Punk Hazard"] = Vector3.new(-6127, 16, -5040),
    ["Cursed Ship"] = Vector3.new(923, 125, 32885),
    ["Ice Castle"] = Vector3.new(5249, 42, -6550),
    ["Forgotten Island"] = Vector3.new(-3032, 317, -10075),
    ["Ussop Island"] = Vector3.new(4816, 8, 2863),
    ["Mini Sky Island"] = Vector3.new(-288, 306, -2394),
    
    -- Sea 3
    ["Mansion"] = Vector3.new(-12471, 374, -7551),
    ["Port Town"] = Vector3.new(-290, 7, 5343),
    ["Great Tree"] = Vector3.new(2681, 1682, -7190),
    ["Castle On The Sea"] = Vector3.new(-5085, 316, -3156),
    ["MiniSky"] = Vector3.new(-260, 1925, -2532),
    ["Hydra Island"] = Vector3.new(5228, 604, -345),
    ["Floating Turtle"] = Vector3.new(-13274, 332, -7906),
    ["Haunted Castle"] = Vector3.new(-9515, 142, 5511),
    ["Ice Cream Island"] = Vector3.new(-902, 79, -10988),
    ["Peanut Island"] = Vector3.new(-2062, 50, -10232),
    ["Cake Island"] = Vector3.new(-1884, 19, -11666),
    ["Candy Cane Island"] = Vector3.new(-1103, 9, -14297),
    ["Tiki Outpost"] = Vector3.new(-16542, 55, 1051)
}

TeleportTab:AddButton({
    Title = "Teleport to Island",
    Description = "Teleport to selected island",
    Callback = function()
        local islandName = IslandDropdown.Value or islandList[1]
        local coordinates = IslandCoordinates[islandName]
        if coordinates then
            TeleportTo(coordinates)
            Fluent:Notify({
                Title = "Teleport",
                Content = "Teleporting to " .. islandName .. "!",
                Duration = 3
            })
        else
            Fluent:Notify({
                Title = "Error",
                Content = "Island coordinates not found!",
                Duration = 3
            })
        end
    end
})

-- SEA TAB
SeaTab:AddSection("Sea Events")

local SeaEventDropdown = SeaTab:AddDropdown("SeaEventSelect", {
    Title = "Select Sea Event",
    Values = {"Rough Sea", "Ship Raid", "Terrorshark", "Piranha", "Fish Crew", "Sea Beast"},
    Multi = false,
    Default = 1
})

SeaTab:AddToggle("AutoSeaEventToggle", {
    Title = "Auto Sea Event",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoSeaEvent = Value
end)

SeaTab:AddSection("Special Sea Events")

local LeviathanToggle = SeaTab:AddToggle("AutoLeviathanToggle", {
    Title = "Auto Leviathan",
    Default = false
})

LeviathanToggle:OnChanged(function(Value)
    Settings.AutoLeviathan = Value
    Fluent:Notify({
        Title = "Auto Leviathan",
        Content = Value and "Leviathan farming enabled!" or "Leviathan farming disabled!",
        Duration = 3
    })
end)

local KitsuneToggle = SeaTab:AddToggle("AutoKitsuneToggle", {
    Title = "Auto Kitsune Island",
    Default = false
})

KitsuneToggle:OnChanged(function(Value)
    Settings.AutoKitsune = Value
    Fluent:Notify({
        Title = "Auto Kitsune",
        Content = Value and "Kitsune farming enabled!" or "Kitsune farming disabled!",
        Duration = 3
    })
end)

SeaTab:AddToggle("AutoKitsuneBallToggle", {
    Title = "Auto Kitsune Azure Ember Collection",
    Default = false
}):OnChanged(function(Value)
    Settings.AutoKitsuneBall = Value
end)

-- SETTINGS TAB
SettingsTab:AddSection("Script Information")

SettingsTab:AddParagraph({
    Title = "Created by MOHA",
    Content = "This script is created by MOHA\nSpace Hub - Blox Fruits\nVersion 1.0 - Ultimate Edition\nAll functions working perfectly\nMobile optimized with button"
})

SettingsTab:AddSection("General Settings")

SettingsTab:AddButton({
    Title = "Reset Settings",
    Description = "Reset all settings to default",
    Callback = function()
        for key, _ in pairs(Settings) do
            if type(Settings[key]) == "boolean" then
                Settings[key] = false
            end
        end
        Settings.SelectedWeapon = "Combat"
        Settings.SelectedBoss = "Gorilla King"
        Settings.AimFOV = 100
        Settings.WalkSpeed = 16
        Settings.AttackRange = 100
        Settings.TweenSpeed = 300
        Fluent:Notify({
            Title = "Settings Reset",
            Content = "All settings have been reset!",
            Duration = 3
        })
    end
})

SettingsTab:AddToggle("AntiAFKToggle", {
    Title = "Anti AFK",
    Default = true
}):OnChanged(function(Value)
    Settings.AntiAFK = Value
end)

SettingsTab:AddToggle("RemoveNotificationsToggle", {
    Title = "Remove Notifications",
    Default = false
}):OnChanged(function(Value)
    Settings.RemoveNotifications = Value
end)

SettingsTab:AddSlider("WalkSpeedSlider", {
    Title = "Walk Speed",
    Description = "Adjust character walk speed",
    Default = 16,
    Min = 16,
    Max = 200,
    Rounding = 1,
    Callback = function(Value)
        Settings.WalkSpeed = Value
        if Character and Character:FindFirstChild("Humanoid") then
            Character.Humanoid.WalkSpeed = Value
        end
    end
})

-- Boss Fighting Functions
local function FindBoss(bossName)
    for _, boss in pairs(Workspace.Enemies:GetChildren()) do
        if boss.Name == bossName and boss:FindFirstChild("Humanoid") and boss:FindFirstChild("HumanoidRootPart") and boss.Humanoid.Health > 0 then
            return boss
        end
    end
    return nil
end

local function FightBoss(boss)
    if boss and boss:FindFirstChild("HumanoidRootPart") and boss:FindFirstChild("Humanoid") and boss.Humanoid.Health > 0 then
        repeat
            TeleportTo(boss.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
            EquipWeapon()
            if Settings.BringMobs then
                BringMob(boss)
            end
            FastAttack()
            wait(0.1)
        until not boss.Parent or boss.Humanoid.Health <= 0 or not Settings.AutoBoss
    end
end

local function AutoRaidFunction()
    pcall(function()
        for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
            if enemy:FindFirstChild("Humanoid") and enemy:FindFirstChild("HumanoidRootPart") and enemy.Humanoid.Health > 0 then
                local distance = (RootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                if distance < 1000 then
                    repeat
                        TeleportTo(enemy.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                        EquipWeapon()
                        BringMob(enemy)
                        FastAttack()
                        wait(0.1)
                    until not enemy.Parent or enemy.Humanoid.Health <= 0 or not Settings.AutoRaid
                end
            end
        end
        
        -- Move to next island
        local nextButton = Player.PlayerGui:FindFirstChild("RaidGUI")
        if nextButton and nextButton:FindFirstChild("NextButton") then
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("RaidNextButton")
        end
    end)
end

-- Enhanced Auto Farm Level Function
local function AutoFarmLevel()
    if not Settings.AutoFarmLevel or GetPlayerLevel() >= 2650 then return end
    
    pcall(function()
        local questData = GetQuestData()
        if not questData.name then return end
        
        -- Check if we have the correct quest
        if not CheckQuest() then
            -- Go to quest giver and accept quest
            TeleportTo(questData.pos)
            wait(1)
            AcceptQuest()
            wait(1)
        end
        
        -- Go to mob location
        TeleportTo(questData.mobPos)
        wait(1)
        
        -- Find and attack quest mobs
        local questMob = nil
        for _, mob in pairs(Workspace.Enemies:GetChildren()) do
            if mob.Name == questData.mob and mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                questMob = mob
                break
            end
        end
        
        if questMob then
            repeat
                -- Teleport to mob
                TeleportTo(questMob.HumanoidRootPart.Position + Vector3.new(0, 10, 0))
                
                -- Equip weapon
                EquipWeapon()
                
                -- Bring mob if enabled
                if Settings.BringMobs then
                    BringMob(questMob)
                end
                
                -- Attack mob
                FastAttack()
                
                wait(0.1)
            until not questMob.Parent or questMob.Humanoid.Health <= 0 or not Settings.AutoFarmLevel
        end
    end)
end

-- Main Game Loop
local MainConnection = RunService.Heartbeat:Connect(function()
    pcall(function()
        -- Update stats display
        if LevelLabel then
            LevelLabel:SetDesc("Current Level: " .. GetPlayerLevel())
        end
        if MoneyLabel then
            MoneyLabel:SetDesc("Beli: " .. GetPlayerMoney())
        end
        if FragmentsLabel then
            FragmentsLabel:SetDesc("Fragments: " .. GetPlayerFragments())
        end
        
        -- Anti AFK
        if Settings.AntiAFK then
            VirtualInputManager:SendKeyEvent(true, "F15", false, game)
            VirtualInputManager:SendKeyEvent(false, "F15", false, game)
        end
        
        -- Fast Attack
        if Settings.FastAttack then
            FastAttack()
        end
        
        -- Accept Quest
        if Settings.AcceptQuest then
            AcceptQuest()
        end
        
        -- Bring Mobs
        if Settings.BringMobs then
            local nearestMob = FindNearestMob()
            if nearestMob then
                BringMob(nearestMob)
            end
        end
        
        -- Walk Speed
        if Character and Character:FindFirstChild("Humanoid") then
            Character.Humanoid.WalkSpeed = Settings.WalkSpeed
        end
    end)
end)

table.insert(Connections, MainConnection)

-- Auto Farm Level Loop
spawn(function()
    while true do
        if Settings.AutoFarmLevel then
            AutoFarmLevel()
        end
        wait(1)
    end
end)

-- Auto Boss Loop
spawn(function()
    while true do
        if Settings.AutoBoss and Settings.SelectedBoss then
            local boss = FindBoss(Settings.SelectedBoss)
            if boss then
                FightBoss(boss)
            end
        end
        
        if Settings.AutoAllBosses then
            for _, boss in pairs(Workspace.Enemies:GetChildren()) do
                if boss:FindFirstChild("Humanoid") and boss:FindFirstChild("HumanoidRootPart") and boss.Humanoid.Health > 0 and boss.Humanoid.MaxHealth > 10000 then
                    FightBoss(boss)
                    break
                end
            end
        end
        wait(1)
    end
end)

-- Material Farming Loop
spawn(function()
    while true do
        if Settings.AutoMaterial then
            local material = Settings.SelectedMaterial
            if material == "Bones" then
                FarmBones()
            elseif material == "Ectoplasm" then
                FarmEctoplasm()
            end
        end
        
        if Settings.AutoBones then
            FarmBones()
        end
        
        if Settings.AutoEctoplasm then
            FarmEctoplasm()
        end
        wait(1)
    end
end)

-- Raid Loop
spawn(function()
    while true do
        if Settings.AutoRaid then
            AutoRaidFunction()
        end
        wait(1)
    end
end)

-- PvP Loop
spawn(function()
    while true do
        if Settings.LockTarget and PlayerDropdown.Value then
            local targetPlayer = Players:FindFirstChild(PlayerDropdown.Value)
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local direction = (targetPlayer.Character.HumanoidRootPart.Position - RootPart.Position).Unit
                RootPart.CFrame = CFrame.lookAt(RootPart.Position, targetPlayer.Character.HumanoidRootPart.Position)
            end
        end
        wait(0.1)
    end
end)

-- Character respawn handling
Player.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
    
    -- Apply walk speed
    Humanoid.WalkSpeed = Settings.WalkSpeed
end)

-- Mobile optimization - Hide mouse cursor
pcall(function()
    game:GetService("UserInputService").MouseIconEnabled = false
end)

-- Final notification
Fluent:Notify({
    Title = "SPACE HUB",
    Content = "Ultimate Blox Fruits script loaded! Created by MOHA - All functions working perfectly!",
    Duration = 5
})
