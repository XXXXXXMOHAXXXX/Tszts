
local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 0.1

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

-- Player and Character
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Global Variables
local AutoFarmEnabled = false
local AutoBossEnabled = false
local KillAuraEnabled = false
local SelectedWeapon = "Melee"
local SelectedBoss = ""
local SelectedChip = ""
local SelectedLocation = ""

-- Sea Detection Function
local function GetCurrentSea()
    local PlaceId = game.PlaceId
    if PlaceId == 2753915549 then
        return 1 -- First Sea
    elseif PlaceId == 4442272183 then
        return 2 -- Second Sea
    elseif PlaceId == 7449423635 then
        return 3 -- Third Sea
    else
        return 1 -- Default to first sea
    end
end

local CurrentSea = GetCurrentSea()

-- Player Stats Function
local function GetPlayerStats()
    local PlayerData = Player:FindFirstChild("Data")
    if not PlayerData then return {} end
    
    return {
        Level = PlayerData:FindFirstChild("Level") and PlayerData.Level.Value or 1,
        Money = PlayerData:FindFirstChild("Beli") and PlayerData.Beli.Value or 0,
        Fragments = PlayerData:FindFirstChild("Fragments") and PlayerData.Fragments.Value or 0,
        Race = PlayerData:FindFirstChild("Race") and PlayerData.Race.Value or "Human",
        Bounty = PlayerData:FindFirstChild("Bounty") and PlayerData.Bounty.Value or 0,
        Sea = CurrentSea
    }
end

-- Quest Functions
local function GetRecommendedQuest()
    local stats = GetPlayerStats()
    local level = stats.Level
    
    -- First Sea Quests
    if CurrentSea == 1 then
        if level >= 1 and level <= 9 then
            return {Name = "BanditQuest1", NPC = "Bandit", Level = {1, 9}}
        elseif level >= 10 and level <= 14 then
            return {Name = "JungleQuest", NPC = "Monkey", Level = {10, 14}}
        elseif level >= 15 and level <= 29 then
            return {Name = "BuggyQuest1", NPC = "Pirate", Level = {15, 29}}
        elseif level >= 30 and level <= 39 then
            return {Name = "DesertQuest", NPC = "Desert Bandit", Level = {30, 39}}
        elseif level >= 40 and level <= 59 then
            return {Name = "DesertQuest", NPC = "Desert Officer", Level = {40, 59}}
        elseif level >= 60 and level <= 74 then
            return {Name = "SnowQuest", NPC = "Snow Bandit", Level = {60, 74}}
        elseif level >= 75 and level <= 89 then
            return {Name = "SnowQuest", NPC = "Snowman", Level = {75, 89}}
        elseif level >= 90 and level <= 99 then
            return {Name = "MarineQuest", NPC = "Chief Petty Officer", Level = {90, 99}}
        elseif level >= 100 and level <= 119 then
            return {Name = "MarineQuest", NPC = "Rear Admiral", Level = {100, 119}}
        elseif level >= 120 and level <= 149 then
            return {Name = "JungleQuest", NPC = "Gorilla King", Level = {120, 149}}
        elseif level >= 150 and level <= 174 then
            return {Name = "ColosseumQuest", NPC = "Gladiator", Level = {150, 174}}
        elseif level >= 175 and level <= 189 then
            return {Name = "ColosseumQuest", NPC = "Toga Warrior", Level = {175, 189}}
        elseif level >= 190 and level <= 209 then
            return {Name = "ColosseumQuest", NPC = "Gladiator", Level = {190, 209}}
        elseif level >= 210 and level <= 249 then
            return {Name = "PrisonQuest", NPC = "Prisoner", Level = {210, 249}}
        elseif level >= 250 and level <= 274 then
            return {Name = "PrisonQuest", NPC = "Dangerous Prisoner", Level = {250, 274}}
        elseif level >= 275 and level <= 299 then
            return {Name = "MagmaQuest", NPC = "Toga Warrior", Level = {275, 299}}
        elseif level >= 300 and level <= 324 then
            return {Name = "MagmaQuest", NPC = "Lava Pirate", Level = {300, 324}}
        elseif level >= 325 and level <= 374 then
            return {Name = "MagmaQuest", NPC = "Head Baker", Level = {325, 374}}
        elseif level >= 375 and level <= 399 then
            return {Name = "MagmaQuest", NPC = "Cake Prince", Level = {375, 399}}
        elseif level >= 400 and level <= 449 then
            return {Name = "FishmanQuest", NPC = "Fishman Warrior", Level = {400, 449}}
        elseif level >= 450 and level <= 474 then
            return {Name = "FishmanQuest", NPC = "Fishman Commando", Level = {450, 474}}
        elseif level >= 475 and level <= 524 then
            return {Name = "SkyQuest", NPC = "God's Guard", Level = {475, 524}}
        elseif level >= 525 and level <= 549 then
            return {Name = "SkyQuest", NPC = "Shanda", Level = {525, 549}}
        elseif level >= 550 and level <= 624 then
            return {Name = "SkyQuest", NPC = "Royal Squad", Level = {550, 624}}
        elseif level >= 625 and level <= 649 then
            return {Name = "SkyQuest", NPC = "Royal Soldier", Level = {625, 649}}
        elseif level >= 650 and level <= 699 then
            return {Name = "FountainQuest", NPC = "Galley Pirate", Level = {650, 699}}
        else
            return {Name = "FountainQuest", NPC = "Galley Captain", Level = {700, 849}}
        end
    end
    
    -- Add Second and Third Sea quests here (similar structure)
    return {Name = "Unknown", NPC = "Unknown", Level = {1, 1}}
end

-- Teleport Function
local function TeleportTo(CFrame)
    if Character and Character:FindFirstChild("HumanoidRootPart") then
        Character.HumanoidRootPart.CFrame = CFrame
    end
end

-- Attack Function
local function Attack()
    local Combat = ReplicatedStorage:FindFirstChild("Combat")
    if Combat and Combat:FindFirstChild("Melee") then
        Combat.Melee:FireServer()
    end
end

-- Auto Farm Level Function
local function AutoFarmLevel()
    spawn(function()
        while AutoFarmEnabled do
            local quest = GetRecommendedQuest()
            if quest and quest.Name ~= "Unknown" then
                -- Take Quest Logic
                local questGiver = Workspace:FindFirstChild(quest.Name)
                if questGiver then
                    -- Teleport to quest giver and get quest
                    TeleportTo(questGiver.CFrame)
                    wait(1)
                    -- Quest taking logic here
                end
                
                -- Find and attack enemies
                for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
                    if enemy.Name == quest.NPC and enemy:FindFirstChild("HumanoidRootPart") then
                        repeat
                            TeleportTo(enemy.HumanoidRootPart.CFrame * CFrame.new(0, 20, 0))
                            Attack()
                            wait(0.1)
                        until not enemy.Parent or enemy.Humanoid.Health <= 0 or not AutoFarmEnabled
                    end
                end
            end
            wait(1)
        end
    end)
end

-- Boss Data
local BossData = {
    [1] = { -- First Sea
        "The Gorilla King",
        "Bobby",
        "Yeti",
        "Mob Leader",
        "Vice Admiral",
        "Warden",
        "Chief Warden",
        "Swan",
        "Magma Admiral",
        "Fishman Lord",
        "Wysper",
        "Thunder God",
        "Cyborg"
    },
    [2] = { -- Second Sea
        "Diamond",
        "Jeremy",
        "Fajita",
        "Don Swan",
        "Smoke Admiral",
        "Cursed Captain",
        "Darkbeard",
        "Order",
        "Awakened Ice Admiral"
    },
    [3] = { -- Third Sea
        "Stone",
        "Island Empress",
        "Kilo Admiral",
        "Captain Elephant",
        "Beautiful Pirate",
        "rip_indra True Form",
        "Longma",
        "Soul Reaper",
        "Cake Queen"
    }
}

-- Location Data
local LocationData = {
    [1] = { -- First Sea
        ["Starter Island"] = CFrame.new(1, 16, 1),
        ["Jungle"] = CFrame.new(-1612, 37, 149),
        ["Pirate Village"] = CFrame.new(-1181, 5, 3803),
        ["Desert"] = CFrame.new(944, 21, 4481),
        ["Frozen Village"] = CFrame.new(1347, 104, -1319),
        ["Marine Fortress"] = CFrame.new(-2566, 7, 2045),
        ["Sky Island"] = CFrame.new(-4815, 718, -2619),
        ["Prison"] = CFrame.new(4875, 6, 734),
        ["Colosseum"] = CFrame.new(-1427, 8, -2673),
        ["Magma Village"] = CFrame.new(-5231, 9, -4530),
        ["Under Water Island"] = CFrame.new(61164, 5, 1819),
        ["Fountain City"] = CFrame.new(5127, 59, 4105)
    },
    [2] = { -- Second Sea locations would go here
        ["Kingdom of Rose"] = CFrame.new(-288, 7, 1387)
        -- Add more second sea locations
    },
    [3] = { -- Third Sea locations would go here
        ["Mansion"] = CFrame.new(-12471, 375, -7551)
        -- Add more third sea locations
    }
}

-- UI Creation
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")

ScreenGui.Name = "BloxFruitsHubButton"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton

UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45

UIScale.Parent = ImageButton
UIScale.Scale = 1

-- Button Animation
local function animateButton()
    local tween1 = TweenService:Create(
        UIScale,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Scale = 0.8}
    )
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = TweenService:Create(
            UIScale,
            TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Scale = 1.1}
        )
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = TweenService:Create(
                UIScale,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Scale = 1}
            )
            tween3:Play()
        end)
    end)
end

-- Window Toggle
local isHidden = false
ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    if isHidden then
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = true
            end
        end
        if Window and Window.Root then
            Window.Root.Visible = true
        end
        isHidden = false
    else
        for _, gui in pairs(game.CoreGui:GetChildren()) do
            if gui.Name == "ScreenGui" and gui:FindFirstChild("Frame") then
                gui.Enabled = false
            end
        end
        if Window and Window.Root then
            Window.Root.Visible = false
        end
        isHidden = true
    end
end)

wait(3)

-- Load Fluent Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create Window
local Window = Fluent:CreateWindow({
    Title = "ENCHANTED HUB | BLOX FRUITS",
    SubTitle = "Advanced Multi-Sea Script",
    TabWidth = 155,
    Size = UDim2.fromOffset(650, 550),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "zap" }),
    Raid = Window:AddTab({ Title = "Raid", Icon = "shield" }),
    V4 = Window:AddTab({ Title = "V4 Awakening", Icon = "star" }),
    PvP = Window:AddTab({ Title = "PvP", Icon = "sword" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Sea = Window:AddTab({ Title = "Sea", Icon = "anchor" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- MAIN TAB
Tabs.Main:AddParagraph({
    Title = "Combat Settings",
    Content = "Configure your weapon and combat preferences"
})

local WeaponDropdown = Tabs.Main:AddDropdown("WeaponDropdown", {
    Title = "Choose Weapon",
    Values = {"Melee", "Sword", "Blox Fruit", "Gun"},
    Multi = false,
    Default = 1,
})

WeaponDropdown:OnChanged(function(Value)
    SelectedWeapon = Value
end)

local FastAttackToggle = Tabs.Main:AddToggle("FastAttack", {Title = "Fast Attack", Default = false })
FastAttackToggle:OnChanged(function(Value)
    -- Fast attack logic here
end)

local BringMobToggle = Tabs.Main:AddToggle("BringMob", {Title = "Bring Mob", Default = false })
BringMobToggle:OnChanged(function(Value)
    -- Bring mob logic here
end)

local AutoBusoToggle = Tabs.Main:AddToggle("AutoBuso", {Title = "Auto Buso Haki", Default = false })
AutoBusoToggle:OnChanged(function(Value)
    -- Auto buso haki logic here
end)

Tabs.Main:AddParagraph({
    Title = "SPECIAL",
    Content = "Special features and utilities"
})

local FruitStockButton = Tabs.Main:AddButton({
    Title = "Open Fruit Stock",
    Description = "Check current fruit stock",
    Callback = function()
        -- Open fruit stock logic
    end
})

local ESPFruitToggle = Tabs.Main:AddToggle("ESPFruit", {Title = "ESP Fruit", Default = false })
ESPFruitToggle:OnChanged(function(Value)
    -- ESP fruit logic here
end)

local FruitNotifToggle = Tabs.Main:AddToggle("FruitNotif", {Title = "Fruit Notification", Default = false })
FruitNotifToggle:OnChanged(function(Value)
    -- Fruit notification logic here
end)

local BringFruitToggle = Tabs.Main:AddToggle("BringFruit", {Title = "Bring Fruit", Default = false })
BringFruitToggle:OnChanged(function(Value)
    -- Bring fruit logic here
end)

local StoreFruitToggle = Tabs.Main:AddToggle("StoreFruit", {Title = "Store Fruit", Default = false })
StoreFruitToggle:OnChanged(function(Value)
    -- Store fruit logic here
end)

-- Sea-specific features
if CurrentSea == 1 then
    local AutoSaberToggle = Tabs.Main:AddToggle("AutoSaber", {Title = "Auto Saber Sword", Default = false })
    AutoSaberToggle:OnChanged(function(Value)
        -- Auto saber logic here
    end)
    
    local AutoSecondSeaToggle = Tabs.Main:AddToggle("AutoSecondSea", {Title = "Auto Second Sea Quest", Default = false })
    AutoSecondSeaToggle:OnChanged(function(Value)
        -- Auto second sea quest logic here
    end)
elseif CurrentSea == 2 then
    local AutoRaceV2Toggle = Tabs.Main:AddToggle("AutoRaceV2", {Title = "Auto Race V2", Default = false })
    AutoRaceV2Toggle:OnChanged(function(Value)
        -- Auto race V2 logic here
    end)
    
    local AutoRaceV3Toggle = Tabs.Main:AddToggle("AutoRaceV3", {Title = "Auto Race V3", Default = false })
    AutoRaceV3Toggle:OnChanged(function(Value)
        -- Auto race V3 logic here
    end)
end

Tabs.Main:AddParagraph({
    Title = "STATS",
    Content = "Player Statistics"
})

local function UpdateStats()
    local stats = GetPlayerStats()
    return string.format(
        "Level: %d\nMoney: %d\nFragments: %d\nRace: %s\nBounty: %d\nSea: %d",
        stats.Level, stats.Money, stats.Fragments, stats.Race, stats.Bounty, stats.Sea
    )
end

local StatsLabel = Tabs.Main:AddParagraph({
    Title = "Current Stats",
    Content = UpdateStats()
})

-- Update stats every 5 seconds
spawn(function()
    while true do
        wait(5)
        StatsLabel:SetDesc(UpdateStats())
    end
end)

-- AUTO FARM TAB
local AutoFarmLevelToggle = Tabs.AutoFarm:AddToggle("AutoFarmLevel", {Title = "Auto Farm Level", Default = false })
AutoFarmLevelToggle:OnChanged(function(Value)
    AutoFarmEnabled = Value
    if Value then
        AutoFarmLevel()
    end
end)

local AutoFarmNearestToggle = Tabs.AutoFarm:AddToggle("AutoFarmNearest", {Title = "Auto Farm Nearest Mobs", Default = false })
AutoFarmNearestToggle:OnChanged(function(Value)
    -- Auto farm nearest mobs logic here
end)

Tabs.AutoFarm:AddParagraph({
    Title = "Boss Section",
    Content = "Boss farming features"
})

local BossDropdown = Tabs.AutoFarm:AddDropdown("BossDropdown", {
    Title = "Select Boss",
    Values = BossData[CurrentSea] or {},
    Multi = false,
    Default = 1,
})

BossDropdown:OnChanged(function(Value)
    SelectedBoss = Value
end)

local KillSelectedBossButton = Tabs.AutoFarm:AddButton({
    Title = "Kill Selected Boss",
    Description = "Farm the selected boss with quest",
    Callback = function()
        -- Kill selected boss logic
    end
})

local KillAllBossesToggle = Tabs.AutoFarm:AddToggle("KillAllBosses", {Title = "Kill All Bosses", Default = false })
KillAllBossesToggle:OnChanged(function(Value)
    -- Kill all bosses logic here
end)

Tabs.AutoFarm:AddParagraph({
    Title = "SPECIAL FARM",
    Content = "Special farming features"
})

local AutoBonesToggle = Tabs.AutoFarm:AddToggle("AutoBones", {Title = "Auto Farm Bones", Default = false })
AutoBonesToggle:OnChanged(function(Value)
    -- Auto farm bones logic here
end)

local AutoRipIndraToggle = Tabs.AutoFarm:AddToggle("AutoRipIndra", {Title = "Auto Rip Indra", Default = false })
AutoRipIndraToggle:OnChanged(function(Value)
    -- Auto rip indra logic here
end)

local AutoDoughPrinceToggle = Tabs.AutoFarm:AddToggle("AutoDoughPrince", {Title = "Auto Dough Prince", Default = false })
AutoDoughPrinceToggle:OnChanged(function(Value)
    -- Auto dough prince logic here
end)

local AutoDoughKingToggle = Tabs.AutoFarm:AddToggle("AutoDoughKing", {Title = "Auto Dough King", Default = false })
AutoDoughKingToggle:OnChanged(function(Value)
    -- Auto dough king logic here
end)

-- RAID TAB
if CurrentSea >= 2 then
    local ChipDropdown = Tabs.Raid:AddDropdown("ChipDropdown", {
        Title = "Buy Chip",
        Values = {"Flame", "Ice", "Quake", "Light", "Dark", "String", "Barrier", "Rubber", "Magma", "Door"},
        Multi = false,
        Default = 1,
    })
    
    ChipDropdown:OnChanged(function(Value)
        SelectedChip = Value
    end)
    
    local BuyChipButton = Tabs.Raid:AddButton({
        Title = "Buy Selected Chip",
        Description = "Purchase the selected raid chip",
        Callback = function()
            -- Buy chip logic
        end
    })
    
    local KillAuraToggle = Tabs.Raid:AddToggle("KillAura", {Title = "Kill Aura", Default = false })
    KillAuraToggle:OnChanged(function(Value)
        KillAuraEnabled = Value
        -- Kill aura logic here
    end)
else
    Tabs.Raid:AddParagraph({
        Title = "Access Restricted",
        Content = "You need to be in Second Sea to access this tab features"
    })
end

-- V4 TAB
if CurrentSea >= 3 then
    Tabs.V4:AddParagraph({
        Title = "V4 Awakening",
        Content = "V4 race awakening features will be added here"
    })
else
    Tabs.V4:AddParagraph({
        Title = "Access Restricted",
        Content = "You need to be in Third Sea to access this tab features"
    })
end

-- PVP TAB
Tabs.PvP:AddParagraph({
    Title = "PvP Features",
    Content = "Player vs Player combat features"
})

local PvPKillAuraToggle = Tabs.PvP:AddToggle("PvPKillAura", {Title = "PvP Kill Aura", Default = false })
PvPKillAuraToggle:OnChanged(function(Value)
    -- PvP kill aura logic here
end)

local AutoBountyToggle = Tabs.PvP:AddToggle("AutoBounty", {Title = "Auto Bounty Hunt", Default = false })
AutoBountyToggle:OnChanged(function(Value)
    -- Auto bounty hunt logic here
end)

-- TELEPORT TAB
local LocationDropdown = Tabs.Teleport:AddDropdown("LocationDropdown", {
    Title = "Select Location",
    Values = LocationData[CurrentSea] and table.unpack({table.unpack(LocationData[CurrentSea])}) or {},
    Multi = false,
    Default = 1,
})

LocationDropdown:OnChanged(function(Value)
    SelectedLocation = Value
end)

local TeleportButton = Tabs.Teleport:AddButton({
    Title = "Teleport to Selected Place",
    Description = "Teleport to the selected location",
    Callback = function()
        if SelectedLocation and LocationData[CurrentSea][SelectedLocation] then
            TeleportTo(LocationData[CurrentSea][SelectedLocation])
        end
    end
})

-- Sea teleport buttons
if CurrentSea ~= 1 then
    local TeleportSea1Button = Tabs.Teleport:AddButton({
        Title = "Teleport to First Sea",
        Description = "Go to First Sea",
        Callback = function()
            game:GetService("TeleportService"):Teleport(2753915549, Player)
        end
    })
end

if CurrentSea ~= 2 and GetPlayerStats().Level >= 700 then
    local TeleportSea2Button = Tabs.Teleport:AddButton({
        Title = "Teleport to Second Sea",
        Description = "Go to Second Sea",
        Callback = function()
            game:GetService("TeleportService"):Teleport(4442272183, Player)
        end
    })
end

if CurrentSea ~= 3 and GetPlayerStats().Level >= 1500 then
    local TeleportSea3Button = Tabs.Teleport:AddButton({
        Title = "Teleport to Third Sea",
        Description = "Go to Third Sea",
        Callback = function()
            game:GetService("TeleportService"):Teleport(7449423635, Player)
        end
    })
end

-- SEA TAB
if CurrentSea >= 3 then
    local SeaEventDropdown = Tabs.Sea:AddDropdown("SeaEventDropdown", {
        Title = "Choose Sea Event",
        Values = {"Kitsune Island", "Azure Ember", "Leviathan"},
        Multi = false,
        Default = 1,
    })
    
    Tabs.Sea:AddParagraph({
        Title = "Special Sea Events",
        Content = "Automated sea event farming"
    })
    
    local AutoKitsuneToggle = Tabs.Sea:AddToggle("AutoKitsune", {Title = "Auto Kitsune Island", Default = false })
    AutoKitsuneToggle:OnChanged(function(Value)
        -- Auto kitsune island logic here
    end)
    
    local AutoAzureToggle = Tabs.Sea:AddToggle("AutoAzure", {Title = "Auto Collect Azure", Default = false })
    AutoAzureToggle:OnChanged(function(Value)
        -- Auto collect azure logic here
    end)
    
    local AutoLeviathanToggle = Tabs.Sea:AddToggle("AutoLeviathan", {Title = "Auto Kill Leviathan", Default = false })
    AutoLeviathanToggle:OnChanged(function(Value)
        -- Auto kill leviathan logic here
    end)
else
    Tabs.Sea:AddParagraph({
        Title = "Access Restricted",
        Content = "You need to be in Third Sea to access this tab features"
    })
end

-- SETTINGS TAB
Tabs.Settings:AddParagraph({
    Title = "Script Settings",
    Content = "Configure script behavior and preferences"
})

-- Save Manager
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)

SaveManager:LoadAutoloadConfig()

print("Blox Fruits Enhanced Hub Loaded Successfully!")
print("Current Sea: " .. CurrentSea)
print("Player Level: " .. GetPlayerStats().Level)
