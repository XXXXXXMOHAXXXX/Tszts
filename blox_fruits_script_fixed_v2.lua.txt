local Show_Button = true
local Button_Icon = "rbxassetid://135671141026630"
local Button_Transparency = 0.1

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

-- Variables
local Player = Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")

-- Auto Farm Variables
local AutoFarm = false
local AutoQuest = false
local AutoBoss = false
local AutoStats = false
local AutoBuso = false
local AutoObservation = false
local AutoFruitFinder = false
local AutoSaber = false
local Auto2ndSeaQuest = false
local FastAttack = false
local AutoDodge = false
local ChestFinder = false
local PlayerESP = false
local AutoRejoin = false
local BringMobs = false
local SelectedWeapon = "Combat"
local FarmMethod = "Above"

-- Quest Variables
local CurrentQuest = nil
local QuestTarget = nil
local QuestPosition = nil

-- Boss Variables
local BossTargets = {
    ["Saber Expert"] = {Position = Vector3.new(-1405, 30, -3250), Level = 200},
    ["The Gorilla King"] = {Position = Vector3.new(-1129, 40, -451), Level = 25},
    ["Bobby"] = {Position = Vector3.new(-7678, 5566, -497), Level = 55},
    ["Yeti"] = {Position = Vector3.new(1201, 105, -1502), Level = 110},
    ["Mob Leader"] = {Position = Vector3.new(-2848, 7, 5356), Level = 120},
    ["Vice Admiral"] = {Position = Vector3.new(-5026, 28, 4324), Level = 130},
    ["Warden"] = {Position = Vector3.new(4854, 15, 740), Level = 175},
    ["Chief Warden"] = {Position = Vector3.new(4854, 15, 740), Level = 200},
    ["Swan"] = {Position = Vector3.new(2284, 15, 808), Level = 240},
    ["Magma Admiral"] = {Position = Vector3.new(-5530, 22, 8466), Level = 350},
    ["Fishman Lord"] = {Position = Vector3.new(61922, 31, 1569), Level = 425},
    ["Wysper"] = {Position = Vector3.new(-7925, 5545, -636), Level = 500},
    ["Thunder God"] = {Position = Vector3.new(-7926, 5610, -2582), Level = 575},
    ["Cyborg"] = {Position = Vector3.new(6041, 52, 3849), Level = 675}
}

-- Weapon Lists
local MeleeWeapons = {"Combat", "Black Leg", "Electro", "Fishman Karate", "Dragon Claw", "Superhuman"}
local SwordWeapons = {"Katana", "Cutlass", "Dual Katana", "Iron Mace", "Triple Katana", "Pipe", "Dual Headed Blade", "Bisento", "Shark Saw"}
local GunWeapons = {"Slingshot", "Musket", "Flintlock", "Refined Flintlock", "Cannon", "Kabucha"}

-- Quest Data for Sea 1
local QuestData = {
    [1] = {
        QuestGiver = "Quest1",
        Enemy = "Bandit",
        Position = Vector3.new(1059, 17, 1547),
        QuestPos = Vector3.new(-7, 5, 1428),
        Level = {1, 9}
    },
    [2] = {
        QuestGiver = "JungleQuest",
        Enemy = "Monkey",
        Position = Vector3.new(-1448, 88, -91),
        QuestPos = Vector3.new(-1598, 37, 153),
        Level = {15, 29}
    },
    [3] = {
        QuestGiver = "BuggyQuest1", 
        Enemy = "Pirate",
        Position = Vector3.new(-1181, 5, 3848),
        QuestPos = Vector3.new(-1140, 5, 3828),
        Level = {30, 59}
    },
    [4] = {
        QuestGiver = "DesertQuest",
        Enemy = "Desert Bandit",
        Position = Vector3.new(924, 7, 4481),
        QuestPos = Vector3.new(897, 7, 4388),
        Level = {60, 89}
    },
    [5] = {
        QuestGiver = "SnowQuest",
        Enemy = "Snow Bandit",
        Position = Vector3.new(1354, 87, -1392),
        QuestPos = Vector3.new(1386, 87, -1297),
        Level = {90, 119}
    },
    [6] = {
        QuestGiver = "MarineQuest2",
        Enemy = "Chief Petty Officer",
        Position = Vector3.new(-4881, 21, 4093),
        QuestPos = Vector3.new(-5036, 28, 4324),
        Level = {120, 149}
    },
    [7] = {
        QuestGiver = "SkyQuest",
        Enemy = "Sky Bandit",
        Position = Vector3.new(-4970, 717, -2622),
        QuestPos = Vector3.new(-4841, 718, -2623),
        Level = {150, 174}
    },
    [8] = {
        QuestGiver = "SkyQuest",
        Enemy = "Dark Master",
        Position = Vector3.new(-5250, 390, -2272),
        QuestPos = Vector3.new(-4841, 718, -2623),
        Level = {175, 189}
    },
    [9] = {
        QuestGiver = "ColosseumQuest",
        Enemy = "Toga Warrior",
        Position = Vector3.new(-1157, 23, 1971),
        QuestPos = Vector3.new(-1576, 7, 1713),
        Level = {190, 249}
    },
    [10] = {
        QuestGiver = "ColosseumQuest",
        Enemy = "Gladiator",
        Position = Vector3.new(-1376, 23, 1971),
        QuestPos = Vector3.new(-1576, 7, 1713),
        Level = {250, 299}
    },
    [11] = {
        QuestGiver = "MagmaQuest",
        Enemy = "Military Soldier",
        Position = Vector3.new(-5850, 22, 8550),
        QuestPos = Vector3.new(-5316, 12, 8515),
        Level = {300, 324}
    },
    [12] = {
        QuestGiver = "MagmaQuest",
        Enemy = "Military Spy",
        Position = Vector3.new(-5815, 84, 8820),
        QuestPos = Vector3.new(-5316, 12, 8515),
        Level = {325, 374}
    },
    [13] = {
        QuestGiver = "FishmanQuest",
        Enemy = "Fishman Warrior",
        Position = Vector3.new(61122, 19, 1569),
        QuestPos = Vector3.new(61122, 18, 1569),
        Level = {375, 399}
    },
    [14] = {
        QuestGiver = "FishmanQuest",
        Enemy = "Fishman Commando",
        Position = Vector3.new(61922, 19, 1569),
        QuestPos = Vector3.new(61122, 18, 1569),
        Level = {400, 449}
    },
    [15] = {
        QuestGiver = "SkyExp1Quest",
        Enemy = "God's Guard",
        Position = Vector3.new(-4698, 845, -1912),
        QuestPos = Vector3.new(-7862, 5545, -380),
        Level = {450, 474}
    },
    [16] = {
        QuestGiver = "SkyExp1Quest",
        Enemy = "Shanda",
        Position = Vector3.new(-7678, 5545, -502),
        QuestPos = Vector3.new(-7862, 5545, -380),
        Level = {475, 524}
    },
    [17] = {
        QuestGiver = "SkyExp2Quest",
        Enemy = "Royal Squad",
        Position = Vector3.new(-7624, 5658, -1467),
        QuestPos = Vector3.new(-7902, 5635, -1411),
        Level = {525, 549}
    },
    [18] = {
        QuestGiver = "SkyExp2Quest",
        Enemy = "Royal Soldier",
        Position = Vector3.new(-7836, 5658, -1637),
        QuestPos = Vector3.new(-7902, 5635, -1411),
        Level = {550, 624}
    },
    [19] = {
        QuestGiver = "FountainQuest",
        Enemy = "Galley Pirate",
        Position = Vector3.new(5551, 4, 3946),
        QuestPos = Vector3.new(5256, 39, 4050),
        Level = {625, 649}
    },
    [20] = {
        QuestGiver = "FountainQuest",
        Enemy = "Galley Captain",
        Position = Vector3.new(5441, 28, 4216),
        QuestPos = Vector3.new(5256, 39, 4050),
        Level = {650, 700}
    }
}

-- ESP Variables
local ESPObjects = {}

-- UI Creation
local ScreenGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local UIGradient = Instance.new("UIGradient")
local UIScale = Instance.new("UIScale")

ScreenGui.Name = "BloxFruitsHub"
ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = Button_Transparency
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.05, 0, 0.1, 0)
ImageButton.Size = UDim2.new(0, 70, 0, 70)
ImageButton.Image = Button_Icon
ImageButton.Draggable = true
ImageButton.ImageTransparency = 0

UICorner.CornerRadius = UDim.new(0, 20)
UICorner.Parent = ImageButton

UIStroke.Parent = ImageButton
UIStroke.Color = Color3.fromRGB(0, 150, 255)
UIStroke.Thickness = 4
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

UIGradient.Parent = ImageButton
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 206, 250)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 130, 180))
}
UIGradient.Rotation = 45

UIScale.Parent = ImageButton
UIScale.Scale = 1

-- Animation Function
local function animateButton()
    local tween1 = TweenService:Create(
        UIScale,
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Scale = 0.8}
    )
    tween1:Play()
    tween1.Completed:Connect(function()
        local tween2 = TweenService:Create(
            UIScale,
            TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {Scale = 1.1}
        )
        tween2:Play()
        tween2.Completed:Connect(function()
            local tween3 = TweenService:Create(
                UIScale,
                TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {Scale = 1}
            )
            tween3:Play()
        end)
    end)
end

-- Utility Functions
local function toPosition(pos)
    return Vector3.new(pos.X, pos.Y, pos.Z)
end

local function getWeaponEquipped()
    for _, item in pairs(Player.Character:GetChildren()) do
        if item:IsA("Tool") then
            return item
        end
    end
    return nil
end

local function getAllWeapons()
    local weapons = {}
    for _, item in pairs(Player.Backpack:GetChildren()) do
        if item:IsA("Tool") then
            table.insert(weapons, item.Name)
        end
    end
    for _, item in pairs(Player.Character:GetChildren()) do
        if item:IsA("Tool") then
            table.insert(weapons, item.Name)
        end
    end
    return weapons
end

local function equipWeapon(weaponName)
    local weapon = Player.Backpack:FindFirstChild(weaponName)
    if weapon then
        Humanoid:EquipTool(weapon)
        wait(math.random(200, 400) / 1000) -- Human-like delay
    end
end

-- Enhanced M1 Attack System with Very High Range
local function performM1Attack(targetEnemy)
    if not targetEnemy then return end
    
    local tool = getWeaponEquipped()
    if tool then
        -- Enhanced hitbox detection
        local distance = (RootPart.Position - targetEnemy.HumanoidRootPart.Position).Magnitude
        
        if distance <= AttackRange then
            -- Multiple attack methods for human-like behavior
            spawn(function()
                -- Method 1: Direct tool activation
                tool:Activate()
                
                -- Method 2: Combat framework
                pcall(function()
                    local CombatFramework = debug.getupvalues(require(Player.PlayerScripts.CombatFramework))
                    local CameraShaker = require(game.ReplicatedStorage.Util.CameraShaker)
                    CameraShaker:Start()
                    CombatFramework[2].activeController.hitboxMagnitude = AttackRange
                    CombatFramework[2].activeController.active = true
                    CombatFramework[2].activeController.timeToNextAttack = 0
                    CombatFramework[2].activeController:attack()
                end)
                
                -- Method 3: Game remotes
                pcall(function()
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("weaponChange", tool.Name)
                    game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", targetEnemy.HumanoidRootPart, 1, "")
                end)
            end)
        end
    end
end

-- Human-like movement patterns
local function humanMovement(targetPosition, height)
    if not RootPart or not targetPosition then return end
    
    local distance = (RootPart.Position - targetPosition).Magnitude
    
    if distance > 300 then
        -- Instant teleport for long distances
        RootPart.CFrame = CFrame.new(targetPosition + Vector3.new(0, height, 0))
    else
        -- Smooth movement for shorter distances
        local steps = math.ceil(distance / 50)
        for i = 1, steps do
            local progress = i / steps
            local currentPos = RootPart.Position:lerp(targetPosition + Vector3.new(0, height, 0), progress)
            RootPart.CFrame = CFrame.new(currentPos)
            wait(math.random(50, 100) / 1000) -- Human-like movement speed
        end
    end
end

local function teleportTo(position)
    if RootPart and position then
        RootPart.CFrame = CFrame.new(position)
        wait(0.1)
    end
end

local function fastTeleport(position)
    if RootPart and position then
        local distance = (RootPart.Position - position).Magnitude
        if distance > 250 then
            RootPart.CFrame = CFrame.new(position)
        else
            local tween = TweenService:Create(RootPart, TweenInfo.new(distance/150, Enum.EasingStyle.Linear), {CFrame = CFrame.new(position)})
            tween:Play()
            tween.Completed:Wait()
        end
    end
end

local function getNearestEnemy(enemyName)
    local nearestEnemy = nil
    local nearestDistance = math.huge
    
    for _, v in pairs(Workspace.Enemies:GetChildren()) do
        if v.Name == enemyName and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
            local distance = (RootPart.Position - v.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestEnemy = v
            end
        end
    end
    
    return nearestEnemy
end

local function getAllEnemies(enemyName)
    local enemies = {}
    for _, v in pairs(Workspace.Enemies:GetChildren()) do
        if v.Name == enemyName and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
            table.insert(enemies, v)
        end
    end
    return enemies
end

local function getNearestBoss()
    local nearestBoss = nil
    local nearestDistance = math.huge
    
    for bossName, data in pairs(BossTargets) do
        local boss = Workspace.Enemies:FindFirstChild(bossName)
        if boss and boss:FindFirstChild("Humanoid") and boss:FindFirstChild("HumanoidRootPart") and boss.Humanoid.Health > 0 then
            local distance = (RootPart.Position - boss.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestBoss = boss
            end
        end
    end
    
    return nearestBoss
end

local function getPlayerStats()
    local stats = {}
    if Player:FindFirstChild("Data") then
        stats.Level = Player.Data.Level.Value or 1
        stats.Beli = Player.Data.Beli.Value or 0
        stats.Race = Player.Data.Race.Value or "Human"
        stats.Bounty = Player.leaderstats and Player.leaderstats.Bounty and Player.leaderstats.Bounty.Value or 0
    else
        stats.Level = 1
        stats.Beli = 0
        stats.Race = "Human"
        stats.Bounty = 0
    end
    return stats
end

local function checkQuest()
    if Player.PlayerGui:FindFirstChild("Main") and Player.PlayerGui.Main:FindFirstChild("Quest") then
        return Player.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
    end
    return nil
end

local function getQuestForLevel(level)
    for i, questData in pairs(QuestData) do
        if level >= questData.Level[1] and level <= questData.Level[2] then
            return questData
        end
    end
    return nil
end

local function takeQuest(questData)
    if questData then
        teleportTo(questData.QuestPos)
        wait(0.5)
        
        local args = {
            [1] = "StartQuest",
            [2] = questData.QuestGiver,
            [3] = 1
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait(0.3)
    end
end

local function searchForChests()
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj.Name == "Chest" and obj:FindFirstChild("HumanoidRootPart") then
            local distance = (RootPart.Position - obj.HumanoidRootPart.Position).Magnitude
            if distance < 100 then
                teleportTo(obj.HumanoidRootPart.Position)
                wait(0.5)
                break
            end
        end
    end
end

local function searchForFruits()
    for _, obj in pairs(Workspace:GetChildren()) do
        if string.find(obj.Name, "Fruit") and obj:FindFirstChild("Handle") then
            local distance = (RootPart.Position - obj.Handle.Position).Magnitude
            if distance < 100 then
                teleportTo(obj.Handle.Position)
                wait(0.5)
                break
            end
        end
    end
end

local function bringMobsToPlayer(enemyName)
    if BringMobs then
        for _, enemy in pairs(Workspace.Enemies:GetChildren()) do
            if enemy.Name == enemyName and enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") then
                if enemy.Humanoid.Health > 0 then
                    local distance = (RootPart.Position - enemy.HumanoidRootPart.Position).Magnitude
                    if distance < 400 then
                        enemy.HumanoidRootPart.CFrame = RootPart.CFrame + Vector3.new(0, 30, 0)
                        enemy.HumanoidRootPart.CanCollide = false
                        enemy.Humanoid.WalkSpeed = 0
                        enemy.Humanoid.JumpPower = 0
                        
                        if enemy:FindFirstChild("Head") then
                            enemy.Head.CanCollide = false
                        end
                    end
                end
            end
        end
    end
end

-- Sea 1 Enemy Locations
local Sea1Enemies = {
    ["Bandit"] = {Position = Vector3.new(1059, 17, 1547), Level = {5, 7}},
    ["Monkey"] = {Position = Vector3.new(-1448, 88, -91), Level = {14, 16}},
    ["Gorilla"] = {Position = Vector3.new(-1129, 6, -451), Level = {20, 25}},
    ["Pirate"] = {Position = Vector3.new(-1181, 5, 3848), Level = {35, 40}},
    ["Brute"] = {Position = Vector3.new(-1145, 15, 4350), Level = {45, 50}},
    ["Desert Bandit"] = {Position = Vector3.new(924, 7, 4481), Level = {60, 65}},
    ["Desert Officer"] = {Position = Vector3.new(1608, 7, 4371), Level = {70, 75}},
    ["Snow Bandit"] = {Position = Vector3.new(1354, 87, -1392), Level = {90, 95}},
    ["Snowman"] = {Position = Vector3.new(1201, 87, -1502), Level = {100, 105}},
    ["Chief Petty Officer"] = {Position = Vector3.new(-4881, 21, 4093), Level = {120, 125}},
    ["Sky Bandit"] = {Position = Vector3.new(-4970, 717, -2622), Level = {150, 155}},
    ["Dark Master"] = {Position = Vector3.new(-5250, 390, -2272), Level = {175, 180}},
    ["Toga Warrior"] = {Position = Vector3.new(-1157, 23, 1971), Level = {250, 275}},
    ["Gladiator"] = {Position = Vector3.new(-1376, 23, 1971), Level = {275, 300}},
    ["Military Soldier"] = {Position = Vector3.new(-5850, 22, 8550), Level = {300, 325}},
    ["Military Spy"] = {Position = Vector3.new(-5815, 84, 8820), Level = {325, 350}},
    ["Fishman Warrior"] = {Position = Vector3.new(61122, 19, 1569), Level = {375, 400}},
    ["Fishman Commando"] = {Position = Vector3.new(61922, 19, 1569), Level = {400, 425}},
    ["God's Guard"] = {Position = Vector3.new(-4698, 845, -1912), Level = {450, 475}},
    ["Shanda"] = {Position = Vector3.new(-7678, 5545, -502), Level = {475, 500}},
    ["Royal Squad"] = {Position = Vector3.new(-7624, 5658, -1467), Level = {525, 550}},
    ["Royal Soldier"] = {Position = Vector3.new(-7836, 5658, -1637), Level = {550, 600}},
    ["Galley Pirate"] = {Position = Vector3.new(5551, 4, 3946), Level = {625, 650}},
    ["Galley Captain"] = {Position = Vector3.new(5441, 28, 4216), Level = {650, 675}}
}

-- Sea 1 Island Teleports
local Sea1Islands = {
    ["Starter Island"] = Vector3.new(1059, 17, 1547),
    ["Marine Base"] = Vector3.new(-2573, 7, -3088),
    ["Jungle"] = Vector3.new(-1448, 88, -91),
    ["Pirate Village"] = Vector3.new(-1181, 5, 3848),
    ["Desert"] = Vector3.new(924, 7, 4481),
    ["Snow Island"] = Vector3.new(1354, 87, -1392),
    ["Marine Fortress"] = Vector3.new(-4881, 21, 4093),
    ["Sky Island"] = Vector3.new(-4970, 717, -2622),
    ["Prison"] = Vector3.new(4854, 5, 740),
    ["Colosseum"] = Vector3.new(-1427, 7, 1878),
    ["Magma Village"] = Vector3.new(-5850, 22, 8550),
    ["Under Water Island"] = Vector3.new(61122, 19, 1569),
    ["Upper Skylands"] = Vector3.new(-7678, 5545, -502),
    ["Sky Island 2"] = Vector3.new(-4607, 872, -1667),
    ["Sky Island 3"] = Vector3.new(-7836, 5658, -1637),
    ["Fountain City"] = Vector3.new(5127, 59, 4105)
}

-- Enhanced Attack System Variables
local OriginalHitbox = nil
local AttackRange = 60 -- Very high M1 range
local AttackHeight = 30 -- Attack from above height

-- Auto Farm Function
local function startAutoFarm()
    spawn(function()
        while AutoFarm do
            wait(0.1)
            
            local enemy = getNearestEnemy()
            if enemy and enemy:FindFirstChild("HumanoidRootPart") and enemy.Humanoid.Health > 0 then
                -- Equip weapon
                equipWeapon(SelectedWeapon)
                
                -- Position based on farm method
                local targetPosition
                if FarmMethod == "Above" then
                    targetPosition = enemy.HumanoidRootPart.CFrame + Vector3.new(0, 15, 0)
                elseif FarmMethod == "Behind" then
                    targetPosition = enemy.HumanoidRootPart.CFrame + Vector3.new(0, 0, -10)
                else
                    targetPosition = enemy.HumanoidRootPart.CFrame
                end
                
                -- Teleport to enemy
                RootPart.CFrame = targetPosition
                
                -- Attack
                useWeaponSkill(1)
                
                -- Fast attack
                spawn(function()
                    local combat = ReplicatedStorage.CombatFramework.RigLib.Weld
                    if combat then
                        pcall(function()
                            combat:FireServer()
                        end)
                    end
                end)
            else
                -- Find new enemy area based on level
                local playerLevel = Player.Data.Level.Value
                for enemyName, data in pairs(Sea1Enemies) do
                    if playerLevel >= data.Level[1] and playerLevel <= data.Level[2] + 50 then
                        teleportTo(data.Position)
                        wait(2)
                        break
                    end
                end
            end
        end
    end)
end

-- Auto Stats Function
local function startAutoStats()
    spawn(function()
        while AutoStats do
            wait(1)
            
            local args = {
                [1] = "AddPoint",
                [2] = "Melee",
                [3] = 1
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
            
            wait(0.1)
            
            local args2 = {
                [1] = "AddPoint",
                [2] = "Defense",
                [3] = 1
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args2))
        end
    end)
end

-- Auto Buso Function
local function startAutoBuso()
    spawn(function()
        while AutoBuso do
            wait(1)
            local args = {
                [1] = "Buso"
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end
    end)
end

-- Auto Observation Function
local function startAutoObservation()
    spawn(function()
        while AutoObservation do
            wait(1)
            local args = {
                [1] = "Ken",
                [2] = true
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end
    end)
end

-- Enhanced Main Auto Farm Function with Human Behavior
local function startMainAutoFarm()
    spawn(function()
        while AutoFarm do
            wait(math.random(80, 150) / 1000) -- Human-like main loop delay
            
            local playerLevel = getPlayerStats().Level
            local questData = getQuestForLevel(playerLevel)
            
            if not questData then
                print("No suitable quest found for level " .. playerLevel)
                wait(5)
                continue
            end
            
            -- Human-like quest checking behavior
            local currentQuest = checkQuest()
            if not currentQuest or not string.find(currentQuest, questData.Enemy) then
                print("Taking quest for: " .. questData.Enemy)
                takeQuest(questData)
                wait(math.random(800, 1200) / 1000) -- Human delay after quest
            end
            
            -- Enhanced enemy detection with preference for groups
            local enemies = getAllEnemies(questData.Enemy)
            local targetEnemy = nil
            
            if #enemies > 0 then
                -- Prefer enemies that are close together (human behavior)
                local bestEnemy = nil
                local bestScore = 0
                
                for _, enemy in pairs(enemies) do
                    if enemy:FindFirstChild("HumanoidRootPart") and enemy.Humanoid.Health > 0 then
                        local nearbyCount = 0
                        for _, otherEnemy in pairs(enemies) do
                            if otherEnemy ~= enemy and otherEnemy:FindFirstChild("HumanoidRootPart") then
                                local distance = (enemy.HumanoidRootPart.Position - otherEnemy.HumanoidRootPart.Position).Magnitude
                                if distance < 50 then
                                    nearbyCount = nearbyCount + 1
                                end
                            end
                        end
                        
                        if nearbyCount > bestScore then
                            bestScore = nearbyCount
                            bestEnemy = enemy
                        end
                    end
                end
                
                targetEnemy = bestEnemy or enemies[1]
            end
            
            if targetEnemy and targetEnemy:FindFirstChild("HumanoidRootPart") and targetEnemy.Humanoid.Health > 0 then
                -- Equip weapon with human delay
                if getWeaponEquipped() == nil or getWeaponEquipped().Name ~= SelectedWeapon then
                    equipWeapon(SelectedWeapon)
                end
                
                -- Bring mobs if enabled (human-like grouping)
                if BringMobs then
                    bringMobsToPlayer(questData.Enemy)
                    wait(math.random(200, 400) / 1000)
                end
                
                -- Always position ABOVE enemy for large hitbox (only above method)
                local enemyPos = targetEnemy.HumanoidRootPart.Position
                local abovePosition = Vector3.new(enemyPos.X, enemyPos.Y + AttackHeight, enemyPos.Z)
                
                -- Human-like positioning with slight randomization
                local randomOffset = Vector3.new(
                    math.random(-3, 3),
                    math.random(25, 35), -- Always above
                    math.random(-3, 3)
                )
                
                local finalPosition = enemyPos + randomOffset
                humanMovement(finalPosition, 0)
                
                -- Enhanced M1 attack system with very high range
                performM1Attack(targetEnemy)
                
                -- Fast attack enhancement
                if FastAttack then
                    spawn(function()
                        for i = 1, math.random(2, 4) do -- Human-like attack bursts
                            pcall(function()
                                local CombatFramework = debug.getupvalues(require(Player.PlayerScripts.CombatFramework))
                                if CombatFramework and CombatFramework[2] then
                                    CombatFramework[2].activeController.hitboxMagnitude = AttackRange
                                    CombatFramework[2].activeController.active = true
                                    CombatFramework[2].activeController.timeToNextAttack = 0
                                    CombatFramework[2].activeController:attack()
                                end
                            end)
                            wait(math.random(30, 60) / 1000)
                        end
                    end)
                end
                
                -- Auto dodge with human-like patterns
                if AutoDodge and targetEnemy.Humanoid.Health > 0 then
                    if math.random(1, 100) <= 25 then -- 25% chance to dodge (human behavior)
                        local dodgeDirection = math.random(1, 4)
                        local dodgeDistance = math.random(5, 12)
                        local dodgePos = RootPart.Position
                        
                        if dodgeDirection == 1 then
                            dodgePos = dodgePos + Vector3.new(dodgeDistance, 0, 0)
                        elseif dodgeDirection == 2 then
                            dodgePos = dodgePos + Vector3.new(-dodgeDistance, 0, 0)
                        elseif dodgeDirection == 3 then
                            dodgePos = dodgePos + Vector3.new(0, 0, dodgeDistance)
                        else
                            dodgePos = dodgePos + Vector3.new(0, 0, -dodgeDistance)
                        end
                        
                        RootPart.CFrame = CFrame.new(dodgePos + Vector3.new(0, AttackHeight, 0))
                        wait(math.random(200, 500) / 1000)
                    end
                end
                
                -- Check if enemy is dead and add human delay
                if targetEnemy.Humanoid.Health <= 0 then
                    wait(math.random(300, 600) / 1000) -- Human delay after kill
                end
                
            else
                -- Go to enemy spawn location with human behavior
                print("Going to enemy location: " .. questData.Enemy)
                humanMovement(questData.Position, 10)
                wait(math.random(2000, 4000) / 1000) -- Human wait time for spawns
            end
            
            -- Random breaks (very human-like)
            if math.random(1, 100) <= 3 then -- 3% chance for short break
                wait(math.random(2, 5))
            end
        end
    end)
end

local function startAutoBoss()
    spawn(function()
        while AutoBoss do
            wait(0.5)
            
            local targetBoss = getNearestBoss()
            
            if targetBoss and targetBoss:FindFirstChild("HumanoidRootPart") and targetBoss.Humanoid.Health > 0 then
                equipWeapon(SelectedWeapon)
                
                -- Position above boss for better combat
                local bossPosition = targetBoss.HumanoidRootPart.CFrame + Vector3.new(0, 25, 0)
                RootPart.CFrame = bossPosition
                
                -- Enhanced attacking for bosses
                if FastAttack then
                    spawn(function()
                        pcall(function()
                            game:GetService("ReplicatedStorage").RigControllerEvent:FireServer("hit", targetBoss.HumanoidRootPart, 3, "")
                        end)
                    end)
                end
                
                local tool = getWeaponEquipped()
                if tool then
                    tool:Activate()
                end
                
            else
                -- Check boss spawn locations
                for bossName, data in pairs(BossTargets) do
                    local playerLevel = getPlayerStats().Level
                    if playerLevel >= data.Level then
                        fastTeleport(data.Position)
                        wait(3)
                        break
                    end
                end
            end
        end
    end)
end

local function startAutoQuest()
    spawn(function()
        while AutoQuest do
            wait(1)
            
            local playerLevel = getPlayerStats().Level
            local questData = getQuestForLevel(playerLevel)
            
            if questData then
                local currentQuest = checkQuest()
                if not currentQuest or not string.find(currentQuest, questData.Enemy) then
                    takeQuest(questData)
                    wait(1)
                end
            end
        end
    end)
end

local function startAutoFruitFinder()
    spawn(function()
        while AutoFruitFinder do
            wait(5)
            searchForFruits()
        end
    end)
end

local function startChestFinder()
    spawn(function()
        while ChestFinder do
            wait(3)
            searchForChests()
        end
    end)
end

local function startAutoSaber()
    spawn(function()
        while AutoSaber do
            wait(0.5)
            
            local playerLevel = getPlayerStats().Level
            if playerLevel >= 200 then
                -- Saber quest logic
                local args = {
                    [1] = "ProQuestProgress",
                    [2] = "SaberExpert"
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                
                -- Find and fight Saber Expert
                local saberExpert = Workspace.Enemies:FindFirstChild("Saber Expert")
                if saberExpert and saberExpert:FindFirstChild("HumanoidRootPart") then
                    equipWeapon(SelectedWeapon)
                    RootPart.CFrame = saberExpert.HumanoidRootPart.CFrame + Vector3.new(0, 20, 0)
                    
                    local tool = getWeaponEquipped()
                    if tool then
                        tool:Activate()
                    end
                else
                    fastTeleport(Vector3.new(-1405, 30, -3250))
                end
            end
        end
    end)
end

local function startAuto2ndSeaQuest()
    spawn(function()
        while Auto2ndSeaQuest do
            wait(1)
            
            local playerLevel = getPlayerStats().Level
            if playerLevel >= 700 then
                local args = {
                    [1] = "DressrosaQuestProgress",
                    [2] = "Dressrosa"
                }
                game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
                
                -- Complete the 2nd sea requirements
                fastTeleport(Vector3.new(-1926, 13, 1738))
                wait(2)
            end
        end
    end)
end

local function createPlayerESP()
    if PlayerESP then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local highlight = Instance.new("Highlight")
                highlight.Parent = player.Character
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                
                ESPObjects[player.Name] = highlight
            end
        end
    else
        for _, highlight in pairs(ESPObjects) do
            if highlight then
                highlight:Destroy()
            end
        end
        ESPObjects = {}
    end
end

local function setupAutoRejoin()
    if AutoRejoin then
        game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
            if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild('ErrorFrame') then
                game:GetService("TeleportService"):Teleport(game.PlaceId)
            end
        end)
        
        Players.PlayerRemoving:Connect(function(player)
            if player == Player then
                game:GetService("TeleportService"):Teleport(game.PlaceId)
            end
        end)
    end
end

-- Open/Close Functionality
local isHidden = false
local Window = nil

ImageButton.MouseButton1Click:Connect(function()
    animateButton()
    wait(0.2)
    if Window then
        if isHidden then
            Window.Root.Visible = true
            isHidden = false
        else
            Window.Root.Visible = false
            isHidden = true
        end
    end
end)

wait(3)

-- Load Fluent UI Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

Window = Fluent:CreateWindow({
    Title = "BLOX FRUITS SEA 1 | PREMIUM HUB",
    SubTitle = "Ultimate Auto Farm & Advanced Features",
    TabWidth = 140,
    Size = UDim2.fromOffset(700, 600),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Create Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "home" }),
    AutoFarm = Window:AddTab({ Title = "Auto Farm", Icon = "zap" }),
    Combat = Window:AddTab({ Title = "Combat", Icon = "sword" }),
    Stats = Window:AddTab({ Title = "Stats", Icon = "trending-up" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "map-pin" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "settings" })
}

-- Main Tab - Player Stats and Controls
local PlayerStatsSection = Tabs.Main:AddSection("Player Information")

local function updatePlayerStats()
    local stats = getPlayerStats()
    return "Level: " .. stats.Level .. " | Beli: " .. stats.Beli .. " | Race: " .. stats.Race .. " | Bounty: " .. stats.Bounty .. " | Sea: 1"
end

local PlayerStatsLabel = Tabs.Main:AddParagraph({
    Title = "Current Stats",
    Content = updatePlayerStats()
})

spawn(function()
    while true do
        wait(5)
        pcall(function()
            PlayerStatsLabel:SetDesc(updatePlayerStats())
        end)
    end
end)

local WeaponSection = Tabs.Main:AddSection("Weapon Selection")

local initialWeapons = {"Combat"}
pcall(function()
    initialWeapons = getAllWeapons()
    if #initialWeapons == 0 then
        initialWeapons = {"Combat", "Sword", "Blox Fruit"}
    end
end)

local WeaponDropdown = Tabs.Main:AddDropdown("WeaponSelect", {
    Title = "Choose Weapon",
    Values = initialWeapons,
    Multi = false,
    Default = 1,
})

WeaponDropdown:OnChanged(function(Value)
    SelectedWeapon = Value
    print("Selected weapon: " .. Value)
end)

Tabs.Main:AddButton({
    Title = "Refresh Weapons",
    Description = "Update weapon list",
    Callback = function()
        local weapons = getAllWeapons()
        if #weapons > 0 then
            WeaponDropdown:SetValues(weapons)
            print("Weapons refreshed: " .. #weapons .. " found")
        else
            print("No weapons found in inventory")
        end
    end
})

local ControlsSection = Tabs.Main:AddSection("Farm Controls")

local BringMobsToggle = Tabs.Main:AddToggle("BringMobs", {
    Title = "Bring Mobs",
    Description = "Pull enemies to your location for easier farming",
    Default = false
})

BringMobsToggle:OnChanged(function(Value)
    BringMobs = Value
    print("Bring Mobs: " .. tostring(Value))
end)

local MainAutoFarmToggle = Tabs.Main:AddToggle("MainAutoFarm", {
    Title = "Auto Farm (Level Based)",
    Description = "Automatically farm enemies based on your level with quest system",
    Default = false
})

MainAutoFarmToggle:OnChanged(function(Value)
    AutoFarm = Value
    if Value then
        print("Starting enhanced auto farm with human behavior...")
        startMainAutoFarm()
    else
        print("Auto farm stopped")
    end
end)

-- Auto Farm Tab
local AutoFarmSection = Tabs.AutoFarm:AddSection("Advanced Farming Features")

local FarmSettingsSection = Tabs.AutoFarm:AddSection("Farm Settings")

Tabs.AutoFarm:AddParagraph({
    Title = "Positioning Method",
    Content = "This script uses ABOVE positioning with very high M1 range (60 studs) for maximum efficiency and human-like behavior"
})

local AttackRangeSlider = Tabs.AutoFarm:AddSlider("AttackRange", {
    Title = "Attack Range",
    Description = "M1 attack range in studs",
    Default = 60,
    Min = 30,
    Max = 100,
    Rounding = 1,
    Callback = function(Value)
        AttackRange = Value
        print("Attack range set to: " .. Value)
    end
})

local AttackHeightSlider = Tabs.AutoFarm:AddSlider("AttackHeight", {
    Title = "Attack Height",
    Description = "Height above enemies for farming",
    Default = 30,
    Min = 15,
    Max = 50,
    Rounding = 1,
    Callback = function(Value)
        AttackHeight = Value
        print("Attack height set to: " .. Value)
    end
})

local AutoQuestToggle = Tabs.AutoFarm:AddToggle("AutoQuest", {
    Title = "Auto Quest",
    Description = "Automatically take and complete quests",
    Default = false
})

AutoQuestToggle:OnChanged(function(Value)
    AutoQuest = Value
    if Value then
        print("Auto Quest enabled")
        startAutoQuest()
    else
        print("Auto Quest disabled")
    end
end)

local SpecialQuestsSection = Tabs.AutoFarm:AddSection("Special Quests & Features")

local AutoSaberToggle = Tabs.AutoFarm:AddToggle("AutoSaber", {
    Title = "Auto Saber Quest",
    Description = "Automatically complete Saber sword quest (Level 200+)",
    Default = false
})

AutoSaberToggle:OnChanged(function(Value)
    AutoSaber = Value
    if Value then
        print("Auto Saber quest enabled")
        startAutoSaber()
    else
        print("Auto Saber quest disabled")
    end
end)

local Auto2ndSeaToggle = Tabs.AutoFarm:AddToggle("Auto2ndSea", {
    Title = "Auto 2nd Sea Quest",
    Description = "Automatically complete 2nd Sea requirements (Level 700+)",
    Default = false
})

Auto2ndSeaToggle:OnChanged(function(Value)
    Auto2ndSeaQuest = Value
    if Value then
        print("Auto 2nd Sea quest enabled")
        startAuto2ndSeaQuest()
    else
        print("Auto 2nd Sea quest disabled")
    end
end)

local AutoBossToggle = Tabs.AutoFarm:AddToggle("AutoBoss", {
    Title = "Auto Boss Farm",
    Description = "Automatically farm available bosses",
    Default = false
})

AutoBossToggle:OnChanged(function(Value)
    AutoBoss = Value
    if Value then
        print("Auto Boss farming enabled")
        startAutoBoss()
    else
        print("Auto Boss farming disabled")
    end
end)

local ItemFindersSection = Tabs.AutoFarm:AddSection("Item & Fruit Finders")

local AutoFruitFinderToggle = Tabs.AutoFarm:AddToggle("AutoFruitFinder", {
    Title = "Auto Fruit Finder",
    Description = "Automatically search and collect Devil Fruits",
    Default = false
})

AutoFruitFinderToggle:OnChanged(function(Value)
    AutoFruitFinder = Value
    if Value then
        print("Auto Fruit Finder enabled")
        startAutoFruitFinder()
    else
        print("Auto Fruit Finder disabled")
    end
end)

local ChestFinderToggle = Tabs.AutoFarm:AddToggle("ChestFinder", {
    Title = "Chest Finder",
    Description = "Automatically search and collect treasure chests",
    Default = false
})

ChestFinderToggle:OnChanged(function(Value)
    ChestFinder = Value
    if Value then
        print("Chest Finder enabled")
        startChestFinder()
    else
        print("Chest Finder disabled")
    end
end)

-- Combat Tab
local CombatSection = Tabs.Combat:AddSection("Combat Enhancements")

local FastAttackToggle = Tabs.Combat:AddToggle("FastAttack", {
    Title = "Fast Attack",
    Description = "Increase attack speed for faster combat",
    Default = false
})

FastAttackToggle:OnChanged(function(Value)
    FastAttack = Value
    print("Fast Attack: " .. tostring(Value))
end)

local AutoDodgeToggle = Tabs.Combat:AddToggle("AutoDodge", {
    Title = "Auto Dodge",
    Description = "Automatically dodge enemy attacks",
    Default = false
})

AutoDodgeToggle:OnChanged(function(Value)
    AutoDodge = Value
    print("Auto Dodge: " .. tostring(Value))
end)

local HakiSection = Tabs.Combat:AddSection("Haki Automation")

local AutoBusoToggle = Tabs.Combat:AddToggle("AutoBuso", {
    Title = "Auto Armament Haki",
    Description = "Automatically activate Armament Haki",
    Default = false
})

AutoBusoToggle:OnChanged(function(Value)
    AutoBuso = Value
    if Value then
        print("Auto Armament Haki enabled")
        startAutoBuso()
    else
        print("Auto Armament Haki disabled")
    end
end)

local AutoObservationToggle = Tabs.Combat:AddToggle("AutoObservation", {
    Title = "Auto Observation Haki",
    Description = "Automatically activate Observation Haki",
    Default = false
})

AutoObservationToggle:OnChanged(function(Value)
    AutoObservation = Value
    if Value then
        print("Auto Observation Haki enabled")
        startAutoObservation()
    else
        print("Auto Observation Haki disabled")
    end
end)

-- Stats Tab
local StatsSection = Tabs.Stats:AddSection("Auto Stats Allocation")

local AutoStatsToggle = Tabs.Stats:AddToggle("AutoStats", {
    Title = "Auto Stats",
    Description = "Automatically allocate stat points to Melee and Defense",
    Default = false
})

AutoStatsToggle:OnChanged(function(Value)
    AutoStats = Value
    if Value then
        print("Auto Stats enabled")
        startAutoStats()
    else
        print("Auto Stats disabled")
    end
end)

Tabs.Stats:AddButton({
    Title = "Reset Stats",
    Description = "Reset all stat points (requires Fragments)",
    Callback = function()
        local args = {
            [1] = "BlackbeardReward",
            [2] = "Refund",
            [3] = "1"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        print("Stats reset attempted")
    end
})

local StatsInfoSection = Tabs.Stats:AddSection("Stat Information")

local function updateStatsInfo()
    pcall(function()
        if Player:FindFirstChild("Data") and Player.Data:FindFirstChild("Stats") then
            local melee = Player.Data.Stats.Melee.Level.Value or 0
            local defense = Player.Data.Stats.Defense.Level.Value or 0
            local sword = Player.Data.Stats.Sword.Level.Value or 0
            local gun = Player.Data.Stats.Gun.Level.Value or 0
            local fruit = Player.Data.Stats["Demon Fruit"].Level.Value or 0
            local points = Player.Data.Points.Value or 0
            
            return "Melee: " .. melee .. " | Defense: " .. defense .. " | Sword: " .. sword .. " | Gun: " .. gun .. " | Fruit: " .. fruit .. " | Available Points: " .. points
        end
    end)
    return "Stats not available"
end

local StatsInfoLabel = Tabs.Stats:AddParagraph({
    Title = "Current Stats Distribution",
    Content = updateStatsInfo()
})

spawn(function()
    while true do
        wait(3)
        pcall(function()
            StatsInfoLabel:SetDesc(updateStatsInfo())
        end)
    end
end)

-- Teleport Tab
local EnemyTeleportSection = Tabs.Teleport:AddSection("Enemy Locations")

for i, questData in pairs(QuestData) do
    Tabs.Teleport:AddButton({
        Title = questData.Enemy,
        Description = "Level: " .. questData.Level[1] .. " - " .. questData.Level[2],
        Callback = function()
            teleportTo(questData.Position)
            print("Teleported to: " .. questData.Enemy)
        end
    })
end

local BossTeleportSection = Tabs.Teleport:AddSection("Boss Locations")

for bossName, data in pairs(BossTargets) do
    Tabs.Teleport:AddButton({
        Title = bossName,
        Description = "Required Level: " .. data.Level,
        Callback = function()
            teleportTo(data.Position)
            print("Teleported to boss: " .. bossName)
        end
    })
end

local IslandTeleportSection = Tabs.Teleport:AddSection("Island Teleports")

for islandName, position in pairs(Sea1Islands) do
    Tabs.Teleport:AddButton({
        Title = islandName,
        Description = "Teleport to " .. islandName,
        Callback = function()
            teleportTo(position)
            print("Teleported to: " .. islandName)
        end
    })
end

-- Misc Tab
local PlayerModsSection = Tabs.Misc:AddSection("Player Modifications")

Tabs.Misc:AddSlider("WalkSpeed", {
    Title = "Walk Speed",
    Description = "Change your walking speed",
    Default = 16,
    Min = 16,
    Max = 200,
    Rounding = 1,
    Callback = function(Value)
        Humanoid.WalkSpeed = Value
    end
})

Tabs.Misc:AddSlider("JumpPower", {
    Title = "Jump Power",
    Description = "Change your jump power",
    Default = 50,
    Min = 50,
    Max = 300,
    Rounding = 1,
    Callback = function(Value)
        Humanoid.JumpPower = Value
    end
})

Tabs.Misc:AddToggle("NoClip", {
    Title = "No Clip",
    Description = "Walk through walls",
    Default = false,
    Callback = function(Value)
        for _, part in pairs(Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = not Value
            end
        end
    end
})

Tabs.Misc:AddToggle("InfiniteJump", {
    Title = "Infinite Jump",
    Description = "Jump unlimited times",
    Default = false,
    Callback = function(Value)
        if Value then
            UserInputService.JumpRequest:Connect(function()
                if Humanoid then
                    Humanoid:ChangeState("Jumping")
                end
            end)
        end
    end
})

local UtilitySection = Tabs.Misc:AddSection("Utility Features")

local PlayerESPToggle = Tabs.Misc:AddToggle("PlayerESP", {
    Title = "Player ESP",
    Description = "See other players through walls",
    Default = false
})

PlayerESPToggle:OnChanged(function(Value)
    PlayerESP = Value
    createPlayerESP()
    print("Player ESP: " .. tostring(Value))
end)

local AutoRejoinToggle = Tabs.Misc:AddToggle("AutoRejoin", {
    Title = "Auto Rejoin",
    Description = "Automatically rejoin server if disconnected",
    Default = false
})

AutoRejoinToggle:OnChanged(function(Value)
    AutoRejoin = Value
    setupAutoRejoin()
    print("Auto Rejoin: " .. tostring(Value))
end)

Tabs.Misc:AddButton({
    Title = "Server Hop",
    Description = "Join a different server",
    Callback = function()
        game:GetService("TeleportService"):Teleport(game.PlaceId)
    end
})

Tabs.Misc:AddButton({
    Title = "Rejoin Server",
    Description = "Rejoin current server",
    Callback = function()
        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
    end
})

local ShopSection = Tabs.Misc:AddSection("Auto Buy Features")

Tabs.Misc:AddButton({
    Title = "Buy Random Fruit",
    Description = "Purchase a random Devil Fruit",
    Callback = function()
        local args = {
            [1] = "BloxfruitDealer",
            [2] = "1"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        print("Attempted to buy random fruit")
    end
})

Tabs.Misc:AddButton({
    Title = "Buy Katana",
    Description = "Purchase Katana sword",
    Callback = function()
        local args = {
            [1] = "BuyItem",
            [2] = "Katana"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        print("Attempted to buy Katana")
    end
})

Tabs.Misc:AddButton({
    Title = "Buy Slingshot",
    Description = "Purchase Slingshot gun",
    Callback = function()
        local args = {
            [1] = "BuyItem",
            [2] = "Slingshot"
        }
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        print("Attempted to buy Slingshot")
    end
})

-- Character update when respawning
Player.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
end)

-- Save Configuration
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("BloxFruitsSea1")
SaveManager:SetFolder("BloxFruitsSea1/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Misc)
SaveManager:BuildConfigSection(Tabs.Misc)

Window:SelectTab(1)

SaveManager:LoadAutoloadConfig()

-- Success Message
print("âœ… BLOX FRUITS SEA 1 PREMIUM SCRIPT LOADED!")
print("ðŸŽ¯ Features: Auto Farm with Quest System, Auto Boss, Auto Saber, Auto 2nd Sea")
print("âš¡ Combat: Fast Attack, Auto Dodge, Auto Haki")
print("ðŸ” Utilities: Fruit Finder, Chest Finder, Player ESP, Auto Rejoin")
print("ðŸ“Š All level-based farming with large hitbox and human-like behavior!")
print("ðŸŽ® Enjoy your enhanced Blox Fruits experience!")
